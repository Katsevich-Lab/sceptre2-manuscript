atac_GR <- GRanges(
seqnames = atac_data$chrom,
ranges = IRanges(start = atac_data$chromStart, end = atac_data$chromEnd)
)
# TF motif data
jaspar_tf_info <- readRDS(paste0(sceptre2_dir, "/data/jaspar/jaspar_tf_info_papalexi.rds"))
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
library(GenomicRanges)
library(dplyr)
library(plyranges)
library(readr)
library(plotgardener)
library(GenomicRanges)
library(genomation)
library(biomaRt)
library(kableExtra)
library(varhandle)
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
data_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# read in sceptre and seurat results
sceptre_path <- paste0(
data_dir, "results/discovery_analyses/",
"papalexi_gene_discovery_res.rds"
)
seurat_path <- paste0(
data_dir, "results/papalexi_analysis/",
"seurat_all_perturbations_results.rds"
)
sceptre_results <- readRDS(sceptre_path)
seurat_results <- readRDS(seurat_path)
# TSS information
gene_names <- sceptre_results |>
pull(response_id) |>
unique() |>
as.character()
ensembl <- useEnsembl(host = 'https://grch37.ensembl.org',
biomart = 'ENSEMBL_MART_ENSEMBL',
dataset = "hsapiens_gene_ensembl")
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name)) |>
dplyr::rename(gene = external_gene_name, chr = chromosome_name) |>
dplyr::select(gene, chr, TSS)
window_width <- 5e3
TSS_GR <- GRanges(
seqnames = TSS_info$chr,
ranges = IRanges(start = TSS_info$TSS-window_width,
end = TSS_info$TSS+window_width),
gene = TSS_info$gene,
TSS = TSS_info$TSS)
# ATAC-seq data
atac_data = readBigwig(
file = "/Users/kmason/data/projects/sceptre2/data/ATACseq/HP1_PMA_ctrl_TLR4_1hr%.bw",
chrom = NULL,
chromstart = 1,
chromend = .Machine$integer.max,
strand = "*",
params = NULL) |>
filter(score > quantile(score,0.75)) |>
filter(seqnames %in% c(as.character(1:22), "X", "Y"))%>%
dplyr::rename(chrom = seqnames,chromStart = start, chromEnd = end)
#atac_data <- read_csv(atac_data_fp) |>
#filter(P2686A > quantile(P2686A, 0.75))
atac_GR <- GRanges(
seqnames = atac_data$chrom,
ranges = IRanges(start = atac_data$chromStart, end = atac_data$chromEnd)
)
# TF motif data
jaspar_tf_info <- readRDS(paste0(sceptre2_dir, "/data/jaspar/jaspar_tf_info_papalexi.rds"))
TFs <- jaspar_tf_info |> pull(name) |> unique()
for(TF in TFs){
matrix_ids <- jaspar_tf_info |>
filter(name == TF) |>
pull(matrix_id)
# NOTE: Might have more than one motif per TF; use binding sites of all motifs
jaspar_data <- lapply(matrix_ids, function(matrix_id){
jaspar_filename <- paste0(matrix_id,"_hg19", ".tsv")
jaspar_data_fp <- paste0(sceptre2_dir, "/data/jaspar/", jaspar_filename)
jaspar_data <- read_tsv(jaspar_data_fp,
col_names = c("chr", "start", "end", "TF",
"score1", "score2", "strand"))
}) |>
data.table::rbindlist() |>
filter(score1 > quantile(score1, 0.75))
jaspar_GR <- GRanges(
seqnames = jaspar_data$chr,
ranges = IRanges(start = jaspar_data$start, end = jaspar_data$end)
)
atac_overlapping_motif_GR <- atac_GR |>
filter_by_overlaps(jaspar_GR)
target_genes <- TSS_GR |>
filter_by_overlaps(atac_overlapping_motif_GR) |>
as.data.frame() |>
pull(gene)
cat(sprintf("%s targets %s genes.\n", TF, length(target_genes)))
}
warnings()
View(jaspar_tf_info)
View(jaspar_tf_info)
View(atac_GR)
View(TSS_GR)
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position)) |>
dplyr::rename(gene = external_gene_name, chr = chromosome_name) |>
dplyr::select(gene, chr, TSS)
window_width <- 5e3
TSS_GR <- GRanges(
seqnames = TSS_info$chr,
ranges = IRanges(start = TSS_info$TSS-window_width,
end = TSS_info$TSS+window_width),
gene = TSS_info$gene,
TSS = TSS_info$TSS)
# ATAC-seq data
atac_data = readBigwig(
file = "/Users/kmason/data/projects/sceptre2/data/ATACseq/HP1_PMA_ctrl_TLR4_1hr%.bw",
chrom = NULL,
chromstart = 1,
chromend = .Machine$integer.max,
strand = "*",
params = NULL) |>
filter(score > quantile(score,0.75)) |>
filter(seqnames %in% c(as.character(1:22), "X", "Y"))%>%
dplyr::rename(chrom = seqnames,chromStart = start, chromEnd = end)
#atac_data <- read_csv(atac_data_fp) |>
#filter(P2686A > quantile(P2686A, 0.75))
atac_GR <- GRanges(
seqnames = atac_data$chrom,
ranges = IRanges(start = atac_data$chromStart, end = atac_data$chromEnd)
)
# TF motif data
jaspar_tf_info <- readRDS(paste0(sceptre2_dir, "/data/jaspar/jaspar_tf_info_papalexi.rds"))
TFs <- jaspar_tf_info |> pull(name) |> unique()
for(TF in TFs){
matrix_ids <- jaspar_tf_info |>
filter(name == TF) |>
pull(matrix_id)
# NOTE: Might have more than one motif per TF; use binding sites of all motifs
jaspar_data <- lapply(matrix_ids, function(matrix_id){
jaspar_filename <- paste0(matrix_id,"_hg19", ".tsv")
jaspar_data_fp <- paste0(sceptre2_dir, "/data/jaspar/", jaspar_filename)
jaspar_data <- read_tsv(jaspar_data_fp,
col_names = c("chr", "start", "end", "TF",
"score1", "score2", "strand"))
}) |>
data.table::rbindlist() |>
filter(score1 > quantile(score1, 0.75))
jaspar_GR <- GRanges(
seqnames = jaspar_data$chr,
ranges = IRanges(start = jaspar_data$start, end = jaspar_data$end)
)
atac_overlapping_motif_GR <- atac_GR |>
filter_by_overlaps(jaspar_GR)
target_genes <- TSS_GR |>
filter_by_overlaps(atac_overlapping_motif_GR) |>
as.data.frame() |>
pull(gene)
cat(sprintf("%s targets %s genes.\n", TF, length(target_genes)))
}
TFs
TF = "IRF1"
matrix_ids <- jaspar_tf_info |>
filter(name == TF) |>
pull(matrix_id)
# NOTE: Might have more than one motif per TF; use binding sites of all motifs
jaspar_data <- lapply(matrix_ids, function(matrix_id){
jaspar_filename <- paste0(matrix_id,"_hg19", ".tsv")
jaspar_data_fp <- paste0(sceptre2_dir, "/data/jaspar/", jaspar_filename)
jaspar_data <- read_tsv(jaspar_data_fp,
col_names = c("chr", "start", "end", "TF",
"score1", "score2", "strand"))
}) |>
data.table::rbindlist() |>
filter(score1 > quantile(score1, 0.75))
jaspar_GR <- GRanges(
seqnames = jaspar_data$chr,
ranges = IRanges(start = jaspar_data$start, end = jaspar_data$end)
)
View(jaspar_GR)
atac_overlapping_motif_GR <- atac_GR |>
filter_by_overlaps(jaspar_GR)
View(atac_GR)
unique(jaspar_GR@seqnames@values)
# ATAC-seq data
atac_data = readBigwig(
file = "/Users/kmason/data/projects/sceptre2/data/ATACseq/HP1_PMA_ctrl_TLR4_1hr%.bw",
chrom = NULL,
chromstart = 1,
chromend = .Machine$integer.max,
strand = "*",
params = NULL) |>
filter(score > quantile(score,0.75)) |>
filter(seqnames %in% c(as.character(1:22), "X", "Y"))%>%
dplyr::rename(chrom = seqnames,chromStart = start, chromEnd = end)%>%
mutate(chrom = paste0("chr", chrom))
#atac_data <- read_csv(atac_data_fp) |>
#filter(P2686A > quantile(P2686A, 0.75))
atac_GR <- GRanges(
seqnames = atac_data$chrom,
ranges = IRanges(start = atac_data$chromStart, end = atac_data$chromEnd)
)
# TF motif data
jaspar_tf_info <- readRDS(paste0(sceptre2_dir, "/data/jaspar/jaspar_tf_info_papalexi.rds"))
TFs <- jaspar_tf_info |> pull(name) |> unique()
matrix_ids <- jaspar_tf_info |>
filter(name == TF) |>
pull(matrix_id)
# NOTE: Might have more than one motif per TF; use binding sites of all motifs
jaspar_data <- lapply(matrix_ids, function(matrix_id){
jaspar_filename <- paste0(matrix_id,"_hg19", ".tsv")
jaspar_data_fp <- paste0(sceptre2_dir, "/data/jaspar/", jaspar_filename)
jaspar_data <- read_tsv(jaspar_data_fp,
col_names = c("chr", "start", "end", "TF",
"score1", "score2", "strand"))
}) |>
data.table::rbindlist() |>
filter(score1 > quantile(score1, 0.75))
jaspar_GR <- GRanges(
seqnames = jaspar_data$chr,
ranges = IRanges(start = jaspar_data$start, end = jaspar_data$end)
)
atac_overlapping_motif_GR <- atac_GR |>
filter_by_overlaps(jaspar_GR)
target_genes <- TSS_GR |>
filter_by_overlaps(atac_overlapping_motif_GR) |>
as.data.frame() |>
pull(gene)
View(TSS_GR)
knitr::opts_chunk$set(fig.align = 'center', echo = FALSE)
# load libraries
library(tidyverse)
library(plyranges)
library(genomation)
library(biomaRt)
library(GenomicRanges)
library(kableExtra)
# resolve namespace conflicts
library(conflicted)
conflicts_prefer(dplyr::filter)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::rename)
conflicts_prefer(base::intersect)
alpha = 0.9
data.dir = .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
#put whatever quantiles you want in character format
alphas = c("0.1","0.25","0.5","0.75")
data_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# read in sceptre and seurat results
sceptre_path <- paste0(
data_dir, "results/discovery_analyses/",
"papalexi_gene_discovery_res.rds"
)
seurat_path <- paste0(
data_dir, "results/papalexi_analysis/",
"seurat_all_perturbations_results.rds"
)
sceptre_results <- readRDS(sceptre_path)
seurat_results <- readRDS(seurat_path)
atac_path = paste0(data_dir, "results/papalexi_analysis/",
"ATACseq_TF_targets_score_QC_",100*alpha,".rds")
atac_target_genes = readRDS(atac_path)
# read in genes from database
database_genes <- read_table(paste0(
data_dir,
"data/htftarget/dataset_3390.STAT1.target.txt"
)) |>
suppressWarnings() |>
pull(target_name)
View(atac_target_genes)
TFs = colnames(atac_target_genes)
TF = "IRF1"
atac_genes = rownames(atac_target_genes)
genes_qc <- intersect(sceptre_results |>
filter(grna_group == TF) |>
na.omit() |>
pull(response_id),
atac_genes)
q <- 0.1
# apply BH correction to SCEPTRE STAT1 results
sceptre_results_TF<- sceptre_results |>
filter(grna_group == TF, response_id %in% genes_qc) |>
mutate(sceptre_discovery = p.adjust(p_value, method = "BH") <= q) |>
select(response_id, sceptre_discovery) |>
rename(gene = response_id)
# apply BH correction to Seurat TFresults
seurat_results_TF<- seurat_results |>
filter(grna_group == TF, response_id %in% genes_qc) |>
mutate(seurat_discovery = p.adjust(p_val, method = "BH") <= q) |>
select(response_id, seurat_discovery) |>
rename(gene = response_id)
View(atac_target_genes)
View(sceptre_results_TF)
View(atac_target_genes)
atac_TF = atac_target_genes%>%select(TF)
View(atac_TF)
atac_TF = atac_target_genes%>%select(TF)%>%
mutate(gene = rownames(atac_target_genes))
View(atac_TF)
# join with chipseq scores
merged_results <- atac_TF |>
filter(gene %in% genes_qc) |>
left_join(sceptre_results_TF, by = "gene") |>
left_join(seurat_results_TF, by = "gene")
View(merged_results)
atac_TF = atac_target_genes%>%select(TF)%>%
mutate(gene = rownames(atac_target_genes))%>%
dplyr::rename(binary_score = TF)
View(atac_TF)
# join with chipseq scores
merged_results <- atac_TF |>
filter(gene %in% genes_qc) |>
left_join(sceptre_results_TF, by = "gene") |>
left_join(seurat_results_TF, by = "gene")
View(merged_results)
merged_results |>
select(binary_score, sceptre_discovery) |>
table() |>
fisher.test() %>%
`$`("estimate")
merged_results |>
select(binary_score, seurat_discovery) |>
table() |>
fisher.test() %>%
`$`("estimate")
merged_results |>
select(binary_score, sceptre_discovery) |>
table() |>
fisher.test() %>%
`$`("p.value")
merged_results |>
select(binary_score, seurat_discovery) |>
table() |>
fisher.test() %>%
`$`("p.value")
TFs = colnames(atac_target_genes)
odds_ratios <- matrix(NA, nrow = length(TFs), ncol = 4,
dimnames = list(ground_truth = TFs,
method = c("SCEPTRE", "Seurat","SCEPTRE-pval","Seurat-pval")))
for(TF in TFs){
#get atac target gene matrix
atac_TF = atac_target_genes%>%select(TF)%>%
mutate(gene = rownames(atac_target_genes))%>%
dplyr::rename(binary_score = TF)
atac_genes = rownames(atac_target_genes)
genes_qc <- intersect(sceptre_results |>
filter(grna_group == TF) |>
na.omit() |>
pull(response_id),
atac_genes)
q <- 0.1
# apply BH correction to SCEPTRE STAT1 results
sceptre_results_TF<- sceptre_results |>
filter(grna_group == TF, response_id %in% genes_qc) |>
mutate(sceptre_discovery = p.adjust(p_value, method = "BH") <= q) |>
select(response_id, sceptre_discovery) |>
rename(gene = response_id)
# apply BH correction to Seurat TFresults
seurat_results_TF<- seurat_results |>
filter(grna_group == TF, response_id %in% genes_qc) |>
mutate(seurat_discovery = p.adjust(p_val, method = "BH") <= q) |>
select(response_id, seurat_discovery) |>
rename(gene = response_id)
# join with chipseq scores
merged_results <- atac_TF |>
filter(gene %in% genes_qc) |>
left_join(sceptre_results_TF, by = "gene") |>
left_join(seurat_results_TF, by = "gene")
odds_ratios[TF, "SCEPTRE"] <- merged_results |>
select(binary_score, sceptre_discovery) |>
table() |>
fisher.test() %>%
`$`("estimate")
odds_ratios[TF, "Seurat"] <- merged_results |>
select(binary_score, seurat_discovery) |>
table() |>
fisher.test() %>%
`$`("estimate")
odds_ratios[TF, "SCEPTRE-pval"] <- merged_results |>
select(binary_score, sceptre_discovery) |>
table() |>
fisher.test() %>%
`$`("p.value")
odds_ratios[TF, "Seurat-pval"] <- merged_results |>
select(binary_score, seurat_discovery) |>
table() |>
fisher.test() %>%
`$`("p.value")
}
odds_ratios |>
signif(3) |>
Hmisc::latex(booktabs = TRUE,
rowlabel="\\diagbox{Ground truth}{Method}",
file="",
caption = "Enrichment odds ratios, comparing to ChIP-seq target assignments with changing quantile threshold",
where = "!htbp")
View(odds_ratios)
TF = "STAT3"
#get atac target gene matrix
atac_TF = atac_target_genes%>%select(TF)%>%
mutate(gene = rownames(atac_target_genes))%>%
dplyr::rename(binary_score = TF)
atac_genes = rownames(atac_target_genes)
genes_qc <- intersect(sceptre_results |>
filter(grna_group == TF) |>
na.omit() |>
pull(response_id),
atac_genes)
q <- 0.1
# apply BH correction to SCEPTRE STAT1 results
sceptre_results_TF<- sceptre_results |>
filter(grna_group == TF, response_id %in% genes_qc) |>
mutate(sceptre_discovery = p.adjust(p_value, method = "BH") <= q) |>
select(response_id, sceptre_discovery) |>
rename(gene = response_id)
# apply BH correction to Seurat TFresults
seurat_results_TF<- seurat_results |>
filter(grna_group == TF, response_id %in% genes_qc) |>
mutate(seurat_discovery = p.adjust(p_val, method = "BH") <= q) |>
select(response_id, seurat_discovery) |>
rename(gene = response_id)
# join with chipseq scores
merged_results <- atac_TF |>
filter(gene %in% genes_qc) |>
left_join(sceptre_results_TF, by = "gene") |>
left_join(seurat_results_TF, by = "gene")
View(merged_results)
View(odds_ratios)
View(merged_results)
View(merged_results)
TFs = colnames(atac_target_genes)
odds_ratios <- matrix(NA, nrow = length(TFs), ncol = 7,
dimnames = list(ground_truth = TFs,
method = c("SCEPTRE", "Seurat","SCEPTRE-pval","Seurat-pval",
"Num TF Targets","Num Seurat Targets","Num SCEPTRE Targets")))
for(TF in TFs){
#get atac target gene matrix
atac_TF = atac_target_genes%>%select(TF)%>%
mutate(gene = rownames(atac_target_genes))%>%
dplyr::rename(binary_score = TF)
atac_genes = rownames(atac_target_genes)
genes_qc <- intersect(sceptre_results |>
filter(grna_group == TF) |>
na.omit() |>
pull(response_id),
atac_genes)
q <- 0.1
# apply BH correction to SCEPTRE STAT1 results
sceptre_results_TF<- sceptre_results |>
filter(grna_group == TF, response_id %in% genes_qc) |>
mutate(sceptre_discovery = p.adjust(p_value, method = "BH") <= q) |>
select(response_id, sceptre_discovery) |>
rename(gene = response_id)
# apply BH correction to Seurat TFresults
seurat_results_TF<- seurat_results |>
filter(grna_group == TF, response_id %in% genes_qc) |>
mutate(seurat_discovery = p.adjust(p_val, method = "BH") <= q) |>
select(response_id, seurat_discovery) |>
rename(gene = response_id)
# join with chipseq scores
merged_results <- atac_TF |>
filter(gene %in% genes_qc) |>
left_join(sceptre_results_TF, by = "gene") |>
left_join(seurat_results_TF, by = "gene")
odds_ratios[TF, "SCEPTRE"] <- merged_results |>
select(binary_score, sceptre_discovery) |>
table() |>
fisher.test() %>%
`$`("estimate")
odds_ratios[TF, "Seurat"] <- merged_results |>
select(binary_score, seurat_discovery) |>
table() |>
fisher.test() %>%
`$`("estimate")
odds_ratios[TF, "SCEPTRE-pval"] <- merged_results |>
select(binary_score, sceptre_discovery) |>
table() |>
fisher.test() %>%
`$`("p.value")
odds_ratios[TF, "Seurat-pval"] <- merged_results |>
select(binary_score, seurat_discovery) |>
table() |>
fisher.test() %>%
`$`("p.value")
odds_ratios[TF, "Num TF Targets"] <- sum(merged_results[["binary_score"]])
odds_ratios[TF, "Num Seurat Targets"] <- sum(merged_results[[
"seurat_discovery"]])
odds_ratios[TF, "Num SCEPTRE Targets"] <- sum(merged_results[[
"sceptre_discovery"]])
}
View(odds_ratios)
?hmisc::latex
?Hmisc::latex
odds_ratios |>
signif(3) |>
Hmisc::latex(booktabs = TRUE,
rowlabel="\\diagbox{Ground truth}{Method}",
file="",
caption = "Enrichment odds ratios, comparing to ChIP-seq target assignments with changing quantile threshold",
where = "!htbp")%>%
kable_styling(latex_options = "scale_down")
View(odds_ratios)
odds_ratios |>
signif(3) |>
kable(booktabs = TRUE,caption = "Enrichment odds ratios, comparing to ChIP-seq target assignments with changing quantile threshold")%>%
kable_styling(latex_options = "scale_down")
