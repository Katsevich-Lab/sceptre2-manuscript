"end_position",
"strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name)) |>
rename(gene = external_gene_name, chr = chromosome_name) |>
select(gene, chr, TSS)
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name)) |>
rename(gene = external_gene_name, chr = chromosome_name) |>
select(gene, chr, TSS)
# get TSS for each gene
gene_names <- sceptre_results |> pull(response_id) |> unique() |> as.character()
ensembl <- useEnsembl(host = 'https://grch37.ensembl.org',
biomart = 'ENSEMBL_MART_ENSEMBL',
dataset = "hsapiens_gene_ensembl")
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name)) |>
rename(gene = external_gene_name, chr = chromosome_name) |>
select(gene, chr, TSS)
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl)
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y"))
View(TSS_info)
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name))
View(TSS_info)
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name)) |>
rename(gene = external_gene_name, chr = chromosome_name)
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name)) |>
dplyr::rename(gene = external_gene_name, chr = chromosome_name) |>
select(gene, chr, TSS)
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name)) |>
dplyr::rename(gene = external_gene_name, chr = chromosome_name)
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name)) |>
dplyr::rename(gene = external_gene_name, chr = chromosome_name) |>
select(gene, chr, TSS)
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name)) |>
dplyr::rename(gene = external_gene_name, chr = chromosome_name) |>
dplyr::select(gene, chr, TSS)
window_width <- 5e3
TSS_GR <- GRanges(
seqnames = TSS_info$chr,
ranges = IRanges(start = TSS_info$TSS-window_width,
end = TSS_info$TSS+window_width),
gene = TSS_info$gene,
TSS = TSS_info$TSS)
View(A)
# ATAC-seq data
atac_data = = readBigwig(
# ATAC-seq data
atac_data = readBigwig(
file = "/Users/kmason/data/projects/sceptre2/data/ATACseq/HP1_PMA_ctrl_TLR4_1hr%.bw",
chrom = NULL,
chromstart = 1,
chromend = .Machine$integer.max,
strand = "*",
params = NULL) |>
filter(score > quantiles(score,0.75))
# ATAC-seq data
atac_data = readBigwig(
file = "/Users/kmason/data/projects/sceptre2/data/ATACseq/HP1_PMA_ctrl_TLR4_1hr%.bw",
chrom = NULL,
chromstart = 1,
chromend = .Machine$integer.max,
strand = "*",
params = NULL) |>
filter(score > quantile(score,0.75))
library(varhandle)
unfactor(A$seqnames)
as.character(4)
mean(A$seqnames[1:1000]%in%c(as.character(1:22), "X", "Y"))
mean(A$seqnames[1:100000]%in%c(as.character(1:22), "X", "Y"))
unique(A$seqnames)
# ATAC-seq data
atac_data = readBigwig(
file = "/Users/kmason/data/projects/sceptre2/data/ATACseq/HP1_PMA_ctrl_TLR4_1hr%.bw",
chrom = NULL,
chromstart = 1,
chromend = .Machine$integer.max,
strand = "*",
params = NULL) |>
filter(score > quantile(score,0.75)) |>
filter(seqnames %in% c(as.character(1:22), "X", "Y"))
unique(atac_data$seqnames)
# ATAC-seq data
atac_data = readBigwig(
file = "/Users/kmason/data/projects/sceptre2/data/ATACseq/HP1_PMA_ctrl_TLR4_1hr%.bw",
chrom = NULL,
chromstart = 1,
chromend = .Machine$integer.max,
strand = "*",
params = NULL) |>
filter(score > quantile(score,0.75)) |>
filter(seqnames %in% c(as.character(1:22), "X", "Y"))%>%
dplyr::rename(chrom = seqnames,chromStart = start, chromEnd = end)
#atac_data <- read_csv(atac_data_fp) |>
#filter(P2686A > quantile(P2686A, 0.75))
atac_GR <- GRanges(
seqnames = atac_data$chrom,
ranges = IRanges(start = atac_data$chromStart, end = atac_data$chromEnd)
)
# TF motif data
jaspar_tf_info <- readRDS(paste0(sceptre2_dir, "/data/jaspar/jaspar_tf_info_papalexi.rds"))
TFs <- jaspar_tf_info |> pull(name) |> unique()
View(jaspar_tf_info)
jaspar_tf_info <- lapply(
1:2,
function(page) (rba_jaspar_collections_matrices(collection = "CORE",
page = as.numeric(page),
only_last_version = TRUE) %>%
`$`(results) |>
as_tibble() |>
select(matrix_id, name))
) |>
data.table::rbindlist() |>
as_tibble()
library(tibble)
library(tidyr)
library(tidyverse)
library(rbioapi)
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
ptions(timeout=7000)
options(timeout=7000)
jaspar_dir <- paste0(sceptre2_dir, "/data/jaspar")
dir.create(jaspar_dir)
jaspar_tf_info <- lapply(
1:2,
function(page) (rba_jaspar_collections_matrices(collection = "CORE",
page = as.numeric(page),
only_last_version = TRUE) %>%
`$`(results) |>
as_tibble() |>
select(matrix_id, name))
) |>
data.table::rbindlist() |>
as_tibble()
View(jaspar_tf_info)
View(jaspar_tf_info)
papalexi_targets = c("IRF1","STAT1","STAT2","STAT3","SMAD4","BRD4","SPI1","MYC")
matrix_ids <- jaspar_tf_info |>
filter(name %in% papalexi_targets) |>
pull(matrix_id)
View(jaspar_tf_info)
View(jaspar_tf_info)
jasper_tf_info = jasper_tf_info%>%mutate(name = toupper(name))
jaspar_tf_info = jaspar_tf_info%>%mutate(name = toupper(name))
papalexi_targets = c("IRF1","STAT1","STAT2","STAT3","SMAD4","BRD4","SPI1","MYC")
matrix_ids <- jaspar_tf_info |>
filter(name %in% papalexi_targets) |>
pull(matrix_id)
jaspar_tf_info |>
filter(name %in% papalexi_targets) |>
saveRDS(paste0(jaspar_dir, "/jaspar_tf_info_papalexi.rds"))
jaspar_tf_info |>
filter(name %in% papalexi_targets)
View(jaspar_tf_info)
for(matrix_id in matrix_ids){
filename <- paste0(matrix_id, ".tsv.gz")
filename_hg19 <- paste0(matrix_id,"_hg19", ".tsv.gz")
destfile <- paste0(jaspar_dir, "/", filename_hg19)
download.file(url = paste0("http://expdata.cmmt.ubc.ca/JASPAR/downloads/UCSC_tracks/2022/hg19/", filename),
destfile = destfile)
R.utils::gunzip(destfile, overwrite = T)
}
library(GenomicRanges)
library(dplyr)
library(plyranges)
library(readr)
library(plotgardener)
library(GenomicRanges)
library(genomation)
library(biomaRt)
library(kableExtra)
library(varhandle)
data_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# read in sceptre and seurat results
sceptre_path <- paste0(
data_dir, "results/discovery_analyses/",
"papalexi_gene_discovery_res.rds"
)
seurat_path <- paste0(
data_dir, "results/papalexi_analysis/",
"seurat_all_perturbations_results.rds"
)
sceptre_results <- readRDS(sceptre_path)
seurat_results <- readRDS(seurat_path)
# TSS information
gene_names <- sceptre_results |>
pull(response_id) |>
unique() |>
as.character()
ensembl <- useEnsembl(host = 'https://grch37.ensembl.org',
biomart = 'ENSEMBL_MART_ENSEMBL',
dataset = "hsapiens_gene_ensembl")
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name)) |>
dplyr::rename(gene = external_gene_name, chr = chromosome_name) |>
dplyr::select(gene, chr, TSS)
window_width <- 5e3
TSS_GR <- GRanges(
seqnames = TSS_info$chr,
ranges = IRanges(start = TSS_info$TSS-window_width,
end = TSS_info$TSS+window_width),
gene = TSS_info$gene,
TSS = TSS_info$TSS)
# ATAC-seq data
atac_data = readBigwig(
file = "/Users/kmason/data/projects/sceptre2/data/ATACseq/HP1_PMA_ctrl_TLR4_1hr%.bw",
chrom = NULL,
chromstart = 1,
chromend = .Machine$integer.max,
strand = "*",
params = NULL) |>
filter(score > quantile(score,0.75)) |>
filter(seqnames %in% c(as.character(1:22), "X", "Y"))%>%
dplyr::rename(chrom = seqnames,chromStart = start, chromEnd = end)
#atac_data <- read_csv(atac_data_fp) |>
#filter(P2686A > quantile(P2686A, 0.75))
atac_GR <- GRanges(
seqnames = atac_data$chrom,
ranges = IRanges(start = atac_data$chromStart, end = atac_data$chromEnd)
)
# TF motif data
jaspar_tf_info <- readRDS(paste0(sceptre2_dir, "/data/jaspar/jaspar_tf_info_papalexi.rds"))
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
library(GenomicRanges)
library(dplyr)
library(plyranges)
library(readr)
library(plotgardener)
library(GenomicRanges)
library(genomation)
library(biomaRt)
library(kableExtra)
library(varhandle)
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
data_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# read in sceptre and seurat results
sceptre_path <- paste0(
data_dir, "results/discovery_analyses/",
"papalexi_gene_discovery_res.rds"
)
seurat_path <- paste0(
data_dir, "results/papalexi_analysis/",
"seurat_all_perturbations_results.rds"
)
sceptre_results <- readRDS(sceptre_path)
seurat_results <- readRDS(seurat_path)
# TSS information
gene_names <- sceptre_results |>
pull(response_id) |>
unique() |>
as.character()
ensembl <- useEnsembl(host = 'https://grch37.ensembl.org',
biomart = 'ENSEMBL_MART_ENSEMBL',
dataset = "hsapiens_gene_ensembl")
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position),
chromosome_name = paste0("chr", chromosome_name)) |>
dplyr::rename(gene = external_gene_name, chr = chromosome_name) |>
dplyr::select(gene, chr, TSS)
window_width <- 5e3
TSS_GR <- GRanges(
seqnames = TSS_info$chr,
ranges = IRanges(start = TSS_info$TSS-window_width,
end = TSS_info$TSS+window_width),
gene = TSS_info$gene,
TSS = TSS_info$TSS)
# ATAC-seq data
atac_data = readBigwig(
file = "/Users/kmason/data/projects/sceptre2/data/ATACseq/HP1_PMA_ctrl_TLR4_1hr%.bw",
chrom = NULL,
chromstart = 1,
chromend = .Machine$integer.max,
strand = "*",
params = NULL) |>
filter(score > quantile(score,0.75)) |>
filter(seqnames %in% c(as.character(1:22), "X", "Y"))%>%
dplyr::rename(chrom = seqnames,chromStart = start, chromEnd = end)
#atac_data <- read_csv(atac_data_fp) |>
#filter(P2686A > quantile(P2686A, 0.75))
atac_GR <- GRanges(
seqnames = atac_data$chrom,
ranges = IRanges(start = atac_data$chromStart, end = atac_data$chromEnd)
)
# TF motif data
jaspar_tf_info <- readRDS(paste0(sceptre2_dir, "/data/jaspar/jaspar_tf_info_papalexi.rds"))
TFs <- jaspar_tf_info |> pull(name) |> unique()
for(TF in TFs){
matrix_ids <- jaspar_tf_info |>
filter(name == TF) |>
pull(matrix_id)
# NOTE: Might have more than one motif per TF; use binding sites of all motifs
jaspar_data <- lapply(matrix_ids, function(matrix_id){
jaspar_filename <- paste0(matrix_id,"_hg19", ".tsv")
jaspar_data_fp <- paste0(sceptre2_dir, "/data/jaspar/", jaspar_filename)
jaspar_data <- read_tsv(jaspar_data_fp,
col_names = c("chr", "start", "end", "TF",
"score1", "score2", "strand"))
}) |>
data.table::rbindlist() |>
filter(score1 > quantile(score1, 0.75))
jaspar_GR <- GRanges(
seqnames = jaspar_data$chr,
ranges = IRanges(start = jaspar_data$start, end = jaspar_data$end)
)
atac_overlapping_motif_GR <- atac_GR |>
filter_by_overlaps(jaspar_GR)
target_genes <- TSS_GR |>
filter_by_overlaps(atac_overlapping_motif_GR) |>
as.data.frame() |>
pull(gene)
cat(sprintf("%s targets %s genes.\n", TF, length(target_genes)))
}
warnings()
View(jaspar_tf_info)
View(jaspar_tf_info)
View(atac_GR)
View(TSS_GR)
TSS_info <-getBM(attributes=c("external_gene_name", "chromosome_name", "start_position",
"end_position", "strand"),
filters=c('external_gene_name'),
value = gene_names, mart=ensembl) |>
filter(chromosome_name %in% c(1:22, "X", "Y")) |>
mutate(TSS = ifelse(strand == 1, start_position, end_position)) |>
dplyr::rename(gene = external_gene_name, chr = chromosome_name) |>
dplyr::select(gene, chr, TSS)
window_width <- 5e3
TSS_GR <- GRanges(
seqnames = TSS_info$chr,
ranges = IRanges(start = TSS_info$TSS-window_width,
end = TSS_info$TSS+window_width),
gene = TSS_info$gene,
TSS = TSS_info$TSS)
# ATAC-seq data
atac_data = readBigwig(
file = "/Users/kmason/data/projects/sceptre2/data/ATACseq/HP1_PMA_ctrl_TLR4_1hr%.bw",
chrom = NULL,
chromstart = 1,
chromend = .Machine$integer.max,
strand = "*",
params = NULL) |>
filter(score > quantile(score,0.75)) |>
filter(seqnames %in% c(as.character(1:22), "X", "Y"))%>%
dplyr::rename(chrom = seqnames,chromStart = start, chromEnd = end)
#atac_data <- read_csv(atac_data_fp) |>
#filter(P2686A > quantile(P2686A, 0.75))
atac_GR <- GRanges(
seqnames = atac_data$chrom,
ranges = IRanges(start = atac_data$chromStart, end = atac_data$chromEnd)
)
# TF motif data
jaspar_tf_info <- readRDS(paste0(sceptre2_dir, "/data/jaspar/jaspar_tf_info_papalexi.rds"))
TFs <- jaspar_tf_info |> pull(name) |> unique()
for(TF in TFs){
matrix_ids <- jaspar_tf_info |>
filter(name == TF) |>
pull(matrix_id)
# NOTE: Might have more than one motif per TF; use binding sites of all motifs
jaspar_data <- lapply(matrix_ids, function(matrix_id){
jaspar_filename <- paste0(matrix_id,"_hg19", ".tsv")
jaspar_data_fp <- paste0(sceptre2_dir, "/data/jaspar/", jaspar_filename)
jaspar_data <- read_tsv(jaspar_data_fp,
col_names = c("chr", "start", "end", "TF",
"score1", "score2", "strand"))
}) |>
data.table::rbindlist() |>
filter(score1 > quantile(score1, 0.75))
jaspar_GR <- GRanges(
seqnames = jaspar_data$chr,
ranges = IRanges(start = jaspar_data$start, end = jaspar_data$end)
)
atac_overlapping_motif_GR <- atac_GR |>
filter_by_overlaps(jaspar_GR)
target_genes <- TSS_GR |>
filter_by_overlaps(atac_overlapping_motif_GR) |>
as.data.frame() |>
pull(gene)
cat(sprintf("%s targets %s genes.\n", TF, length(target_genes)))
}
TFs
TF = "IRF1"
matrix_ids <- jaspar_tf_info |>
filter(name == TF) |>
pull(matrix_id)
# NOTE: Might have more than one motif per TF; use binding sites of all motifs
jaspar_data <- lapply(matrix_ids, function(matrix_id){
jaspar_filename <- paste0(matrix_id,"_hg19", ".tsv")
jaspar_data_fp <- paste0(sceptre2_dir, "/data/jaspar/", jaspar_filename)
jaspar_data <- read_tsv(jaspar_data_fp,
col_names = c("chr", "start", "end", "TF",
"score1", "score2", "strand"))
}) |>
data.table::rbindlist() |>
filter(score1 > quantile(score1, 0.75))
jaspar_GR <- GRanges(
seqnames = jaspar_data$chr,
ranges = IRanges(start = jaspar_data$start, end = jaspar_data$end)
)
View(jaspar_GR)
atac_overlapping_motif_GR <- atac_GR |>
filter_by_overlaps(jaspar_GR)
View(atac_GR)
unique(jaspar_GR@seqnames@values)
# ATAC-seq data
atac_data = readBigwig(
file = "/Users/kmason/data/projects/sceptre2/data/ATACseq/HP1_PMA_ctrl_TLR4_1hr%.bw",
chrom = NULL,
chromstart = 1,
chromend = .Machine$integer.max,
strand = "*",
params = NULL) |>
filter(score > quantile(score,0.75)) |>
filter(seqnames %in% c(as.character(1:22), "X", "Y"))%>%
dplyr::rename(chrom = seqnames,chromStart = start, chromEnd = end)%>%
mutate(chrom = paste0("chr", chrom))
#atac_data <- read_csv(atac_data_fp) |>
#filter(P2686A > quantile(P2686A, 0.75))
atac_GR <- GRanges(
seqnames = atac_data$chrom,
ranges = IRanges(start = atac_data$chromStart, end = atac_data$chromEnd)
)
# TF motif data
jaspar_tf_info <- readRDS(paste0(sceptre2_dir, "/data/jaspar/jaspar_tf_info_papalexi.rds"))
TFs <- jaspar_tf_info |> pull(name) |> unique()
matrix_ids <- jaspar_tf_info |>
filter(name == TF) |>
pull(matrix_id)
# NOTE: Might have more than one motif per TF; use binding sites of all motifs
jaspar_data <- lapply(matrix_ids, function(matrix_id){
jaspar_filename <- paste0(matrix_id,"_hg19", ".tsv")
jaspar_data_fp <- paste0(sceptre2_dir, "/data/jaspar/", jaspar_filename)
jaspar_data <- read_tsv(jaspar_data_fp,
col_names = c("chr", "start", "end", "TF",
"score1", "score2", "strand"))
}) |>
data.table::rbindlist() |>
filter(score1 > quantile(score1, 0.75))
jaspar_GR <- GRanges(
seqnames = jaspar_data$chr,
ranges = IRanges(start = jaspar_data$start, end = jaspar_data$end)
)
atac_overlapping_motif_GR <- atac_GR |>
filter_by_overlaps(jaspar_GR)
target_genes <- TSS_GR |>
filter_by_overlaps(atac_overlapping_motif_GR) |>
as.data.frame() |>
pull(gene)
View(TSS_GR)
