return_resampling_dist,
adaptive_permutation_test,
fit_skew_normal)
#save results
CODE_DIR <-.get_config_path("LOCAL_CODE_DIR")
papalexi_analysis_data_dir <- paste0(CODE_DIR, "/sceptre2-manuscript/writeups/papalexi_analysis/")
saveRDS(result_protein,paste0(papalexi_analysis_data_dir,"sceptre_protein_results_with_effect_size.rds"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(httr)
library(rlist)
library(jsonlite)
library(varhandle)
library(stringi)
library(kableExtra)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
data.dir = paste0(code_dir,"/sceptre2-manuscript/writeups/papalexi_analysis/")
gene_path = paste0(data.dir,
'sceptre_CUL3_and_PDL1_mrna_results_with_effect_size.rds')
protein_path = paste0(data.dir,'sceptre_protein_results_with_effect_size.rds')
seurat_path = paste0(data.dir,'papalexi_results_seurat.rds')
#Note that sceptre results have columns pvalue, grna, target
#get sceptre perturbation on PDL1 mrna results
gene_result = readRDS(gene_path)
#get sceptre perturbation on protein results
protein_result = readRDS(protein_path)
#get seurat DE results. Columns 1,2,and 6 correspond to pvalue, effect size
#and perturbation
seurat_result = readRDS(seurat_path)
#See which gene perturbations are associated with PDL1 protein expression
#get pvalues from sceptre
P_adj = protein_result$p_value
#unlist pvalues
P_adj = unlist(P_adj)
#some pvalues are negative so take absolute value
P_adj = abs(P_adj)
#make numeric
P_adj = as.numeric(P_adj)
#perform BH procedure
P_adj = p.adjust(P_adj,method = 'BH')
#replace results matrix pvalues with adjusted pvalues
protein_adjusted = data.frame(adj.Pval = P_adj,
log_fold_change = protein_result$log_fold_change,
response_id = protein_result$response_id,
grna_group = protein_result$grna_group)
#filter to just look at PDL1 pvalues
protein_PDL1 = protein_adjusted[which(protein_adjusted$response_id == 'PDL1')]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(httr)
library(rlist)
library(jsonlite)
library(varhandle)
library(stringi)
library(kableExtra)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(httr)
library(rlist)
library(jsonlite)
library(varhandle)
library(stringi)
library(kableExtra)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
data.dir = paste0(code_dir,"/sceptre2-manuscript/writeups/papalexi_analysis/")
gene_path = paste0(data.dir,
'sceptre_CUL3_and_PDL1_mrna_results_with_effect_size.rds')
protein_path = paste0(data.dir,'sceptre_protein_results_with_effect_size.rds')
seurat_path = paste0(data.dir,'papalexi_results_seurat.rds')
#Note that sceptre results have columns pvalue, grna, target
#get sceptre perturbation on PDL1 mrna results
gene_result = readRDS(gene_path)
#get sceptre perturbation on protein results
protein_result = readRDS(protein_path)
#get seurat DE results. Columns 1,2,and 6 correspond to pvalue, effect size
#and perturbation
seurat_result = readRDS(seurat_path)
#See which gene perturbations are associated with PDL1 protein expression
#get pvalues from sceptre
P_adj = protein_result$p_value
#unlist pvalues
P_adj = unlist(P_adj)
#some pvalues are negative so take absolute value
P_adj = abs(P_adj)
#make numeric
P_adj = as.numeric(P_adj)
#perform BH procedure
P_adj = p.adjust(P_adj,method = 'BH')
#replace results matrix pvalues with adjusted pvalues
protein_adjusted = data.frame(adj.Pval = P_adj,
log_fold_change = protein_result$log_fold_change,
response_id = protein_result$response_id,
grna_group = protein_result$grna_group)
#filter to just look at PDL1 pvalues
protein_PDL1 = protein_adjusted[which(protein_adjusted$response_id == 'PDL1')]
View(protein_adjusted)
protein_PDL1 = protein_adjusted[which(protein_adjusted$response_id == 'PDL1')]
protein_adjusted$response_id == 'PDL1'
#filter to just look at PDL1 pvalues
protein_PDL1 = protein_adjusted[which(protein_adjusted$response_id == 'PDL1'),]
#get significant perturbations
sig_genes = subset(protein_PDL1,P_adj < 0.05)$grna_group
#unfactor
sig_genes = unfactor(sig_genes)
A = 'Significant perturbations for the expression of PDL1 protein are:\n '
cat(paste0(A,paste(sig_genes,collapse = ',')))
View(protein_PDL1)
#filter to just look at PDL1 pvalues
protein_PDL1 = protein_adjusted[which(protein_adjusted$response_id == 'PDL1'),]
#get significant perturbations
sig_genes = subset(protein_PDL1,adj.Pval < 0.05)$grna_group
#unfactor
sig_genes = unfactor(sig_genes)
A = 'Significant perturbations for the expression of PDL1 protein are:\n '
cat(paste0(A,paste(sig_genes,collapse = ',')))
View(protein_result)
View(protein_result)
View(seurat_result)
#get sceptre results on PDL1 protein
protein_PDL1_raw = subset(protein_result,response_id == "PDL1")
protein_PDL1_raw = subset(protein_PDL1_raw,select = c(grna_group,p_value,
log_fold_change))
#get seurat results on PDL1 protein. Columns 1,2, and 6 are pvalue,effect size
#and perturbation
seurat_PDL1_raw = subset(seurat_result,Target == "PDL1")
seurat_PDL1_raw = subset(seurat_PDL1_raw,select = c(p_val,avg_log2FC,PRTB))
#remove perturbations that aren't in both analyses
for(target in protein_PDL1_raw$grna_group){
if (target %in% seurat_PDL1_raw$PRTB == F){
seurat_PDL1_raw = rbind(seurat_PDL1_raw,c(NA,NA,target))
}
}
protein_PDL1_raw = subset(protein_PDL1_raw,grna_group %in% seurat_PDL1_raw$PRTB)
#reorder rows of sceptre analysis
protein_PDL1_raw = protein_PDL1_raw[match(seurat_PDL1_raw$PRTB,
protein_PDL1_raw$grna_group),]
protein_PDL1_raw$grna_group = unfactor(protein_PDL1_raw$grna_group)
#bind them
combined_results_PDL1 = data.frame(protein_PDL1_raw$p_value,
protein_PDL1_raw$log_fold_change,
seurat_PDL1_raw$p_val,
seurat_PDL1_raw$avg_log2FC,
protein_PDL1_raw$grna_group)
colnames(combined_results_PDL1) = c("SCEPTRE Pvalues","SCEPTRE Log Change",
"Seurat Pvalues",
'Seurat Log Change',
"Perturbation")
#reorder columns
combined_results_PDL1 = combined_results_PDL1 [,c(4,1,2,3)]
#order by pvalue
combined_results_PDL1 = combined_results_PDL1[
order(combined_results_PDL1$`SCEPTRE Pvalues`),]
results_table = kable(combined_results_PDL1,booktabs = TRUE, linesep = "")
kable_styling(results_table,position = "center", latex_options = "scale_down")
#View(combined_results_PDL1)
#get sceptre results on PDL1 protein
protein_PDL1_raw = subset(protein_result,response_id == "PDL1")
protein_PDL1_raw = subset(protein_PDL1_raw,select = c(grna_group,p_value,
log_fold_change))
#get seurat results on PDL1 protein. Columns 1,2, and 6 are pvalue,effect size
#and perturbation
seurat_PDL1_raw = subset(seurat_result,Target == "PDL1")
seurat_PDL1_raw = subset(seurat_PDL1_raw,select = c(p_val,avg_log2FC,PRTB))
#remove perturbations that aren't in both analyses
for(target in protein_PDL1_raw$grna_group){
if (target %in% seurat_PDL1_raw$PRTB == F){
seurat_PDL1_raw = rbind(seurat_PDL1_raw,c(NA,NA,target))
}
}
protein_PDL1_raw = subset(protein_PDL1_raw,grna_group %in% seurat_PDL1_raw$PRTB)
#reorder rows of sceptre analysis
protein_PDL1_raw = protein_PDL1_raw[match(seurat_PDL1_raw$PRTB,
protein_PDL1_raw$grna_group),]
protein_PDL1_raw$grna_group = unfactor(protein_PDL1_raw$grna_group)
#bind them
combined_results_PDL1 = data.frame(protein_PDL1_raw$p_value,
protein_PDL1_raw$log_fold_change,
seurat_PDL1_raw$p_val,
seurat_PDL1_raw$avg_log2FC,
protein_PDL1_raw$grna_group)
colnames(combined_results_PDL1) = c("SCEPTRE Pvalues","SCEPTRE Log Change",
"Seurat Pvalues",
'Seurat Log Change',
"Perturbation")
#reorder columns
#combined_results_PDL1 = combined_results_PDL1 [,c(4,1,2,3)]
#order by pvalue
combined_results_PDL1 = combined_results_PDL1[
order(combined_results_PDL1$`SCEPTRE Pvalues`),]
results_table = kable(combined_results_PDL1,booktabs = TRUE, linesep = "")
kable_styling(results_table,position = "center", latex_options = "scale_down")
#View(combined_results_PDL1)
#get sceptre results on PDL1 protein
protein_PDL1_raw = subset(protein_result,response_id == "PDL1")
protein_PDL1_raw = subset(protein_PDL1_raw,select = c(grna_group,p_value,
log_fold_change))
#get seurat results on PDL1 protein. Columns 1,2, and 6 are pvalue,effect size
#and perturbation
seurat_PDL1_raw = subset(seurat_result,Target == "PDL1")
seurat_PDL1_raw = subset(seurat_PDL1_raw,select = c(p_val,avg_log2FC,PRTB))
#remove perturbations that aren't in both analyses
for(target in protein_PDL1_raw$grna_group){
if (target %in% seurat_PDL1_raw$PRTB == F){
seurat_PDL1_raw = rbind(seurat_PDL1_raw,c(NA,NA,target))
}
}
protein_PDL1_raw = subset(protein_PDL1_raw,grna_group %in% seurat_PDL1_raw$PRTB)
#reorder rows of sceptre analysis
protein_PDL1_raw = protein_PDL1_raw[match(seurat_PDL1_raw$PRTB,
protein_PDL1_raw$grna_group),]
protein_PDL1_raw$grna_group = unfactor(protein_PDL1_raw$grna_group)
#bind them
combined_results_PDL1 = data.frame(protein_PDL1_raw$p_value,
protein_PDL1_raw$log_fold_change,
seurat_PDL1_raw$p_val,
seurat_PDL1_raw$avg_log2FC,
protein_PDL1_raw$grna_group)
colnames(combined_results_PDL1) = c("SCEPTRE Pvalues","SCEPTRE Log Change",
"Seurat Pvalues",
'Seurat Log Change',
"Perturbation")
#reorder columns
combined_results_PDL1 = combined_results_PDL1 [,c(1,3,2,4,5)]
#order by pvalue
combined_results_PDL1 = combined_results_PDL1[
order(combined_results_PDL1$`SCEPTRE Pvalues`),]
results_table = kable(combined_results_PDL1,booktabs = TRUE, linesep = "")
kable_styling(results_table,position = "center", latex_options = "scale_down")
#View(combined_results_PDL1)
#get sceptre results on CD86 protein
protein_CD86_raw = subset(protein_result,response_id == "CD86")
protein_CD86_raw = subset(protein_CD86_raw,select = c(grna_group,p_value,
log_fold_change))
#get seurat results on CD86 protein. Columns 1,2, and 6 are pvalue,effect size
#and perturbation
seurat_CD86_raw = subset(seurat_result,Target == "CD86")
seurat_CD86_raw = subset(seurat_CD86_raw,select = c(p_val,avg_log2FC,PRTB))
#remove perturbations that aren't in both analyses
for(target in protein_CD86_raw$grna_group){
if (target %in% seurat_CD86_raw$PRTB == F){
seurat_CD86_raw = rbind(seurat_CD86_raw,c(NA,NA,target))
}
}
protein_CD86_raw = subset(protein_CD86_raw,grna_group %in% seurat_CD86_raw$PRTB)
#reorder rows of sceptre analysis
protein_CD86_raw = protein_CD86_raw[match(seurat_CD86_raw$PRTB,
protein_CD86_raw$grna_group),]
protein_CD86_raw$grna_group = unfactor(protein_CD86_raw$grna_group)
#bind them
combined_results_CD86 = data.frame(protein_CD86_raw$p_value,
protein_CD86_raw$log_fold_change,
seurat_CD86_raw$p_val,
seurat_CD86_raw$avg_log2FC,
protein_CD86_raw$grna_group)
colnames(combined_results_CD86) = c("SCEPTRE Pvalues","SCEPTRE Log Change",
"Seurat Pvalues",
'Seurat Log Change',
"Perturbation")
#reorder columns
combined_results_CD86 = combined_results_CD86 [,c(1,3,2,4,5)]
#order by pvalue
combined_results_CD86 = combined_results_CD86[
order(combined_results_CD86$`SCEPTRE Pvalues`),]
results_table = kable(combined_results_CD86,booktabs = TRUE, linesep = "")
kable_styling(results_table,position = "center", latex_options = "scale_down")
#View(combined_results_CD86)
#get sceptre results on PDL2 protein
protein_PDL2_raw = subset(protein_result,response_id == "PDL2")
protein_PDL2_raw = subset(protein_PDL2_raw,select = c(grna_group,p_value,
log_fold_change))
#get seurat results on PDL2 protein. Columns 1,2, and 6 are pvalue,effect size
#and perturbation
seurat_PDL2_raw = subset(seurat_result,Target == "PDL2")
seurat_PDL2_raw = subset(seurat_PDL2_raw,select = c(p_val,avg_log2FC,PRTB))
#remove perturbations that aren't in both analyses
for(target in protein_PDL2_raw$grna_group){
if (target %in% seurat_PDL2_raw$PRTB == F){
seurat_PDL2_raw = rbind(seurat_PDL2_raw,c(NA,NA,target))
}
}
protein_PDL2_raw = subset(protein_PDL2_raw,grna_group %in% seurat_PDL2_raw$PRTB)
#reorder rows of sceptre analysis
protein_PDL2_raw = protein_PDL2_raw[match(seurat_PDL2_raw$PRTB,
protein_PDL2_raw$grna_group),]
protein_PDL2_raw$grna_group = unfactor(protein_PDL2_raw$grna_group)
#bind them
combined_results_PDL2 = data.frame(protein_PDL2_raw$p_value,
protein_PDL2_raw$log_fold_change,
seurat_PDL2_raw$p_val,
seurat_PDL2_raw$avg_log2FC,
protein_PDL2_raw$grna_group)
colnames(combined_results_PDL2) = c("SCEPTRE Pvalues","SCEPTRE Log Change",
"Seurat Pvalues",
'Seurat Log Change',
"Perturbation")
#reorder columns
combined_results_PDL2 = combined_results_PDL2 [,c(1,3,2,4,5)]
#order by pvalue
combined_results_PDL2 = combined_results_PDL2[
order(combined_results_PDL2$`SCEPTRE Pvalues`),]
results_table = kable(combined_results_PDL2,booktabs = TRUE, linesep = "")
kable_styling(results_table,position = "center", latex_options = "scale_down")
#View(combined_results_PDL2)
View(seurat_result)
#get sceptre results on PDL1 protein
gene_PDL1_raw = subset(gene_result,response_id == "CD274")
gene_PDL1_raw = subset(gene_PDL1_raw,select = c(grna_group,p_value,
log_fold_change))
#get seurat results on PDL1 gene. Columns 1,2, and 6 are pvalue,effect size
#and perturbation
seurat_PDL1_raw = subset(seurat_result,Target == "PDL1_raw")
seurat_PDL1_raw = subset(seurat_PDL1_raw,select = c(p_val,avg_log2FC,PRTB))
#remove perturbations that aren't in both analyses
for(target in gene_PDL1_raw$grna_group){
if (target %in% seurat_PDL1_raw$PRTB == F){
seurat_PDL1_raw = rbind(seurat_PDL1_raw,c(NA,NA,target))
}
}
gene_PDL1_raw = subset(gene_PDL1_raw,grna_group %in% seurat_PDL1_raw$PRTB)
#reorder rows of sceptre analysis
gene_PDL1_raw = gene_PDL1_raw[match(seurat_PDL1_raw$PRTB,
gene_PDL1_raw$grna_group),]
gene_PDL1_raw$grna_group = unfactor(gene_PDL1_raw$grna_group)
#bind them
combined_results_PDL1 = data.frame(gene_PDL1_raw$p_value,
gene_PDL1_raw$log_fold_change,
seurat_PDL1_raw$p_val,
seurat_PDL1_raw$avg_log2FC,
gene_PDL1_raw$grna_group)
colnames(combined_results_PDL1) = c("SCEPTRE Pvalues","SCEPTRE Log Change",
"Seurat Pvalues",
'Seurat Log Change',
"Perturbation")
#reorder columns
combined_results_PDL1 = combined_results_PDL1 [,c(1,3,2,4,5)]
#order by pvalue
combined_results_PDL1 = combined_results_PDL1[
order(combined_results_PDL1$`SCEPTRE Pvalues`),]
results_table = kable(combined_results_PDL1,booktabs = TRUE, linesep = "")
kable_styling(results_table,position = "center", latex_options = "scale_down")
#View(combined_results_PDL1)
#get sceptre results on PDL1 protein
gene_PDL1_norm = subset(gene_result,response_id == "CD274")
gene_PDL1_norm = subset(gene_PDL1_norm,select = c(grna_group,p_value,
log_fold_change))
#get seurat results on PDL1 gene. Columns 1,2, and 6 are pvalue,effect size
#and perturbation
seurat_PDL1_norm = subset(seurat_result,Target == "PDL1_norm")
seurat_PDL1_norm = subset(seurat_PDL1_norm,select = c(p_val,avg_log2FC,PRTB))
#remove perturbations that aren't in both analyses
for(target in gene_PDL1_norm$grna_group){
if (target %in% seurat_PDL1_norm$PRTB == F){
seurat_PDL1_norm = rbind(seurat_PDL1_norm,c(NA,NA,target))
}
}
gene_PDL1_norm = subset(gene_PDL1_norm,grna_group %in% seurat_PDL1_norm$PRTB)
#reorder rows of sceptre analysis
gene_PDL1_norm = gene_PDL1_norm[match(seurat_PDL1_norm$PRTB,
gene_PDL1_norm$grna_group),]
gene_PDL1_norm$grna_group = unfactor(gene_PDL1_norm$grna_group)
#bind them
combined_results_PDL1 = data.frame(gene_PDL1_norm$p_value,
gene_PDL1_norm$log_fold_change,
seurat_PDL1_norm$p_val,
seurat_PDL1_norm$avg_log2FC,
gene_PDL1_norm$grna_group)
colnames(combined_results_PDL1) = c("SCEPTRE Pvalues","SCEPTRE Log Change",
"Seurat Pvalues",
'Seurat Log Change',
"Perturbation")
#reorder columns
combined_results_PDL1 = combined_results_PDL1 [,c(1,3,2,4,5)]
#order by pvalue
combined_results_PDL1 = combined_results_PDL1[
order(combined_results_PDL1$`SCEPTRE Pvalues`),]
results_table = kable(combined_results_PDL1,booktabs = TRUE, linesep = "")
kable_styling(results_table,position = "center", latex_options = "scale_down")
#View(combined_results_PDL1)
round(1.978e-18,2)
#get sceptre results on PDL2 protein
protein_PDL2_raw = subset(protein_result,response_id == "PDL2")
protein_PDL2_raw = subset(protein_PDL2_raw,select = c(grna_group,p_value,
log_fold_change))
#get seurat results on PDL2 protein. Columns 1,2, and 6 are pvalue,effect size
#and perturbation
seurat_PDL2_raw = subset(seurat_result,Target == "PDL2")
seurat_PDL2_raw = subset(seurat_PDL2_raw,select = c(p_val,avg_log2FC,PRTB))
#remove perturbations that aren't in both analyses
for(target in protein_PDL2_raw$grna_group){
if (target %in% seurat_PDL2_raw$PRTB == F){
seurat_PDL2_raw = rbind(seurat_PDL2_raw,c(NA,NA,target))
}
}
protein_PDL2_raw = subset(protein_PDL2_raw,grna_group %in% seurat_PDL2_raw$PRTB)
#reorder rows of sceptre analysis
protein_PDL2_raw = protein_PDL2_raw[match(seurat_PDL2_raw$PRTB,
protein_PDL2_raw$grna_group),]
protein_PDL2_raw$grna_group = unfactor(protein_PDL2_raw$grna_group)
#bind them
combined_results_PDL2 = data.frame(protein_PDL2_raw$p_value,
protein_PDL2_raw$log_fold_change,
seurat_PDL2_raw$p_val,
seurat_PDL2_raw$avg_log2FC,
protein_PDL2_raw$grna_group)
colnames(combined_results_PDL2) = c("SCEPTRE Pvalues","SCEPTRE Log Change",
"Seurat Pvalues",
'Seurat Log Change',
"Perturbation")
#reorder columns
combined_results_PDL2 = combined_results_PDL2 [,c(1,3,2,4,5)]
#round
combined_results_PDL2[,c(1:4)] = signif(combined_results_PDL2[,c(1:4)], digits=2)
View(combined_results_PDL1)
combined_results_PDL1[,1]+1
combined_results_PDL1[,2]+1
combined_results_PDL1[,3]+1
combined_results_PDL1[,4]+1
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
data.dir = paste0(code_dir,"/sceptre2-manuscript/writeups/papalexi_analysis/")
gene_path = paste0(data.dir,
'sceptre_CUL3_and_PDL1_mrna_results_with_effect_size.rds')
protein_path = paste0(data.dir,'sceptre_protein_results_with_effect_size.rds')
seurat_path = paste0(data.dir,'papalexi_results_seurat.rds')
#Note that sceptre results have columns pvalue, grna, target
#get sceptre perturbation on PDL1 mrna results
gene_result = readRDS(gene_path)
#get sceptre perturbation on protein results
protein_result = readRDS(protein_path)
#get seurat DE results. Columns 1,2,and 6 correspond to pvalue, effect size
#and perturbation
seurat_result = readRDS(seurat_path)
#change seurat to numeric
seurat_result$p_val = as.numeric(seurat_result$p_val)
seurat_result$avg_log2FC = as.numeric(seurat_result$avg_log2FC)
#See which gene perturbations are associated with PDL1 protein expression
#get pvalues from sceptre
P_adj = protein_result$p_value
#unlist pvalues
P_adj = unlist(P_adj)
#some pvalues are negative so take absolute value
P_adj = abs(P_adj)
#make numeric
P_adj = as.numeric(P_adj)
#perform BH procedure
P_adj = p.adjust(P_adj,method = 'BH')
#replace results matrix pvalues with adjusted pvalues
protein_adjusted = data.frame(adj.Pval = P_adj,
log_fold_change = protein_result$log_fold_change,
response_id = protein_result$response_id,
grna_group = protein_result$grna_group)
#filter to just look at PDL1 pvalues
protein_PDL1 = protein_adjusted[which(protein_adjusted$response_id == 'PDL1'),]
#get significant perturbations
sig_genes = subset(protein_PDL1,adj.Pval < 0.05)$grna_group
#unfactor
sig_genes = unfactor(sig_genes)
A = 'Significant perturbations for the expression of PDL1 protein are:\n '
cat(paste0(A,paste(sig_genes,collapse = ',')))
#get sceptre results on PDL2 protein
protein_PDL2_raw = subset(protein_result,response_id == "PDL2")
protein_PDL2_raw = subset(protein_PDL2_raw,select = c(grna_group,p_value,
log_fold_change))
#get seurat results on PDL2 protein. Columns 1,2, and 6 are pvalue,effect size
#and perturbation
seurat_PDL2_raw = subset(seurat_result,Target == "PDL2")
seurat_PDL2_raw = subset(seurat_PDL2_raw,select = c(p_val,avg_log2FC,PRTB))
#remove perturbations that aren't in both analyses
for(target in protein_PDL2_raw$grna_group){
if (target %in% seurat_PDL2_raw$PRTB == F){
seurat_PDL2_raw = rbind(seurat_PDL2_raw,c(NA,NA,target))
}
}
protein_PDL2_raw = subset(protein_PDL2_raw,grna_group %in% seurat_PDL2_raw$PRTB)
#reorder rows of sceptre analysis
protein_PDL2_raw = protein_PDL2_raw[match(seurat_PDL2_raw$PRTB,
protein_PDL2_raw$grna_group),]
protein_PDL2_raw$grna_group = unfactor(protein_PDL2_raw$grna_group)
#bind them
combined_results_PDL2 = data.frame(protein_PDL2_raw$p_value,
protein_PDL2_raw$log_fold_change,
seurat_PDL2_raw$p_val,
seurat_PDL2_raw$avg_log2FC,
protein_PDL2_raw$grna_group)
colnames(combined_results_PDL2) = c("SCEPTRE Pvalues","SCEPTRE Log Change",
"Seurat Pvalues",
'Seurat Log Change',
"Perturbation")
#reorder columns
combined_results_PDL2 = combined_results_PDL2 [,c(1,3,2,4,5)]
#round
combined_results_PDL2[,c(1:4)] = signif(combined_results_PDL2[,c(1:4)], digits=2)
seurat_result$p_val+1
seurat_result$avg_log2FC+1
combined_results_PDL2$`Seurat Log Change`+1
combined_results_PDL2$`Seurat Log Change`
combined_results_PDL2$`Seurat Pvalues`+1
combined_results_PDL2$`Seurat Pvalues`
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(httr)
library(rlist)
library(jsonlite)
library(varhandle)
library(stringi)
library(kableExtra)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
