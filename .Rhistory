library(ondisc)
library(sceptre2)
papalexi_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "data/papalexi/eccite_screen/")
library(ondisc)
library(sceptre2)
LOCAL_SCEPTRE2_DATA_DIR="/Users/kmason/data/projects/sceptre2/"
papalexi_dir <- paste0(LOCAL_SCEPTRE2_DATA_DIR, "data/papalexi/eccite_screen/")
# gene info
gene_odm_fp <- paste0(papalexi_dir, "gene/matrix.odm")
# grna info
grna_odm_fp <- paste0(papalexi_dir, "grna_assignment/matrix.odm")
# protein info
protein_odm_fp <- paste0(papalexi_dir, "protein/matrix.odm")
# mm odm metadata fp
mm_metadata_fp <- paste0(papalexi_dir, "multimodal_metadata.rds")
# construct mm odm
mm_odm <- read_multimodal_odm(odm_fps = c(gene_odm_fp, grna_odm_fp, protein_odm_fp),
multimodal_metadata_fp = mm_metadata_fp)
library(sceptre)
mm_odm <- read_multimodal_odm(odm_fps = c(gene_odm_fp, grna_odm_fp, protein_odm_fp),
multimodal_metadata_fp = mm_metadata_fp)
library(ondisc)
library(sceptre2)
library(sceptre)
library(lowmoi)
sessionInfo()
devtools::install_github('timothy-barry/ondisc')
library(ondisc)
devtools::install_github('timothy-barry/ondisc')
LOCAL_SCEPTRE2_DATA_DIR="/Users/kmason/data/projects/sceptre2/"
papalexi_dir <- paste0(LOCAL_SCEPTRE2_DATA_DIR, "data/papalexi/eccite_screen/")
# gene info
gene_odm_fp <- paste0(papalexi_dir, "gene/matrix.odm")
# grna info
grna_odm_fp <- paste0(papalexi_dir, "grna_assignment/matrix.odm")
# protein info
protein_odm_fp <- paste0(papalexi_dir, "protein/matrix.odm")
# mm odm metadata fp
mm_metadata_fp <- paste0(papalexi_dir, "multimodal_metadata.rds")
# construct mm odm
mm_odm <- read_multimodal_odm(odm_fps = c(gene_odm_fp, grna_odm_fp, protein_odm_fp),
multimodal_metadata_fp = mm_metadata_fp)
sessionInfo()
# construct mm odm
mm_odm <- read_multimodal_odm(odm_fps = c(gene_odm_fp, grna_odm_fp, protein_odm_fp),
multimodal_metadata_fp = mm_metadata_fp)
library(ondisc)
# construct mm odm
mm_odm <- read_multimodal_odm(odm_fps = c(gene_odm_fp, grna_odm_fp, protein_odm_fp),
multimodal_metadata_fp = mm_metadata_fp)
sessionInfo()
library(ondisc)
library(sceptre2)
library(sceptre)
#devtools::install_github('timothy-barry/ondisc')
LOCAL_SCEPTRE2_DATA_DIR="/Users/kmason/data/projects/sceptre2/"
papalexi_dir <- paste0(LOCAL_SCEPTRE2_DATA_DIR, "data/papalexi/eccite_screen/")
# gene info
gene_odm_fp <- paste0(papalexi_dir, "gene/matrix.odm")
# grna info
grna_odm_fp <- paste0(papalexi_dir, "grna_assignment/matrix.odm")
# protein info
protein_odm_fp <- paste0(papalexi_dir, "protein/matrix.odm")
# mm odm metadata fp
mm_metadata_fp <- paste0(papalexi_dir, "multimodal_metadata.rds")
# construct mm odm
mm_odm <- read_multimodal_odm(odm_fps = c(gene_odm_fp, grna_odm_fp, protein_odm_fp),
multimodal_metadata_fp = mm_metadata_fp)
knitr::opts_chunk$set(echo = TRUE)
# Load packages.
library(Seurat)
library(SeuratData)
library(ggplot2)
library(patchwork)
library(scales)
library(dplyr)
library(reshape2)
library(mixtools)
library(stringr)
# Download dataset using SeuratData.
InstallData(ds = "thp1.eccite")
A = readRDS('gene_result.rds')
B = readRDS('protein_result.rds')
View(A)
View(B)
P = B[,1]
P = unlist(P)
P = abs(P)
P = as.numeric(P)
P = p.adjust(P,method = 'BH')
BP= cbind(P,B[,c(2,3)])
BP = BP[which(BP[,3] == 'PDL1')]
View(BP)
OCAL_SCEPTRE2_DATA_DIR <-.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
library(ondisc)
library(sceptre2)
library(sceptre)
#devtools::install_github('timothy-barry/ondisc')
LOCAL_SCEPTRE2_DATA_DIR <-.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
papalexi_dir <- paste0(LOCAL_SCEPTRE2_DATA_DIR, "data/papalexi/eccite_screen/")
# gene info
gene_odm_fp <- paste0(papalexi_dir, "gene/matrix.odm")
# grna info
grna_odm_fp <- paste0(papalexi_dir, "grna_assignment/matrix.odm")
# protein info
protein_odm_fp <- paste0(papalexi_dir, "protein/matrix.odm")
# mm odm metadata fp
mm_metadata_fp <- paste0(papalexi_dir, "multimodal_metadata.rds")
# construct mm odm
mm_odm <- read_multimodal_odm(odm_fps = c(gene_odm_fp, grna_odm_fp, protein_odm_fp),
multimodal_metadata_fp = mm_metadata_fp)
# set formulas, grna group target name
gene_formula <- ~ log(gene_n_umis) + log(gene_n_nonzero) + bio_rep + phase + p_mito
protein_formula <- ~ log(protein_n_umis) + bio_rep + phase + p_mito
grna_group <- "target"
# set hyperparameters
B <- 2500000
side <- "both"
max_b_per_batch <- 250000
in_memory <- TRUE
statistic <- "full" # "distilled" is faster but might be less powerful
return_dist <- FALSE
screen_b <- 25000
# randomly select gene-grna group pairs to analyze
gene_grna_group_pairs <- expand.grid(response_id = mm_odm |>
get_modality("gene") |>
get_feature_ids('CD274'),
grna_group = c("CUL3"))
# randomly select gene-grna group pairs to analyze
gene_grna_group_pairs <- expand.grid(response_id = mm_odm |>
get_modality("gene") |>
get_feature_ids(),
grna_group = c("IRF1","BRD4","CUL3","CMTM6","ATF2",
"CAV1","CD86","ETV7","IFNGR1","IFNGR2","IRF7",
"JAK2","MARCH8","MYC","NFKBIA","PDCD1LG2",
"POU2F2","SMAD4","SPI1","STAT1","STAT2","STAT3",
"STAT5A","TNFRSF14","UBE2L6"))
# randomly select gene-grna group pairs to analyze
gene_grna_group_pairs_pdl1 <- expand.grid(response_id = mm_odm |>
get_modality("gene") |>
get_feature_ids(),
grna_group = c("IRF1","BRD4","CUL3","CMTM6","ATF2",
"CAV1","CD86","ETV7","IFNGR1","IFNGR2","IRF7",
"JAK2","MARCH8","MYC","NFKBIA","PDCD1LG2",
"POU2F2","SMAD4","SPI1","STAT1","STAT2","STAT3",
"STAT5A","TNFRSF14","UBE2L6"))
View(gene_grna_group_pairs_pdl1)
View(gene_grna_group_pairs_pdl1)
gene_grna_group_pairs_pdl1 = subset(gene_grna_group_pairs_pdl1,response.id = 'CD274')
View(gene_grna_group_pairs_pdl1)
dim(gene_grna_group_pairs_pdl1)
gene_grna_group_pairs_pdl1 = subset(gene_grna_group_pairs_pdl1,response.id == 'CD274')
View(gene_grna_group_pairs_pdl1)
gene_grna_group_pairs_pdl1 = subset(gene_grna_group_pairs_pdl1,response_id == 'CD274')
analyze the gene data
# analyze the gene data
gene_result <- run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = gene_grna_group_pairs_pdl1,
form = gene_formula,
response_modality_name = "gene",
grna_modality_name = "grna_assignment",
grna_group_column_name = "target",
B = B,
side = side,
max_b_per_batch = max_b_per_batch,
in_memory = in_memory,
statistic = statistic,
return_dist = return_dist,
screen_b = screen_b)
#save files, Using absolute path becasue not sure how to do it otherwise
data.dir = '/Users/kmason/sceptre2-manuscript/writeups/papalexi_analysis/'
saveRDS(gene_result,'gene_result_PDL1_mrna.rds')
knitr::opts_chunk$set(echo = TRUE)
#using absolute paths to download results since files exist on github
data.dir = '/Users/kmason/sceptre2-manuscript/writeups/papalexi_analysis/'
gene_path = paste0(data.dir,'gene_result_PDL1_mrna.rds')
protein_path = paste0(data.dir,'protein_result.rds')
seurat_path = paste0(data.dir,'papalexi_results_seurat.rds')
gene_result = readRDS(gene_path)
library(ondisc)
library(sceptre2)
library(sceptre)
#devtools::install_github('timothy-barry/ondisc')
LOCAL_SCEPTRE2_DATA_DIR <-.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
