nt.class.name = "NT",
min.de.genes = 5,
iter.num = 10,
de.assay = "RNA",
verbose = F,
prtb.type = "KO")
# Calculate percentage of KO cells for all target gene classes.
df <- prop.table(table(eccite$mixscape_class.global, eccite$NT),2)
df2 <- reshape2::melt(df)
df2$Var2 <- as.character(df2$Var2)
test <- df2[which(df2$Var1 == "KO"),]
test <- test[order(test$value, decreasing = T),]
new.levels <- test$Var2
df2$Var2 <- factor(df2$Var2, levels = new.levels )
df2$Var1 <- factor(df2$Var1, levels = c("NT", "NP", "KO"))
df2$gene <- sapply(as.character(df2$Var2), function(x) strsplit(x, split = "g")[[1]][1])
df2$guide_number <- sapply(as.character(df2$Var2),
function(x) strsplit(x, split = "g")[[1]][2])
df3 <- df2[-c(which(df2$gene == "NT")),]
p1 <- ggplot(df3, aes(x = guide_number, y = value*100, fill= Var1)) +
geom_bar(stat= "identity") +
theme_classic()+
scale_fill_manual(values = c("grey49", "grey79","coral1")) +
ylab("% of cells") +
xlab("sgRNA")
p1 + theme(axis.text.x = element_text(size = 18, hjust = 1),
axis.text.y = element_text(size = 18),
axis.title = element_text(size = 16),
strip.text = element_text(size=16, face = "bold")) +
facet_wrap(vars(gene),ncol = 5, scales = "free") +
labs(fill = "mixscape class") +theme(legend.title = element_text(size = 14),
legend.text = element_text(size = 12))
Idents(eccite)
unique(Idents(eccite))
table(Idents(eccite))
STAT3_marker = FindMarkers(eccite,ident.1 = 'STAT3 NP',ident.2 = 'NT',
assay = 'RNA',only.pos = F,base = exp(1))
NFKBIA_marker = FindMarkers(eccite,ident.1 = 'NFKBIA NP',ident.2 = 'NT',
assay = 'RNA',only.pos = F,base = exp(1))
ETV7_marker = FindMarkers(eccite,ident.1 = 'ETV7 NP',ident.2 = 'NT',
assay = 'RNA',only.pos = F,base = exp(1))
#CUL3_marker$avg_log2FC = signif(CUL3_marker$avg_log2FC, digits=2)
#CUL3_marker$p_val = signif(CUL3_marker$p_val, digits=2)
View(STAT3_marker)
View(NFKBIA_marker)
STAT3_marker = FindMarkers(eccite,ident.1 = 'STAT3 NP',ident.2 = 'NT',
assay = 'RNA',only.pos = F,base = exp(1),
logfc.threshold = 0)
NFKBIA_marker = FindMarkers(eccite,ident.1 = 'NFKBIA NP',ident.2 = 'NT',
assay = 'RNA',only.pos = F,base = exp(1),
logfc.threshold = 0)
ETV7_marker = FindMarkers(eccite,ident.1 = 'ETV7 NP',ident.2 = 'NT',
assay = 'RNA',only.pos = F,base = exp(1),
logfc.threshold = 0)
#CUL3_marker$avg_log2FC = signif(CUL3_marker$avg_log2FC, digits=2)
#CUL3_marker$p_val = signif(CUL3_marker$p_val, digits=2)
View(ETV7_marker)
View(NFKBIA_marker)
View(STAT3_marker)
dir = "/Users/kmason/code/sceptre2-manuscript/writeups/papalexi_analysis/"
saveRDS(STAT3_marker ,paste0(dir,"seurat_STAT3_results.rds"))
saveRDS(NFKBIA_marker ,paste0(dir,"seurat_NFKBIA_results.rds"))
saveRDS(ETV7_marker ,paste0(dir,"seurat_ETV7_results.rds"))
knitr::opts_chunk$set(echo = TRUE)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
data.dir = paste0(code_dir,"/sceptre2-manuscript/writeups/papalexi_analysis/")
sceptre_path = paste0(data.dir,
'sceptre_STAT3_NFKBIA_ETV7_mrna_results_with_effect_size.rds')
seurat_stat3_path = paste0(data.dir,
'seurat_STAT3_results.rds.rds')
seurat_nfkbia_path = paste0(data.dir,
'seurat_NFKBIA_results.rds.rds')
seurat_etv7_path = paste0(data.dir,
'seurat_ETV7_results.rds.rds')
sceptre = readRDS(sceptre_path)
seurat_stat3 = readRDS(seurat_stat3_path)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
data.dir = paste0(code_dir,"/sceptre2-manuscript/writeups/papalexi_analysis/")
sceptre_path = paste0(data.dir,
'sceptre_STAT3_NFKBIA_ETV7_mrna_results_with_effect_size.rds')
seurat_stat3_path = paste0(data.dir,
'seurat_STAT3_results.rds')
seurat_nfkbia_path = paste0(data.dir,
'seurat_NFKBIA_results.rds')
seurat_etv7_path = paste0(data.dir,
'seurat_ETV7_results.rds')
sceptre = readRDS(sceptre_path)
seurat_stat3 = readRDS(seurat_stat3_path)
seurat_nfkbia = readRDS(seurat_nfkbia_path)
seurat_etv7 = readRDS(seurat_etv7_path)
# Load packages.
library(Seurat)
library(SeuratData)
library(ggplot2)
library(patchwork)
library(scales)
library(dplyr)
library(reshape2)
library(mixtools)
library(stringr)
library(enrichR)
library(kableExtra)
library(varhandle)
View(seurat_etv7)
seurat_etv7$p_val<0.4
#get significant genes
seurat_etv7_sig = subset(seurat_etv7,p_val_adj < 0.05)
View(seurat_etv7_sig)
#get significant genes
seurat_etv7_sig = subset(seurat_etv7,p_val_adj < 0.05)
seurat_stat3_sig = subset(seurat_stat3,p_val_adj < 0.05)
seurat_nfkbia_sig = subset(seurat_nfkbia,p_val_adj < 0.05)
View(seurat_nfkbia_sig)
View(seurat_stat3_sig)
View(seurat_nfkbia)
View(seurat_etv7_sig)
View(seurat_nfkbia_sig)
View(seurat_nfkbia)
#get significant genes
seurat_etv7_sig = rownames(subset(seurat_etv7,p_val_adj < 0.05))
seurat_stat3_sig = rownames(subset(seurat_stat3,p_val_adj < 0.05))
seurat_nfkbia_sig = rownames(subset(seurat_nfkbia,p_val_adj < 0.05))
View(sceptre)
min(sceptre$p_value)
View(sceptre)
sceptre_stat3 = subset(sceptre,grna_group == "STAT3")
sceptre_nfkbia = subset(sceptre,grna_group == "NFKBIA")
sceptre_etv7 = subset(sceptre,grna_group == "ETV7")
sceptre$p_value+1
View(seurat_stat3)
#get number of response genes analyzed per perturbation
ngene = nrow(sceptre)/3
sceptre_stat3 = subset(sceptre,grna_group == "STAT3")
sceptre_stat3 = subset(sceptre_stat3,p_val < 0.05/ngene)
View(sceptre_stat3)
#get number of response genes analyzed per perturbation
ngene = nrow(sceptre)/3
sceptre_stat3 = subset(sceptre,grna_group == "STAT3")
sceptre_stat3 = subset(sceptre_stat3,p_value < 0.05/ngene)
sceptre_nfkbia = subset(sceptre,grna_group == "NFKBIA")
sceptre_nfkbia = subset(sceptre_nfkbia,p_value < 0.05/ngene)
sceptre_etv7 = subset(sceptre,grna_group == "ETV7")
sceptre_etv7 = subset(sceptre_etv7,p_value < 0.05/ngene)
View(sceptre_etv7)
View(seurat_etv7)
seurat_stat3$p_val[2]
seurat_stat3$p_val_adj[2]
View(seurat_etv7)
1.6*10^(-4)*8401
View(sceptre)
#get number of response genes analyzed per perturbation
ngene = nrow(sceptre)/3
sceptre_stat3 = subset(sceptre,grna_group == "STAT3")
sceptre_stat3 = subset(sceptre_stat3,p_value < 0.1/ngene)
sceptre_nfkbia = subset(sceptre,grna_group == "NFKBIA")
sceptre_nfkbia = subset(sceptre_nfkbia,p_value < 0.1/ngene)
sceptre_etv7 = subset(sceptre,grna_group == "ETV7")
sceptre_etv7 = subset(sceptre_etv7,p_value < 0.1/ngene)
#get significant genes
seurat_etv7_sig = rownames(subset(seurat_etv7,p_val_adj < 0.1))
seurat_stat3_sig = rownames(subset(seurat_stat3,p_val_adj < 0.1))
seurat_nfkbia_sig = rownames(subset(seurat_nfkbia,p_val_adj < 0.1))
#get number of response genes analyzed per perturbation
ngene = nrow(sceptre)/3
sceptre_stat3 = subset(sceptre,grna_group == "STAT3")
sceptre_stat3 = subset(sceptre_stat3,p_value < 0.1/ngene)
sceptre_nfkbia = subset(sceptre,grna_group == "NFKBIA")
sceptre_nfkbia = subset(sceptre_nfkbia,p_value < 0.1/ngene)
sceptre_etv7 = subset(sceptre,grna_group == "ETV7")
sceptre_etv7 = subset(sceptre_etv7,p_value < 0.1/ngene)
ibrary(ondisc) # devtools::install_github('timothy-barry/ondisc')
library(ondisc) # devtools::install_github('timothy-barry/ondisc')
library(sceptre3)
library(BH)
LOCAL_SCEPTRE2_DATA_DIR <-.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
papalexi_dir <- paste0(LOCAL_SCEPTRE2_DATA_DIR, "data/papalexi/eccite_screen/")
# gene info
gene_odm_fp <- paste0(papalexi_dir, "gene/matrix.odm")
gene_metadata_fp <- paste0(papalexi_dir, "gene/metadata_qc.rds")
gene_odm <- read_odm(odm_fp = gene_odm_fp, metadata_fp = gene_metadata_fp)
gene_covariate_matrix <- gene_odm |> get_cell_covariates()
gene_expression_matrix <- gene_odm[[seq(1, nrow(gene_odm)),]]
rownames(gene_expression_matrix) <- get_feature_ids(gene_odm)
library(ondisc) # devtools::install_github('timothy-barry/ondisc')
library(sceptre3)
library(BH)
LOCAL_SCEPTRE2_DATA_DIR <-.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
library(ondisc) # devtools::install_github('timothy-barry/ondisc')
library(sceptre3)
library(BH)
LOCAL_SCEPTRE2_DATA_DIR <-.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
papalexi_dir <- paste0(LOCAL_SCEPTRE2_DATA_DIR, "data/papalexi/eccite_screen/")
# gene info
gene_odm_fp <- paste0(papalexi_dir, "gene/matrix.odm")
gene_metadata_fp <- paste0(papalexi_dir, "gene/metadata_qc.rds")
gene_odm <- read_odm(odm_fp = gene_odm_fp, metadata_fp = gene_metadata_fp)
gene_covariate_matrix <- gene_odm |> get_cell_covariates()
gene_expression_matrix <- gene_odm[[seq(1, nrow(gene_odm)),]]
rownames(gene_expression_matrix) <- get_feature_ids(gene_odm)
# grna info
grna_odm_fp <- paste0(papalexi_dir, "grna_expression/matrix.odm")
grna_metadata_fp <- paste0(papalexi_dir, "grna_expression/metadata_qc.rds")
grna_odm <- read_odm(odm_fp = grna_odm_fp, metadata_fp = grna_metadata_fp)
grna_matrix <- grna_odm[[seq(1, nrow(grna_odm)),]]
grna_groups <- data.frame(grna_id = rownames(grna_odm@feature_covariates),
grna_group = grna_odm@feature_covariates$target)
# protein info
protein_odm_fp <- paste0(papalexi_dir, "protein/matrix.odm")
protein_metadata_fp <- paste0(papalexi_dir, "protein/metadata_qc.rds")
protein_odm <- read_odm(odm_fp = protein_odm_fp, metadata_fp = protein_metadata_fp)
protein_covariate_matrix <- protein_odm |> get_cell_covariates()
protein_matrix <- protein_odm[[seq(1,nrow(protein_odm)),]]
rownames(protein_matrix) <- get_feature_ids(protein_odm)
# set formulas, grna group target name
gene_formula <- ~ log(n_umis) + log(n_nonzero) + bio_rep + phase + p_mito
protein_formula <- ~ log(n_umis) + bio_rep + phase + p_mito
#######################################
# SET ARGS FOR GENE EXPRESSION ANALYSIS
#######################################
response_matrix <- gene_expression_matrix
grna_matrix <- grna_matrix
covariate_data_frame <- gene_covariate_matrix
grna_group_data_frame <- grna_groups
formula_object <- gene_formula
calibration_check <- FALSE
unique_grna = unique(grna_groups$grna_group)
unique_grna
unique_grna[-which(unique_grna == 'non-targeting')]
#get CUL3 mrna data. Remove genes 13565-13575 since they contain something that is causing code to crash
response_grna_group_pairs <- expand.grid(response_id = rownames(response_matrix)[-c(13565:13575)],
grna_group = unique_grna[-which(unique_grna == 'non-targeting')]) # an example set of pairs
test_stat <- "full"
return_resampling_dist <- FALSE
adaptive_permutation_test <- TRUE
fit_skew_normal <- TRUE
result_gene <- run_sceptre_lowmoi(response_matrix,
grna_matrix,
covariate_data_frame,
grna_group_data_frame,
formula_object,
calibration_check,
response_grna_group_pairs,
test_stat,
return_resampling_dist,
adaptive_permutation_test,
fit_skew_normal)
View(response_grna_group_pairs)
test_stat <- "full"
return_resampling_dist <- FALSE
adaptive_permutation_test <- TRUE
fit_skew_normal <- TRUE
result_gene <- run_sceptre_lowmoi(response_matrix,
grna_matrix,
covariate_data_frame,
grna_group_data_frame,
formula_object,
calibration_check,
response_grna_group_pairs,
test_stat,
return_resampling_dist,
adaptive_permutation_test,
fit_skew_normal)
knitr::opts_chunk$set(echo = TRUE)
# Load packages.
library(Seurat)
library(SeuratData)
library(ggplot2)
library(patchwork)
library(scales)
library(dplyr)
library(reshape2)
library(mixtools)
library(stringr)
library(enrichR)
library(kableExtra)
library(varhandle)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
data.dir = paste0(code_dir,"/sceptre2-manuscript/writeups/papalexi_analysis/")
sceptre_path = paste0(data.dir,
'sceptre_STAT3_NFKBIA_ETV7_mrna_results_with_effect_size.rds')
seurat_stat3_path = paste0(data.dir,
'seurat_STAT3_results.rds')
seurat_nfkbia_path = paste0(data.dir,
'seurat_NFKBIA_results.rds')
seurat_etv7_path = paste0(data.dir,
'seurat_ETV7_results.rds')
sceptre = readRDS(sceptre_path)
seurat_stat3 = readRDS(seurat_stat3_path)
seurat_nfkbia = readRDS(seurat_nfkbia_path)
seurat_etv7 = readRDS(seurat_etv7_path)
#get significant genes
seurat_etv7_sig = rownames(subset(seurat_etv7,p_val_adj < 0.1))
seurat_stat3_sig = rownames(subset(seurat_stat3,p_val_adj < 0.1))
seurat_nfkbia_sig = rownames(subset(seurat_nfkbia,p_val_adj < 0.1))
#get number of response genes analyzed per perturbation
ngene = nrow(sceptre)/3
sceptre_stat3 = subset(sceptre,grna_group == "STAT3")
sceptre_stat3 = subset(sceptre_stat3,p_value < 0.1/ngene)
sceptre_nfkbia = subset(sceptre,grna_group == "NFKBIA")
sceptre_nfkbia = subset(sceptre_nfkbia,p_value < 0.1/ngene)
sceptre_etv7 = subset(sceptre,grna_group == "ETV7")
sceptre_etv7 = subset(sceptre_etv7,p_value < 0.1/ngene)
knitr::opts_chunk$set(echo = TRUE)
# Load packages.
library(Seurat)
library(SeuratData)
library(ggplot2)
library(patchwork)
library(scales)
library(dplyr)
library(reshape2)
library(mixtools)
library(stringr)
library(enrichR)
library(kableExtra)
library(varhandle)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
knitr::opts_chunk$set(echo = TRUE)
# Load packages.
library(Seurat)
library(SeuratData)
library(ggplot2)
library(patchwork)
library(scales)
library(dplyr)
library(reshape2)
library(mixtools)
library(stringr)
library(enrichR)
library(kableExtra)
library(varhandle)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
data.dir = paste0(code_dir,"/sceptre2-manuscript/writeups/papalexi_analysis/")
sceptre_path = paste0(data.dir,
'sceptre_STAT3_NFKBIA_ETV7_mrna_results_with_effect_size.rds')
seurat_stat3_path = paste0(data.dir,
'seurat_STAT3_results.rds')
seurat_nfkbia_path = paste0(data.dir,
'seurat_NFKBIA_results.rds')
seurat_etv7_path = paste0(data.dir,
'seurat_ETV7_results.rds')
sceptre = readRDS(sceptre_path)
seurat_stat3 = readRDS(seurat_stat3_path)
seurat_nfkbia = readRDS(seurat_nfkbia_path)
seurat_etv7 = readRDS(seurat_etv7_path)
#get significant genes
seurat_etv7_sig = rownames(subset(seurat_etv7,p_val_adj < 0.1))
seurat_stat3_sig = rownames(subset(seurat_stat3,p_val_adj < 0.1))
seurat_nfkbia_sig = rownames(subset(seurat_nfkbia,p_val_adj < 0.1))
#get number of response genes analyzed per perturbation
ngene = nrow(sceptre)/3
sceptre_stat3 = subset(sceptre,grna_group == "STAT3")
sceptre_stat3 = subset(sceptre_stat3,p_value < 0.1/ngene)
sceptre_nfkbia = subset(sceptre,grna_group == "NFKBIA")
sceptre_nfkbia = subset(sceptre_nfkbia,p_value < 0.1/ngene)
sceptre_etv7 = subset(sceptre,grna_group == "ETV7")
sceptre_etv7 = subset(sceptre_etv7,p_value < 0.1/ngene)
View(sceptre)
#get number of response genes analyzed per perturbation
ngene = nrow(sceptre)/3
sceptre_stat3 = subset(sceptre,grna_group == "STAT3")
sceptre_stat3$p_value = p.adjust(sceptre_stat3$p_value)
#sceptre_stat3 = subset(sceptre_stat3,p_value < 0.1/ngene)
sceptre_nfkbia = subset(sceptre,grna_group == "NFKBIA")
sceptre_nfkbia$p_value = p.adjust(sceptre_nfkbia$p_value)
#sceptre_nfkbia = subset(sceptre_nfkbia,p_value < 0.1/ngene)
sceptre_etv7 = subset(sceptre,grna_group == "ETV7")
sceptre_etv7$p_value = p.adjust(sceptre_etv7$p_value)
#sceptre_etv7 = subset(sceptre_etv7,p_value < 0.1/ngene)
knitr::opts_chunk$set(echo = TRUE)
# Load packages.
library(Seurat)
library(SeuratData)
library(ggplot2)
library(patchwork)
library(scales)
library(dplyr)
library(reshape2)
library(mixtools)
library(stringr)
library(enrichR)
library(kableExtra)
library(varhandle)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
data.dir = paste0(code_dir,"/sceptre2-manuscript/writeups/papalexi_analysis/")
sceptre_path = paste0(data.dir,
'sceptre_STAT3_NFKBIA_ETV7_mrna_results_with_effect_size.rds')
seurat_stat3_path = paste0(data.dir,
'seurat_STAT3_results.rds')
seurat_nfkbia_path = paste0(data.dir,
'seurat_NFKBIA_results.rds')
seurat_etv7_path = paste0(data.dir,
'seurat_ETV7_results.rds')
sceptre = readRDS(sceptre_path)
seurat_stat3 = readRDS(seurat_stat3_path)
seurat_nfkbia = readRDS(seurat_nfkbia_path)
seurat_etv7 = readRDS(seurat_etv7_path)
#get significant genes
seurat_etv7_sig = rownames(subset(seurat_etv7,p_val_adj < 0.1))
seurat_stat3_sig = rownames(subset(seurat_stat3,p_val_adj < 0.1))
seurat_nfkbia_sig = rownames(subset(seurat_nfkbia,p_val_adj < 0.1))
#get number of response genes analyzed per perturbation
ngene = nrow(sceptre)/3
sceptre_stat3 = subset(sceptre,grna_group == "STAT3")
sceptre_stat3$p_value_adj = p.adjust(sceptre_stat3$p_value)
sceptre_stat3 = subset(sceptre_stat3,p_value < 0.1)
sceptre_nfkbia = subset(sceptre,grna_group == "NFKBIA")
sceptre_nfkbia$p_value_adj = p.adjust(sceptre_nfkbia$p_value)
sceptre_nfkbia = subset(sceptre_nfkbia,p_value < 0.1)
sceptre_etv7 = subset(sceptre,grna_group == "ETV7")
sceptre_etv7$p_value_adj = p.adjust(sceptre_etv7$p_value)
sceptre_etv7 = subset(sceptre_etv7,p_value < 0.1)
View(sceptre_etv7)
knitr::opts_chunk$set(echo = TRUE)
# Load packages.
library(Seurat)
library(SeuratData)
library(ggplot2)
library(patchwork)
library(scales)
library(dplyr)
library(reshape2)
library(mixtools)
library(stringr)
library(enrichR)
library(kableExtra)
library(varhandle)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
data.dir = paste0(code_dir,"/sceptre2-manuscript/writeups/papalexi_analysis/")
sceptre_path = paste0(data.dir,
'sceptre_STAT3_NFKBIA_ETV7_mrna_results_with_effect_size.rds')
seurat_stat3_path = paste0(data.dir,
'seurat_STAT3_results.rds')
seurat_nfkbia_path = paste0(data.dir,
'seurat_NFKBIA_results.rds')
seurat_etv7_path = paste0(data.dir,
'seurat_ETV7_results.rds')
sceptre = readRDS(sceptre_path)
seurat_stat3 = readRDS(seurat_stat3_path)
seurat_nfkbia = readRDS(seurat_nfkbia_path)
seurat_etv7 = readRDS(seurat_etv7_path)
#get significant genes
seurat_etv7_sig = rownames(subset(seurat_etv7,p_val_adj < 0.1))
seurat_stat3_sig = rownames(subset(seurat_stat3,p_val_adj < 0.1))
seurat_nfkbia_sig = rownames(subset(seurat_nfkbia,p_val_adj < 0.1))
#get number of response genes analyzed per perturbation
ngene = nrow(sceptre)/3
sceptre_stat3 = subset(sceptre,grna_group == "STAT3")
sceptre_stat3$p_value_adj = p.adjust(sceptre_stat3$p_value,method = "BH")
sceptre_stat3 = subset(sceptre_stat3,p_value < 0.1)
sceptre_nfkbia = subset(sceptre,grna_group == "NFKBIA")
sceptre_nfkbia$p_value_adj = p.adjust(sceptre_nfkbia$p_value,method = "BH")
sceptre_nfkbia = subset(sceptre_nfkbia,p_value < 0.1)
sceptre_etv7 = subset(sceptre,grna_group == "ETV7")
sceptre_etv7$p_value_adj = p.adjust(sceptre_etv7$p_value,method = "BH")
sceptre_etv7 = subset(sceptre_etv7,p_value_a < 0.1)
knitr::opts_chunk$set(echo = TRUE)
# Load packages.
library(Seurat)
library(SeuratData)
library(ggplot2)
library(patchwork)
library(scales)
library(dplyr)
library(reshape2)
library(mixtools)
library(stringr)
library(enrichR)
library(kableExtra)
library(varhandle)
#using absolute paths to download results since files exist on github
code_dir = .get_config_path("LOCAL_CODE_DIR")
data.dir = paste0(code_dir,"/sceptre2-manuscript/writeups/papalexi_analysis/")
sceptre_path = paste0(data.dir,
'sceptre_STAT3_NFKBIA_ETV7_mrna_results_with_effect_size.rds')
seurat_stat3_path = paste0(data.dir,
'seurat_STAT3_results.rds')
seurat_nfkbia_path = paste0(data.dir,
'seurat_NFKBIA_results.rds')
seurat_etv7_path = paste0(data.dir,
'seurat_ETV7_results.rds')
sceptre = readRDS(sceptre_path)
seurat_stat3 = readRDS(seurat_stat3_path)
seurat_nfkbia = readRDS(seurat_nfkbia_path)
seurat_etv7 = readRDS(seurat_etv7_path)
#get significant genes
seurat_etv7_sig = rownames(subset(seurat_etv7,p_val_adj < 0.1))
seurat_stat3_sig = rownames(subset(seurat_stat3,p_val_adj < 0.1))
seurat_nfkbia_sig = rownames(subset(seurat_nfkbia,p_val_adj < 0.1))
#get number of response genes analyzed per perturbation
ngene = nrow(sceptre)/3
sceptre_stat3 = subset(sceptre,grna_group == "STAT3")
sceptre_stat3$p_value_adj = p.adjust(sceptre_stat3$p_value,method = "BH")
sceptre_stat3 = subset(sceptre_stat3,p_value_adj < 0.1)
sceptre_nfkbia = subset(sceptre,grna_group == "NFKBIA")
sceptre_nfkbia$p_value_adj = p.adjust(sceptre_nfkbia$p_value,method = "BH")
sceptre_nfkbia = subset(sceptre_nfkbia,p_value_adj < 0.1)
sceptre_etv7 = subset(sceptre,grna_group == "ETV7")
sceptre_etv7$p_value_adj = p.adjust(sceptre_etv7$p_value,method = "BH")
sceptre_etv7 = subset(sceptre_etv7,p_value_adj < 0.1)
View(sceptre_nfkbia)
library(ondisc) # devtools::install_github('timothy-barry/ondisc')
library(sceptre3)
library(BH)
LOCAL_SCEPTRE2_DATA_DIR <-.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
