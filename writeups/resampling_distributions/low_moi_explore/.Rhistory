inv.M[,1]
abs(inv.M[,1])^{0.1}
p <- 1000
M <- matrix(0, nrow = p, ncol = p)
for (i in 1:p) {
for (j in 1:p) {
if(i == j){
M[i, j] <- 1
}else{
M[i, j] <- 1/p
}
}
}
inv.M <- solve(M)
abs(inv.M[,1])^{0.1}
abs(inv.M[,1])^{0.2}
abs(inv.M[,1])^{0.3}
inv.M
abs(inv.M[,1])^{0.7}
sum(abs(inv.M[,1])^{0.7})
sum(abs(inv.M[,1])^{0.6})
sum(abs(inv.M[,1])^{0.5})
p <- 2000
M <- matrix(0, nrow = p, ncol = p)
for (i in 1:p) {
for (j in 1:p) {
if(i == j){
M[i, j] <- 1
}else{
M[i, j] <- 1/p
}
}
}
sum(abs(inv.M[,1])^{0.5})
sum(abs(solve(M)[,1])^{0.5})
sum(abs(solve(M)[,2])^{0.5})
n <- 1000
p <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
n <- 1000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
t(Z) * g_Z
n <- 1000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
cov_gZ[, j] <- Z[, j] * g_Z
}
cov <- Z %*% cov_gZ
cov <- Z %*% t(cov_gZ)
cov
g_Z
s
gamma
g_Z <- Z %*% gamma
g_Z
Z[, j] * g_Z
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
cov_gZ[, j] <- Z[, j] * g_Z
}
cov_gZ
cov_gZ[,1]
cov_gZ[,2]
n <- 1000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * g_Z
}
n <- 1000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * g_Z
}
cov <- Z %*% t(cov_gZ)
cov
n <- 1000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * g_Z
}
cov <- t(Z) %*% cov_gZ / n
cov
solve(cov)
n <- 5000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * g_Z
}
cov <- t(Z) %*% cov_gZ / n
solve(cov)
n <- 5000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j]
}
cov <- t(Z) %*% cov_gZ / n
solve(cov)
g_Z
n <- 5000
q <- 50
s <- 5
nu <- 2
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * g_Z
}
cov <- t(Z) %*% cov_gZ / n
solve(cov)
n <- 100000
q <- 50
s <- 5
nu <- 4
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * g_Z
}
cov <- t(Z) %*% cov_gZ / n
solve(cov)
n <- 100000
q <- 50
s <- 5
nu <- 2
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * g_Z
}
cov <- t(Z) %*% cov_gZ / n
n
solve(cov)
n <- 100000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- rnorm(n)
}
gamma <- (2*rbinom(q, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * g_Z
}
cov <- t(Z) %*% cov_gZ / n
solve(cov)
n <- 100000
q <- 50
s <- 5
nu <- 2
n <- 100000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- rnorm(n)
}
gamma <- numeric(p)
gamma <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * g_Z
}
n <- 100000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- rnorm(n)
}
gamma <- numeric(q)
gamma <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * g_Z
}
cov <- t(Z) %*% cov_gZ / n
solve(cov)
n <- 100000
q <- 50
s <- 5
nu <- 0.001
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- rnorm(n)
}
gamma <- numeric(q)
gamma <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * g_Z
}
n <- 100000
q <- 50
s <- 5
nu <- 0.01
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- rnorm(n)
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
n <- 100000
q <- 50
s <- 5
nu <- 0.01
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- rnorm(n)
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * (2+g_Z)
}
cov <- t(Z) %*% cov_gZ / n
solve(cov)
n <- 100000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- rnorm(n)
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * (g_Z)
}
cov <- t(Z) %*% cov_gZ / n
solve(cov)
n <- 100000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- rnorm(n)
}
gamma <- numeric(q)
gamma[1:s] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * (2+g_Z)
}
cov <- t(Z) %*% cov_gZ / n
solve(cov)
n <- 100000
q <- 50
s <- 5
nu <- 0.1
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- rnorm(n)
}
gamma <- numeric(q)
gamma[1:q] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * (2+g_Z)
}
cov <- t(Z) %*% cov_gZ / n
solve(cov)
n <- 100000
q <- 50
s <- 5
nu <- 5
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- rnorm(n)
}
gamma <- numeric(q)
gamma[1:q] <- (2*rbinom(s, 1, 0.5) - 1)*nu
g_Z <- Z %*% gamma
cov_gZ <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
cov_gZ[, j] <- Z[, j] * (2+g_Z)
}
cov <- t(Z) %*% cov_gZ / n
solve(cov)
n <- 20000
q <- 100
nu <- 0.5
L <- 10
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
gz <- Z %*% nu*(2*rbinom(q, 1, 0.5) - 1)
q
nu*(2*rbinom(q, 1, 0.5) - 1)
dim(Z)
gz <- Z %*% t(nu*(2*rbinom(q, 1, 0.5) - 1))
Z %*% nu*(2*rbinom(q, 1, 0.5) - 1)
gz <- Z %*% (nu*(2*rbinom(q, 1, 0.5) - 1))
g_Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
g_Z[, j] <- Z[, j] * (gz + L)
}
finalZ <- Z %*% g_Z / n
finalZ <- Z %*% t(g_Z) / n
n <- 5000
q <- 100
nu <- 0.5
L <- 10
Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
Z[, j] <- sample(3, n, replace = TRUE, prob = c(0.6, 0.2, 0.2)) - 1.6
}
gz <- Z %*% (nu*(2*rbinom(q, 1, 0.5) - 1))
g_Z <- matrix(0, nrow = n, ncol = q)
for (j in 1:q) {
g_Z[, j] <- Z[, j] * (gz + L)
}
finalZ <- Z %*% t(g_Z) / n
inv.finalZ <- solve(finalZ)
matrx(1, 2,2) * c(1,1)
matrix(1, 2,2) * c(1,1)
matrix(1, 2,2) * c(1,2)
c(1,2) * matrix(1, 2,2)
t(c(1,2)) * matrix(1, 2,2)
rnor
rnorm(30)
help(gpdAd)
knitr::opts_chunk$set(echo = TRUE)
library(eva)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(katlabutils)
library(cowplot)
library(katlabutils)
help(gpdAd)
library(fitdistrplus)
help(fitdist)
setwd("~/Documents/Projects/sceptre2/sceptre2-manuscript/writeups/resampling_distributions/low_moi_explore")
help(fitdist)
working_dir <- getwd()
working_dir
subDir <- sprintf("figures/power_exploration/%d_resamples_%.2f_percentile",  samples, q)
working_dir <- getwd()
working_dir
subDir <- sprintf("figures/power_exploration/%d_resamples_%.2f_percentile",  samples, q)
k <- 1
working_dir <- getwd()
subDir <- sprintf("figures/power_exploration/%d_resamples_%.2f_percentile",  samples_list[k], q)
samples_list <- samples_list[1:18]
samples_list <- c(5e5, round(seq(1e4, 1e3, length.out = 50), -2))
samples_list <- samples_list[1:18]
subDir <- sprintf("figures/power_exploration/%d_resamples_%.2f_percentile",  samples_list[k], q)
aa<- read.csv(sprintf("%s/%d.csv", file.path(working_dir, subDir), idx))
i
i <- 1
aa<- read.csv(sprintf("%s/%d.csv", file.path(working_dir, subDir), i))
sprintf("%s/%d.csv", file.path(working_dir, subDir), i)
q_list[1]
subDir <- sprintf("figures/power_exploration/%d_resamples_%.2f_percentile",  samples_list[k], 0.96)
read.csv(sprintf("%s/%d.csv", file.path(working_dir, subDir), i))
aa <- read.csv(sprintf("%s/%d.csv", file.path(working_dir, subDir), i))
aa
head(aa)
head(aa,4)
aa[1:,]
aa[1:2,]
aa[,1]
aa[,2]
aa[,3]
which(aa != 0)
aa[,301]
aa[,302]
aa[,300]
aa[,331]
aa[,330]
aa[,332]
q_list <- c(0.96, 0.92, 0.88)
q_list <- c(0.96, 0.92, 0.88)
samples_list <- c(5e5, round(seq(1e4, 1e3, length.out = 50), -2))
q_list <- c(0.96, 0.92, 0.88)
samples_list <- c(5e5, round(seq(1e4, 1e3, length.out = 50), -2))
samples_list <- samples_list[1:18]
for (k in 1:length(samples_list)) {
for (k in 1:length(samples_list)) {
gpd_mat[[k]] <- matrix(0, nrow = nrow(resampling_dists), ncol = 10)
for (i in 1:nrow(resampling_dists)) {
working_dir <- getwd()
subDir <- sprintf("figures/power_exploration/%d_resamples_%.2f_percentile",  samples_list[k], 0.96)
gpd_param <- read.csv(sprintf("%s/%d.csv", file.path(working_dir, subDir), i))
gpd_mat[[k]][1:5, i] <- gpd_param[, i+1]
gpd_mat[[k]][6:10, i] <- gpd_param[, i+331]
}
}
library(eva)
library(tidyverse)
library(katlabutils)
library(cowplot)
library(fitdistrplus)
sceptre2_results_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
# load empirical distributions
resampling_dists <- readRDS(paste0(sceptre2_results_dir, "resampling_distributions/sceptre_resampling_dists.rds"))
a
q_list
