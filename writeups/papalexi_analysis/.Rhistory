library(ondisc)
library(sceptre2)
papalexi_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "data/papalexi/eccite_screen/")
# gene info
gene_odm_fp <- paste0(papalexi_dir, "gene/matrix.odm")
# grna info
grna_odm_fp <- paste0(papalexi_dir, "grna_assignment/matrix.odm")
# protein info
protein_odm_fp <- paste0(papalexi_dir, "protein/matrix.odm")
# mm odm metadata fp
mm_metadata_fp <- paste0(papalexi_dir, "multimodal_metadata.rds")
# construct mm odm
mm_odm <- read_multimodal_odm(odm_fps = c(gene_odm_fp, grna_odm_fp, protein_odm_fp),
multimodal_metadata_fp = mm_metadata_fp)
# set formulas, grna group target name
gene_formula <- ~ log(gene_n_umis) + log(gene_n_nonzero) + bio_rep + phase + p_mito
protein_formula <- ~ log(protein_n_umis) + bio_rep + phase + p_mito
grna_group <- "target"
# set hyperparameters
B <- 2500000
side <- "both"
max_b_per_batch <- 250000
in_memory <- TRUE
statistic <- "full" # "distilled" is faster but might be less powerful
return_dist <- FALSE
screen_b <- 25000
# randomly select gene-grna group pairs to analyze
gene_grna_group_pairs <- expand.grid(response_id = mm_odm |>
get_modality("gene") |>
get_feature_ids() |>
sample(10),
grna_group = c("BRD4", "IRF1"))
# select protein-grna group pairs to analyze
protein_grna_group_pairs <- expand.grid(response_id = mm_odm |>
get_modality("protein") |>
get_feature_ids(),
grna_group = c("BRD4", "IRF1"))
# analyze the gene data
gene_result <- run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = gene_grna_group_pairs,
form = gene_formula,
response_modality_name = "gene",
grna_modality_name = "grna_assignment",
grna_group_column_name = "target",
B = B,
side = side,
max_b_per_batch = max_b_per_batch,
in_memory = in_memory,
statistic = statistic,
return_dist = return_dist,
screen_b = screen_b)
LOCAL_SCEPTRE2_DATA_DIR <-.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
papalexi_dir <- paste0(LOCAL_SCEPTRE2_DATA_DIR, "data/papalexi/eccite_screen/")
# gene info
gene_odm_fp <- paste0(papalexi_dir, "gene/matrix.odm")
# gene info
gene_odm_fp <- paste0(papalexi_dir, "gene/matrix.odm")
# grna info
grna_odm_fp <- paste0(papalexi_dir, "grna_expression/matrix.odm")
# gene info
gene_odm_fp <- paste0(papalexi_dir, "gene/matrix.odm")
# grna info
grna_odm_fp <- paste0(papalexi_dir, "grna_expression/matrix.odm")
# mm odm metadata fp
mm_metadata_fp <- paste0(papalexi_dir, "multimodal_metadata.rds")
mm_metadata_fp
# construct mm odm
mm_odm <- read_multimodal_odm(odm_fps = c(gene_odm_fp, grna_odm_fp, protein_odm_fp),
multimodal_metadata_fp = mm_metadata_fp)
# construct mm odm
mm_odm <- ondisc::read_multimodal_odm(odm_fps = c(gene_odm_fp, grna_odm_fp, protein_odm_fp),
multimodal_metadata_fp = mm_metadata_fp)
# construct mm odm
mm_odm <- ondisc::read_multimodal_odm(odm_fps = c(gene_odm_fp, grna_odm_fp),
multimodal_metadata_fp = mm_metadata_fp)
mm_odm
# set formulas, grna group target name
gene_formula <- ~ log(gene_n_umis) + log(gene_n_nonzero) + bio_rep + phase + p_mito
protein_formula <- ~ log(protein_n_umis) + bio_rep + phase + p_mito
gene_formula
sceptre2::run_sceptre_low_moi
# select gene-gRNA group pairs to analyze
gene_grna_group_pairs <- expand.grid(response_id = mm_odm |>
get_modality("gene") |>
get_feature_ids(),
grna_group = c("CUL3"))
# select gene-gRNA group pairs to analyze
gene_grna_group_pairs <- expand.grid(response_id = mm_odm |>
ondisc::get_modality("gene") |>
ondisc::get_feature_ids(),
grna_group = c("CUL3"))
head(gene_grna_group_pairs)
tail(gene_grna_group_pairs)
nrow(gene_grna_group_pairs)
# select gene-gRNA group pairs to analyze
gene_grna_group_pairs <- expand.grid(response_id = mm_odm |>
ondisc::get_modality("gene") |>
ondisc::get_feature_ids(),
grna_group = c("CUL3")) |> dplyr::sample_n(100)
gene_grna_group_pairs
gene_grna_group_pairs
mm_odm
gene_grna_group_pairs_pdl1
gene_formula
mm_odm |> ondisc::get_cell_covariates() |> head()
mm_odm
gene_grna_group_pairs
gene_formula
B
# set hyperparameters
B <- 25000
side
side <- "both"
max_b_per_batch
max_b_per_batch <- 25000
in_memory
in_memory <- TRUE
statistic <- "full" # "distilled" is faster but might be less powerful
return_dist
return_dist <- FALSE
screen_b <- 500
return_dist
screen_b
# analyze the data using sceptre2
gene_result <- run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = gene_grna_group_pairs,
form = gene_formula,
response_modality_name = "gene",
grna_modality_name = "grna_expression",
grna_group_column_name = "target",
B = B,
side = side,
max_b_per_batch = max_b_per_batch,
in_memory = in_memory,
statistic = statistic,
return_dist = return_dist,
screen_b = screen_b)
# analyze the data using sceptre2
gene_result <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = gene_grna_group_pairs,
form = gene_formula,
response_modality_name = "gene",
grna_modality_name = "grna_expression",
grna_group_column_name = "target",
B = B,
side = side,
max_b_per_batch = max_b_per_batch,
in_memory = in_memory,
statistic = statistic,
return_dist = return_dist,
screen_b = screen_b)
head(gene_result_2)
gene_result_2 <- gene_result
head(gene_result_2)
tail(gene_result_2)
nrow(gene_result_@)
nrow(gene_result_2)
gene_result_2
mm_odm
head(gene_grna_group_pairs)
gene_formula
# analyze the data using sceptre2
result_2 <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = gene_grna_group_pairs,
form = gene_formula,
response_modality_name = "gene",
grna_modality_name = "grna_expression",
grna_group_column_name = "target",
B = B,
side = side,
max_b_per_batch = max_b_per_batch,
in_memory = in_memory,
statistic = statistic,
return_dist = return_dist,
screen_b = screen_b)
mm_odm |> ondisc::get_modality("gene")
response_matrix <- gene_odm[[seq(1, nrow(gene_odm)),]]
# get the in-memory gene matrix
gene_odm <- mm_odm |> ondisc::get_modality("gene")
response_matrix <- gene_odm[[seq(1, nrow(gene_odm)),]]
rownames(response_matrix)
get_feature_ids(gene_odm) |> head()
ondisc::get_feature_ids(gene_odm)
rownames(gene_expression_matrix) <- ondisc::get_feature_ids(gene_odm)
rownames(response_matrix) <- ondisc::get_feature_ids(gene_odm)
rownames(response_matrix)
response_matrix[1:4, 1:6]
mm_odm
# get the in-memory grna matrix
grna_odm <- mm_odm |> ondisc::get_modality("grna_expression")
grna_matrix <- grna_odm[[seq(1, nrow(grna_odm)),]]
grna_matrix[1:5,1:6]
grna_matrix[1:5,1:6]
rownames(grna_matrix)
mm_odm |> ondisc::get_cell_covariates() |> head()
# covariate matrix
covariate_matrix <- mm_odm |> ondisc::get_cell_covariates()
head(v)
head(covariate_matrix)
# grna group data frame
grna_groups <- data.frame(grna_id = rownames(grna_odm@feature_covariates),
grna_group = grna_odm@feature_covariates$target)
# grna group data frame
grna_group_data_frame <- data.frame(grna_id = rownames(grna_odm@feature_covariates),
grna_group = grna_odm@feature_covariates$target)
head(grna_group_data_frame)
View(grna_group_data_frame)
gene_formula
head(gene_grna_group_pairs)
