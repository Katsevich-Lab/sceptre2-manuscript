"frangieh_control_gene",
"frangieh_ifn_gamma_gene",
"papalexi_eccite_screen_gene",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_ground_truth_tapseq_gene"))
paper <- factor(x = sample_size_df$dataset,
levels = c("frangieh_co_culture_gene",
"frangieh_control_gene",
"frangieh_ifn_gamma_gene",
"papalexi_eccite_screen_gene",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_tapseq_gene"),
labels = c(rep("Frangieh", 3), "Papalexi", rep("Schraivogel", 3)))
sample_size_df$paper <- paper
sample_size_df$dataset_rename <- stringr::str_to_title(gsub(pattern = "_", replacement = " ", x = sample_size_df$dataset)) |> factor()
sample_size_df_nt <- sample_size_df |>
filter(grna_group == "non-targeting")
sample_size_df_t <- sample_size_df |>
filter(grna_group != "non-targeting")
ntc_effective_samp_size <- sample_size_df_nt |>
group_by(response_id, dataset) |>
summarize(effective_samp_size = sum(n_nonzero_cells))
sample_size_df_nt <- left_join(x = sample_size_df_nt,
y = ntc_effective_samp_size,
by = c("response_id", "dataset")) |>
mutate(n_nonzero_treatment = n_nonzero_cells,
n_nonzero_control = effective_samp_size - n_nonzero_cells) |>
rename("undercover_grna" = "grna_id")
head(sample_size_df_nt)
head(sample_size_df_nt)
head(res)
res <- rbind(sceptre_big_B,
sceptre_res_cov,
nb_reg_res) |>
replace_slash_w_underscore() |>
update_dataset_names()
rm(list = ls())
library(katlabutils)
library(tidyverse)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
# 1. sceptre big b
sceptre_big_B <- readRDS(paste0(result_dir, "undercover_grna_analysis/sceptre_debug_bigB_frang_papa.rds")) |>
mutate(method = "sceptre (exact)") |>
replace_slash_w_underscore()
# 2. sceptre (with covariates)
sceptre_res_cov <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_size_1_sceptre.rds")) |>
select(-clock_time, -max_ram) |>
mutate(method = "sceptre (sn)")
# 3. sceptre (without covariates)
sceptre_res_no_cov <- readRDS(paste0(result_dir,
"undercover_grna_analysis/sceptre_debug_no_cov.rds")) |>
mutate(method = "sceptre (without cov)")
# 4. NB regression, seurat de
nb_reg_res <- readRDS(paste0(result_dir, "undercover_grna_analysis/undercover_result_grp_size_1.rds")) |>
dplyr::select(-clock_time, -max_ram) |>
dplyr::filter(method %in% c("nb_regression", "seurat_de"))
res <- rbind(sceptre_big_B,
sceptre_res_cov,
nb_reg_res) |>
replace_slash_w_underscore() |>
update_dataset_names()
head(res)
head(sample_size_df_nt)
sample_size_df_nt
library(katlabutils)
library(tidyverse)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
sample_size_df <- readRDS(paste0(result_dir,
"dataset_sample_sizes/n_nonzero_cells_per_grna.rds")) |>
dplyr::mutate(dataset = dataset_concat,
dataset_concat = NULL, paper = NULL, modality = NULL) |>
dplyr::rename(grna_group = target, response_id = feature_id) |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens() |>
filter(dataset %in% c("frangieh_co_culture_gene",
"frangieh_control_gene",
"frangieh_ifn_gamma_gene",
"papalexi_eccite_screen_gene",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_ground_truth_tapseq_gene"))
paper <- factor(x = sample_size_df$dataset,
levels = c("frangieh_co_culture_gene",
"frangieh_control_gene",
"frangieh_ifn_gamma_gene",
"papalexi_eccite_screen_gene",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_tapseq_gene"),
labels = c(rep("Frangieh", 3), "Papalexi", rep("Schraivogel", 3)))
sample_size_df$paper <- paper
sample_size_df$dataset_rename <- stringr::str_to_title(gsub(pattern = "_", replacement = " ", x = sample_size_df$dataset)) |> factor()
sample_size_df_nt <- sample_size_df |>
filter(grna_group == "non-targeting")
sample_size_df_t <- sample_size_df |>
filter(grna_group != "non-targeting")
ntc_effective_samp_size <- sample_size_df_nt |>
group_by(response_id, dataset) |>
summarize(effective_samp_size = sum(n_nonzero_cells))
sample_size_df_nt <- left_join(x = sample_size_df_nt,
y = ntc_effective_samp_size,
by = c("response_id", "dataset")) |>
mutate(n_nonzero_treatment = n_nonzero_cells,
n_nonzero_control = effective_samp_size - n_nonzero_cells) |>
rename("undercover_grna" = "grna_id")
head(sample_size_df_nt)
head(res)
head(res)
sample_size_df_nt
res <- left_join(res, sample_size_df_nt |>
select(response_id,
undercover_grna,
dataset,
n_nonzero_treatment,
n_nonzero_control,
effective_samp_size),
by = c("response_id", "dataset"))
head(res)
nrow(res)
sample_size_df_nt_select <- sample_size_df_nt |> select(response_id,
undercover_grna,
dataset,
n_nonzero_treatment,
n_nonzero_control,
effective_samp_size)
rm(sample_size_df_nt, sceptre_big_B, sceptre_res_no_cov, nb_reg_res)
head(res)
head(sample_size_df_nt_select)
res <- left_join(res, sample_size_df_nt_select,
by = c("response_id", "dataset", "undercover_grna"))
head(res)
head(res, 100)
head(res, 100) |> print(n = 50)
res |>
filter(dataset == "frangieh_ifn_gamma_gene",) |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
res |> head()
res$n_nonzero_treatment |> head()
res$n_nonzero_control |> heaD()
res$n_nonzero_control |> head()
res |>
filter(dataset == "frangieh_ifn_gamma_gene",
n_nonzero_treatment >= 10,
n_nonzero_control >= 100) |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
res |>
filter(dataset == "papalexi_eccite_screen_gene",
method != "seurat_de",
n_nonzero_treatment >= 10,
n_nonzero_control >= 100) |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_reverse() +
scale_y_reverse() +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
res |>
filter(dataset == "papalexi_eccite_screen_gene",
n_nonzero_treatment >= 10,
n_nonzero_control >= 100) |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
res <- rbind(sceptre_big_B,
nb_reg_res) |>
replace_slash_w_underscore() |>
update_dataset_names()
rm(list = ls())
library(katlabutils)
library(tidyverse)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
# 1. sceptre big b
sceptre_big_B <- readRDS(paste0(result_dir, "undercover_grna_analysis/sceptre_debug_bigB_frang_papa.rds")) |>
mutate(method = "sceptre (exact)") |>
replace_slash_w_underscore()
# 2. sceptre (with covariates)
sceptre_res_cov <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_size_1_sceptre.rds")) |>
select(-clock_time, -max_ram) |>
mutate(method = "sceptre (sn)")
# 3. sceptre (without covariates)
sceptre_res_no_cov <- readRDS(paste0(result_dir,
"undercover_grna_analysis/sceptre_debug_no_cov.rds")) |>
mutate(method = "sceptre (without cov)")
# 4. NB regression, seurat de
nb_reg_res <- readRDS(paste0(result_dir, "undercover_grna_analysis/undercover_result_grp_size_1.rds")) |>
dplyr::select(-clock_time, -max_ram) |>
dplyr::filter(method %in% c("nb_regression", "seurat_de"))
res <- rbind(sceptre_big_B,
nb_reg_res) |>
replace_slash_w_underscore() |>
update_dataset_names()
# append sample size info to res
res <- left_join(res, sample_size_df_nt_select,
by = c("response_id", "dataset", "undercover_grna"))
sample_size_df_nt_select <- sample_size_df_nt |> select(response_id,
undercover_grna,
dataset,
n_nonzero_treatment,
n_nonzero_control,
effective_samp_size)
library(katlabutils)
library(tidyverse)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
sample_size_df <- readRDS(paste0(result_dir,
"dataset_sample_sizes/n_nonzero_cells_per_grna.rds")) |>
dplyr::mutate(dataset = dataset_concat,
dataset_concat = NULL, paper = NULL, modality = NULL) |>
dplyr::rename(grna_group = target, response_id = feature_id) |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens() |>
filter(dataset %in% c("frangieh_co_culture_gene",
"frangieh_control_gene",
"frangieh_ifn_gamma_gene",
"papalexi_eccite_screen_gene",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_ground_truth_tapseq_gene"))
paper <- factor(x = sample_size_df$dataset,
levels = c("frangieh_co_culture_gene",
"frangieh_control_gene",
"frangieh_ifn_gamma_gene",
"papalexi_eccite_screen_gene",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_tapseq_gene"),
labels = c(rep("Frangieh", 3), "Papalexi", rep("Schraivogel", 3)))
sample_size_df$paper <- paper
sample_size_df$dataset_rename <- stringr::str_to_title(gsub(pattern = "_", replacement = " ", x = sample_size_df$dataset)) |> factor()
sample_size_df_nt <- sample_size_df |>
filter(grna_group == "non-targeting")
sample_size_df_t <- sample_size_df |>
filter(grna_group != "non-targeting")
ntc_effective_samp_size <- sample_size_df_nt |>
group_by(response_id, dataset) |>
summarize(effective_samp_size = sum(n_nonzero_cells))
sample_size_df_nt <- left_join(x = sample_size_df_nt,
y = ntc_effective_samp_size,
by = c("response_id", "dataset")) |>
mutate(n_nonzero_treatment = n_nonzero_cells,
n_nonzero_control = effective_samp_size - n_nonzero_cells) |>
rename("undercover_grna" = "grna_id")
res <- left_join(res, sample_size_df_nt_select,
by = c("response_id", "dataset", "undercover_grna"))
sample_size_df_nt_select <- sample_size_df_nt |> select(response_id,
undercover_grna,
dataset,
n_nonzero_treatment,
n_nonzero_control,
effective_samp_size)
rm(sample_size_df_nt, sceptre_big_B, sceptre_res_no_cov, nb_reg_res)
res <- left_join(res, sample_size_df_nt_select,
by = c("response_id", "dataset", "undercover_grna"))
res |>
filter(dataset == "frangieh_ifn_gamma_gene",
n_nonzero_treatment >= 10,
n_nonzero_control >= 100) |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
res |>
filter(dataset == "papalexi_eccite_screen_gene",
method != "seurat_de",
n_nonzero_treatment >= 10,
n_nonzero_control >= 100) |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_reverse() +
scale_y_reverse() +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
res |>
filter(dataset == "papalexi_eccite_screen_gene",
n_nonzero_treatment >= 10,
n_nonzero_control >= 100) |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_reverse() +
scale_y_reverse() +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
res |>
filter(dataset == "papalexi_eccite_screen_gene",
n_nonzero_treatment >= 10,
n_nonzero_control >= 100) |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
library(katlabutils)
library(tidyverse)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
sample_size_df <- readRDS(paste0(result_dir,
"dataset_sample_sizes/n_nonzero_cells_per_grna.rds")) |>
dplyr::mutate(dataset = dataset_concat,
dataset_concat = NULL, paper = NULL, modality = NULL) |>
dplyr::rename(grna_group = target, response_id = feature_id) |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens() |>
filter(dataset %in% c("frangieh_co_culture_gene",
"frangieh_control_gene",
"frangieh_ifn_gamma_gene",
"papalexi_eccite_screen_gene",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_ground_truth_tapseq_gene"))
paper <- factor(x = sample_size_df$dataset,
levels = c("frangieh_co_culture_gene",
"frangieh_control_gene",
"frangieh_ifn_gamma_gene",
"papalexi_eccite_screen_gene",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_tapseq_gene"),
labels = c(rep("Frangieh", 3), "Papalexi", rep("Schraivogel", 3)))
sample_size_df$paper <- paper
sample_size_df$dataset_rename <- stringr::str_to_title(gsub(pattern = "_", replacement = " ", x = sample_size_df$dataset)) |> factor()
sample_size_df_nt <- sample_size_df |>
filter(grna_group == "non-targeting")
sample_size_df_t <- sample_size_df |>
filter(grna_group != "non-targeting")
ntc_effective_samp_size <- sample_size_df_nt |>
group_by(response_id, dataset) |>
summarize(effective_samp_size = sum(n_nonzero_cells))
sample_size_df_nt <- left_join(x = sample_size_df_nt,
y = ntc_effective_samp_size,
by = c("response_id", "dataset")) |>
mutate(n_nonzero_treatment = n_nonzero_cells,
n_nonzero_control = effective_samp_size - n_nonzero_cells) |>
rename("undercover_grna" = "grna_id")
head(sample_size_df_nt)
rm(list = ls())
library(katlabutils)
library(tidyverse)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
# 1. sceptre big b
sceptre_big_B <- readRDS(paste0(result_dir, "undercover_grna_analysis/sceptre_debug_bigB_frang_papa.rds")) |>
mutate(method = "sceptre (exact)") |>
replace_slash_w_underscore()
# 2. sceptre (with covariates)
sceptre_res_cov <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_size_1_sceptre.rds")) |>
select(-clock_time, -max_ram) |>
mutate(method = "sceptre (sn)")
# 3. sceptre (without covariates)
sceptre_res_no_cov <- readRDS(paste0(result_dir,
"undercover_grna_analysis/sceptre_debug_no_cov.rds")) |>
mutate(method = "sceptre (without cov)")
# 4. NB regression, seurat de
nb_reg_res <- readRDS(paste0(result_dir, "undercover_grna_analysis/undercover_result_grp_size_1.rds")) |>
dplyr::select(-clock_time, -max_ram) |>
dplyr::filter(method %in% c("nb_regression", "seurat_de"))
res <- rbind(sceptre_big_B,
nb_reg_res) |>
replace_slash_w_underscore() |>
update_dataset_names()
sample_size_df_nt_select <- sample_size_df_nt |> select(response_id,
undercover_grna,
dataset,
n_nonzero_treatment,
n_nonzero_control,
effective_samp_size)
library(katlabutils)
library(tidyverse)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
sample_size_df <- readRDS(paste0(result_dir,
"dataset_sample_sizes/n_nonzero_cells_per_grna.rds")) |>
dplyr::mutate(dataset = dataset_concat,
dataset_concat = NULL, paper = NULL, modality = NULL) |>
dplyr::rename(grna_group = target, response_id = feature_id) |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens() |>
filter(dataset %in% c("frangieh_co_culture_gene",
"frangieh_control_gene",
"frangieh_ifn_gamma_gene",
"papalexi_eccite_screen_gene",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_ground_truth_tapseq_gene"))
