p_no_qc <- res |>
filter(dataset == "frangieh_ifn_gamma_gene") |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
ggtitle("No QC")
p <- cowplot::plot_grid(p_no_qc, p_qc, ncol = 1, labels = c("a", "b"))
p
p_qc <- res |>
filter(dataset == "frangieh_ifn_gamma_gene",
n_nonzero_treatment >= 7,
n_nonzero_control >= 30) |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
ggtitle("QC")
p_no_qc <- res |>
filter(dataset == "frangieh_ifn_gamma_gene") |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
ggtitle("No QC")
p <- cowplot::plot_grid(p_no_qc, p_qc, ncol = 1, labels = c("a", "b"))
p
p_qc <- res |>
filter(dataset == "papalexi_eccite_screen_gene",
n_nonzero_treatment >= 7,
n_nonzero_control >= 30) |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
ggtitle("QC")
p_no_qc <- res |>
filter(dataset == "papalexi_eccite_screen_gene") |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
ggtitle("No QC")
p <- cowplot::plot_grid(p_no_qc, p_qc, ncol = 1, labels = c("a", "b"))
p
p
res |>
filter(dataset %in% c("frangieh_co_culture_gene",
"papalexi_eccite_screen_gene")) |>
group_by(dataset) |>
summarize(frac_removed =  1 - mean(n_nonzero_treatment >= 7 & n_nonzero_control >= 30))
x <- res |>
select(response_id,
p_value,
undercover_grna,
dataset,
method,
n_nonzero_treatment,
n_nonzero_control) |>
filter(method %in% c("sceptre (exact)", "sceptre (sn)"),
dataset == "papalexi_eccite_screen_gene")
comparison_df <- left_join(x |>
filter(method == "sceptre (exact)") |>
rename("p_value_exact" = "p_value"),
x |>
filter(method == "sceptre (sn)") |>
rename("p_value_sn" = "p_value") |>
select(p_value_sn, response_id, undercover_grna),
by = c("response_id", "undercover_grna")) |>
mutate(pass_qc = (n_nonzero_treatment >= 10) & (n_nonzero_control >= 100))
comparison_df |>
ggplot(mapping = aes(x = p_value_exact, y = p_value_sn, col = pass_qc)) +
geom_point(alpha = 0.7, cex = 0.7) +
geom_abline(slope = 1, intercept = 0, col = "darkred") +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
xlab("p-value (exact)") +
ylab("p-value (SN)") +
labs(col = "p (exact) < p (SN)") +
theme(legend.position = "bottom") +
geom_vline(xintercept = 2e-2, col = "darkred") +
geom_hline(yintercept = 3e-2, col = "darkred")
x <- res |>
select(response_id,
p_value,
undercover_grna,
dataset,
method,
n_nonzero_treatment,
n_nonzero_control) |>
filter(method %in% c("sceptre (exact)", "sceptre (sn)"),
dataset == "papalexi_eccite_screen_gene")
comparison_df <- left_join(x |>
filter(method == "sceptre (exact)") |>
rename("p_value_exact" = "p_value"),
x |>
filter(method == "sceptre (sn)") |>
rename("p_value_sn" = "p_value") |>
select(p_value_sn, response_id, undercover_grna),
by = c("response_id", "undercover_grna")) |>
mutate(pass_qc = (n_nonzero_treatment >= 10) & (n_nonzero_control >= 100))
comparison_df |>
ggplot(mapping = aes(x = p_value_exact, y = p_value_sn, col = pass_qc)) +
geom_point(alpha = 0.7, cex = 0.7) +
geom_abline(slope = 1, intercept = 0, col = "darkred") +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
xlab("p-value (exact)") +
ylab("p-value (SN)") +
labs(col = "Retained after QC") +
theme(legend.position = "bottom") +
geom_vline(xintercept = 2e-2, col = "darkred") +
geom_hline(yintercept = 3e-2, col = "darkred")
res$method |> unique()
x <- res |>
select(response_id,
p_value,
undercover_grna,
dataset,
method,
n_nonzero_treatment,
n_nonzero_control) |>
filter(method %in% c("sceptre (exact)", "nb_regression"),
dataset == "papalexi_eccite_screen_gene")
comparison_df <- left_join(x |>
filter(method == "sceptre (exact)") |>
rename("p_value_exact" = "p_value"),
x |>
filter(method == "nb_regression") |>
rename("p_value_nb" = "p_value") |>
select(p_value_nb, response_id, undercover_grna),
by = c("response_id", "undercover_grna")) |>
mutate(pass_qc = (n_nonzero_treatment >= 10) & (n_nonzero_control >= 100))
head(x)
head(comparison_df)
comparison_df |>
ggplot(mapping = aes(x = p_value_exact, y = p_value_nb, col = pass_qc)) +
geom_point(alpha = 0.7, cex = 0.7) +
geom_abline(slope = 1, intercept = 0, col = "darkred") +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
xlab("p-value (exact)") +
ylab("p-value (SN)") +
labs(col = "Retained after QC") +
theme(legend.position = "bottom") +
geom_vline(xintercept = 2e-2, col = "darkred") +
geom_hline(yintercept = 3e-2, col = "darkred")
comparison_df |>
ggplot(mapping = aes(x = p_value_exact, y = p_value_nb, col = pass_qc)) +
geom_point(alpha = 0.7, cex = 0.7) +
geom_abline(slope = 1, intercept = 0, col = "darkred") +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
xlab("p-value (exact)") +
ylab("p-value (SN)") +
labs(col = "Retained after QC") +
theme(legend.position = "bottom")
x <- res |>
select(response_id,
p_value,
undercover_grna,
dataset,
method,
n_nonzero_treatment,
n_nonzero_control) |>
filter(method %in% c("sceptre (exact)", "nb_regression"),
dataset == "papalexi_eccite_screen_gene")
comparison_df <- left_join(x |>
filter(method == "sceptre (exact)") |>
rename("p_value_exact" = "p_value"),
x |>
filter(method == "nb_regression") |>
rename("p_value_nb" = "p_value") |>
select(p_value_nb, response_id, undercover_grna),
by = c("response_id", "undercover_grna")) |>
mutate(pass_qc = (n_nonzero_treatment >= 10) & (n_nonzero_control >= 100))
comparison_df |>
ggplot(mapping = aes(x = p_value_exact, y = p_value_nb, col = pass_qc)) +
geom_point(alpha = 0.7, cex = 0.7) +
geom_abline(slope = 1, intercept = 0, col = "darkred") +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
xlab("p-value (NB regression)") +
ylab("p-value (SN)") +
labs(col = "Retained after QC") +
theme(legend.position = "bottom")
comparison_df |>
ggplot(mapping = aes(x = p_value_exact, y = p_value_nb, col = pass_qc)) +
geom_point(alpha = 0.7, cex = 0.7) +
geom_abline(slope = 1, intercept = 0, col = "darkred") +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
xlab("p-value (NB regression)") +
ylab("p-value (SN)") +
labs(col = "Retained after QC") +
theme(legend.position = "bottom")
comparison_df |>
ggplot(mapping = aes(x = p_value_exact, y = p_value_nb, col = pass_qc)) +
geom_point(alpha = 0.7, cex = 0.7) +
geom_abline(slope = 1, intercept = 0, col = "darkred") +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
xlab("p-value (SCEPTRE exact)") +
ylab("p-value (NB regression)") +
labs(col = "Retained after QC") +
theme(legend.position = "bottom")
head(x)
head(comparison_df)
comparison_df |>
filter(p_value_nb == 1)
comparison_df |>
filter(p_value_nb > 0.99)
comparison_df |>
filter(p_value_nb > 0.99)
comparison_df |>
filter(p_value_nb > 0.99) |>
summarize(m = mean(n_nonzero_treatment == 0))
comparison_df |>
filter(p_value_nb > 0.99) |>
print(n = 50)
comparison_df |>
filter(p_value_nb > 0.99) |>
print(n = 500)
comparison_df |>
filter(p_value_nb > 0.99,
p_value_exact < 0.5)
comparison_df |>
filter(p_value_nb > 0.99,
p_value_exact < 0.8)
comparison_df |>
filter(p_value_nb > 0.99,
p_value_exact < 0.8) |>
summarize(m = mean(n_nonzero_treatment))
comparison_df |>
filter(p_value_nb > 0.99,
p_value_exact < 0.8) |>
summarize(m = mean(n_nonzero_treatment == 0))
comparison_df |>
filter(p_value_nb > 0.99,
p_value_exact < 0.5) |>
summarize(m = mean(n_nonzero_treatment == 0))
comparison_df |>
filter(p_value_nb > 0.99,
p_value_exact < 0.5) |>
summarize(m = mean(n_nonzero_treatment == 0))
comparison_df |>
ggplot(mapping = aes(x = p_value_exact, y = p_value_nb, col = pass_qc)) +
geom_point(alpha = 0.7, cex = 0.7) +
geom_abline(slope = 1, intercept = 0, col = "darkred") +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
xlab("p-value (SCEPTRE exact)") +
ylab("p-value (NB regression)") +
labs(col = "Retained after QC") +
geom_vline(xintercept = 0.8) +
theme(legend.position = "bottom")
comparison_df |>
ggplot(mapping = aes(x = p_value_exact, y = p_value_nb, col = pass_qc)) +
geom_point(alpha = 0.7, cex = 0.7) +
geom_abline(slope = 1, intercept = 0, col = "darkred") +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
xlab("p-value (SCEPTRE exact)") +
ylab("p-value (NB regression)") +
labs(col = "Retained after QC") +
geom_vline(xintercept = 0.5) +
theme(legend.position = "bottom")
comparison_df |>
filter(p_value_nb > 0.99,
p_value_exact < 0.5) |>
summarize(m = mean(n_nonzero_treatment == 0))
comparison_df |>
filter(p_value_nb > 0.99,
p_value_exact < 0.5) |>
summarize(m = mean(n_nonzero_treatment == 0)) * 100
comparison_df |>
filter(p_value_nb > 0.99,
p_value_exact < 0.5) |>
summarize(m = mean(n_nonzero_treatment == 0)) |>
pull() * 100
10000 * 5000
10000 * 5000
9
10000 * 10000
1/1e+08
10000 * 50
10000 * 5
0.1/10000
library(katlabutils)
library(tidyverse)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
# 1. sceptre big b
sceptre_big_B <- readRDS(paste0(result_dir, "undercover_grna_analysis/sceptre_debug_bigB_frang_papa.rds")) |>
mutate(method = "sceptre (exact)") |>
replace_slash_w_underscore()
# 2. sceptre (with covariates)
sceptre_res_cov <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_size_1_sceptre.rds")) |>
select(-clock_time, -max_ram) |>
mutate(method = "sceptre (sn)")
# 3. NB regression, seurat de
nb_reg_res <- readRDS(paste0(result_dir, "undercover_grna_analysis/undercover_result_grp_size_1.rds")) |>
dplyr::select(-clock_time, -max_ram) |>
dplyr::filter(method %in% c("nb_regression", "seurat_de"))
res <- rbind(sceptre_big_B,
nb_reg_res,
sceptre_res_cov) |>
replace_slash_w_underscore() |>
update_dataset_names()
sample_size_df_nt_select <- sample_size_df_nt |> select(response_id,
undercover_grna,
dataset,
n_nonzero_treatment,
n_nonzero_control,
effective_samp_size)
library(katlabutils)
library(tidyverse)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
sample_size_df <- readRDS(paste0(result_dir,
"dataset_sample_sizes/n_nonzero_cells_per_grna.rds")) |>
dplyr::mutate(dataset = dataset_concat,
dataset_concat = NULL, paper = NULL, modality = NULL) |>
dplyr::rename(grna_group = target, response_id = feature_id) |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens() |>
filter(dataset %in% c("frangieh_co_culture_gene",
"frangieh_control_gene",
"frangieh_ifn_gamma_gene",
"papalexi_eccite_screen_gene",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_ground_truth_tapseq_gene"))
paper <- factor(x = sample_size_df$dataset,
levels = c("frangieh_co_culture_gene",
"frangieh_control_gene",
"frangieh_ifn_gamma_gene",
"papalexi_eccite_screen_gene",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_tapseq_gene"),
labels = c(rep("Frangieh", 3), "Papalexi", rep("Schraivogel", 3)))
sample_size_df$paper <- paper
sample_size_df$dataset_rename <- stringr::str_to_title(gsub(pattern = "_", replacement = " ", x = sample_size_df$dataset)) |> factor()
sample_size_df_nt <- sample_size_df |>
filter(grna_group == "non-targeting")
sample_size_df_t <- sample_size_df |>
filter(grna_group != "non-targeting")
ntc_effective_samp_size <- sample_size_df_nt |>
group_by(response_id, dataset) |>
summarize(effective_samp_size = sum(n_nonzero_cells))
sample_size_df_nt <- left_join(x = sample_size_df_nt,
y = ntc_effective_samp_size,
by = c("response_id", "dataset")) |>
mutate(n_nonzero_treatment = n_nonzero_cells,
n_nonzero_control = effective_samp_size - n_nonzero_cells) |>
rename("undercover_grna" = "grna_id")
library(katlabutils)
library(tidyverse)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
# 1. sceptre big b
sceptre_big_B <- readRDS(paste0(result_dir, "undercover_grna_analysis/sceptre_debug_bigB_frang_papa.rds")) |>
mutate(method = "sceptre (exact)") |>
replace_slash_w_underscore()
# 2. sceptre (with covariates)
sceptre_res_cov <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_size_1_sceptre.rds")) |>
select(-clock_time, -max_ram) |>
mutate(method = "sceptre (sn)")
# 3. NB regression, seurat de
nb_reg_res <- readRDS(paste0(result_dir, "undercover_grna_analysis/undercover_result_grp_size_1.rds")) |>
dplyr::select(-clock_time, -max_ram) |>
dplyr::filter(method %in% c("nb_regression", "seurat_de"))
res <- rbind(sceptre_big_B,
nb_reg_res,
sceptre_res_cov) |>
replace_slash_w_underscore() |>
update_dataset_names()
sample_size_df_nt_select <- sample_size_df_nt |> select(response_id,
undercover_grna,
dataset,
n_nonzero_treatment,
n_nonzero_control,
effective_samp_size)
rm(sample_size_df_nt, nb_reg_res)
# append sample size info to res
res <- left_join(res, sample_size_df_nt_select,
by = c("response_id", "dataset", "undercover_grna"))
head(res)
res$method |> heaD()
res$method |> head()
res$method |> unique
res$method |> unique()
res$dataset |> unique()
res <- res |>
combine_schraivogel_enhancer_screens()
head(res)
res$dataset |> unique()
head(res)
res |>
filter(dataset == "schraivogel_enhancer_screen")
res |>
filter(dataset == "schraivogel_enhancer_screen") |>
filter(n_nonzero_treatment >= 7,
n_nonzero_control >= 30) |>
ggplot(aes(y = p_value,
col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.8) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank()) +
ggtitle("QC")
head(res)
res |>
filter(dataset == "schraivogel_enhancer_screen")
x <- res |>
filter(dataset == "schraivogel_enhancer_screen")
head(x)
nrow(x)
x |> filter(n_nonzero_treatment >= 7,
n_nonzero_control >= 30)
res
res res <- rbind(sceptre_big_B,
res <- rbind(sceptre_big_B,
nb_reg_res,
sceptre_res_cov) |>
replace_slash_w_underscore() |>
update_dataset_names()
