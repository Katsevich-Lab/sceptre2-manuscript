plot_mw_debug_row(mw_debug_papa[11,])
plot_mw_debug_row(mw_debug_papa[12,])
plot_mw_debug_row(mw_debug_papa[13,])
plot_mw_debug_row(mw_debug_papa[14,])
plot_mw_debug_row(mw_debug_papa[15,])
plot_mw_debug_row(mw_debug_papa[16,])
plot_mw_debug_row(mw_debug_papa[17,])
plot_mw_debug_row(mw_debug_papa[18,])
plot_mw_debug_row(mw_debug_papa[19,])
plot_mw_debug_row(mw_debug_papa[20,])
plot_mw_debug_row(mw_debug_papa[21,])
plot_mw_debug_row(mw_debug_papa[22,])
plot_mw_debug_row(mw_debug_papa[23,])
plot_mw_debug_row(mw_debug_papa[24,])
plot_mw_debug_row(mw_debug_papa[25,])
plot_mw_debug_row(mw_debug_papa[26,])
plot_mw_debug_row(mw_debug_papa[27,])
plot_mw_debug_row(mw_debug_papa[29,])
plot_mw_debug_row(mw_debug_papa[30,])
plot_mw_debug_row(mw_debug_papa[31,])
plot_mw_debug_row(mw_debug_papa[32,])
plot_mw_debug_row(mw_debug_papa[33,])
plot_mw_debug_row(mw_debug_papa[34,])
plot_mw_debug_row(mw_debug_papa[35,])
plot_mw_debug_row(mw_debug_papa[36,])
plot_mw_debug_row(mw_debug_papa[37,])
plot_mw_debug_row(mw_debug_papa[38,])
plot_mw_debug_row(mw_debug_papa[39,])
plot_mw_debug_row(mw_debug_papa[41,])
plot_mw_debug_row(mw_debug_papa[40,])
plot_mw_debug_row(mw_debug_papa[42,])
plot_mw_debug_row(mw_debug_papa[43,])
plot_mw_debug_row(mw_debug_papa[44,])
plot_mw_debug_row(mw_debug_papa[45,])
nrow(mw_debug_papa)
wilcox.test
wilcox.test
stats:::wilcox.test
stats:::wilcox.test.default
x <- rnorm(100)
y <- rnorm(100, mean = 1)
x
y
x <- rnorm(100, mean = 0)
y <- rnorm(100, mean = 1)
correct <- NULL
alternative <- "two.sided"
head(x)
head(y)
hist(x)
hist(y)
alternative <- match.arg(alternative)
alternative
mu
x <- rnorm(100, mean = 0)
y <- rnorm(100, mean = 1)
mu <- 0
correct <- NULL
alternative <- "two.sided"
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
head(r)
length(r)
x
y
is.finite(digits.rank)
n.x <- as.double(length(x))
n.y <- as.double(length(y))
n.x
n.y
is.finit
is.finite
is.finite(10)
stats:::wilcox.test.default
digits.rank = Inf
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r)
r
if (is.finite(digits.rank)
)
is.finite(digits.rank)
digits.rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
is.null(exact)
exact <- NULL
is.null(exact)
exact <- (n.x < 50) && (n.y < 50)
exact
seq_along(x)
x
length(x)
length(y)
length(r)
r[seq_along(x)]
sum(r[seq_along(x)])
sum(r[seq_along(x)]) - n.x * (n.x + 1)/2
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
STATISTIC
TIES <- (length(r) != length(unique(r)))
TIES
CORRECTION <- 0
CORRECTION
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r)
r
length(r)
head(x)
head(y)
r <- c(x - mu, y)
head(r)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r)
r
n.x <- as.double(length(x))
n.y <- as.double(length(y))
n.x
n.y
is.null(exact)
exact
c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
sum(r[seq_along(x)])
n.x * (n.x + 1)/2
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
STATISTIC
TIES <- (length(r) != length(unique(r)))
TEIS
TIES
exact && !TIES
METHOD <- sub("test", "exact test", METHOD, fixed = TRUE)
METHOD
exact
!TIES
exact && !TIES
NTIES <- table(r)
NTIES
n.x * n.y/2
x <- rpois(100, mean = 0.5)
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 2)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 2)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
head(x)
head(y)
table(y)
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
head(r)
length(r)
n.x
n.y
# n.x and n.y: the sample size of the x's and y's, respectively
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
TIES <- (length(r) != length(unique(r)))
TIES
# we almost always will have ties
NTIES <- table(r)
head(NTIES)
length(r)
r
z <- STATISTIC - n.x * n.y/2
z
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
SIGMA
CORRECTION <- switch(alternative, two.sided = sign(z) *
0.5, greater = 0.5, less = -0.5)
CORRECTION
alternative
CORRECTION <- sign(z) * 0.5
CORRECTION
CORRECTION
z
z <- (z - CORRECTION)/SIGMA
z
z
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 1)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r
mu
wilcox.test
?wilcox.test
r
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r)
r
table(rank)
rable(r)
table(r)
table(x)
table(y)
r
n.x <- as.double(length(x))
n.y <- as.double(length(y))
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
STATISTIC
NTIES <- table(r)
NTIES
sum(NTIES^3 - NTIES)
NTIES <- 0
sum(NTIES^3 - NTIES)
NTIES <- table(r)
NTIES
z <- STATISTIC - n.x * n.y/2
z
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
SIGMA
CORRECTION <- sign(z) * 0.5
CORRECTION
sign(z)
z <- (z - CORRECTION)/SIGMA
z
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 0,5)
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 0.5)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
# we almost always will have ties
NTIES <- table(r)
z <- STATISTIC - n.x * n.y/2
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
CORRECTION <- sign(z) * 0.5
z <- (z - CORRECTION)/SIGMA
z
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 0.5)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
# we almost always will have ties
NTIES <- table(r)
z <- STATISTIC - n.x * n.y/2
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
CORRECTION <- sign(z) * 0.5
z <- (z - CORRECTION)/SIGMA
z
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 0.5)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
# we almost always will have ties
NTIES <- table(r)
z <- STATISTIC - n.x * n.y/2
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
CORRECTION <- sign(z) * 0.5
z <- (z - CORRECTION)/SIGMA
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 0.5)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
# we almost always will have ties
NTIES <- table(r)
z <- STATISTIC - n.x * n.y/2
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
CORRECTION <- sign(z) * 0.5
z <- (z - CORRECTION)/SIGMA
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 0.5)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
# we almost always will have ties
NTIES <- table(r)
z <- STATISTIC - n.x * n.y/2
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
CORRECTION <- sign(z) * 0.5
z <- (z - CORRECTION)/SIGMA
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 0.5)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
# we almost always will have ties
NTIES <- table(r)
z <- STATISTIC - n.x * n.y/2
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
CORRECTION <- sign(z) * 0.5
z <- (z - CORRECTION)/SIGMA
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 0.5)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
# we almost always will have ties
NTIES <- table(r)
z <- STATISTIC - n.x * n.y/2
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
CORRECTION <- sign(z) * 0.5
z <- (z - CORRECTION)/SIGMA
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 0.5)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
# we almost always will have ties
NTIES <- table(r)
z <- STATISTIC - n.x * n.y/2
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
CORRECTION <- sign(z) * 0.5
z <- (z - CORRECTION)/SIGMA
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 0.5)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
# we almost always will have ties
NTIES <- table(r)
z <- STATISTIC - n.x * n.y/2
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
CORRECTION <- sign(z) * 0.5
z <- (z - CORRECTION)/SIGMA
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
x <- rpois(100, lambda = 0.5)
y <- rpois(100, lambda = 0.5)
mu <- 0
correct <- NULL
alternative <- "two.sided"
digits.rank = Inf
exact <- NULL
CORRECTION <- 0
METHOD <- "Wilcoxon rank sum test"
r <- c(x - mu, y)
r <- rank(if (is.finite(digits.rank))
signif(r, digits.rank)
else r) # compute rank
n.x <- as.double(length(x))
n.y <- as.double(length(y))
STATISTIC <- c(W = sum(r[seq_along(x)]) - n.x * (n.x + 1)/2)
# we almost always will have ties
NTIES <- table(r)
z <- STATISTIC - n.x * n.y/2
SIGMA <- sqrt((n.x * n.y/12) * ((n.x + n.y + 1) -  sum(NTIES^3 - NTIES)/((n.x + n.y) * (n.x + n.y - 1))))
CORRECTION <- sign(z) * 0.5
z <- (z - CORRECTION)/SIGMA
PVAL <- switch(alternative, less = pnorm(z), greater = pnorm(z, lower.tail = FALSE),
two.sided = 2 * min(pnorm(z), pnorm(z, lower.tail = FALSE)))
PVAL
