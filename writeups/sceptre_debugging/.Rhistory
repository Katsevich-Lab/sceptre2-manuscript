knitr::opts_chunk$set(echo = TRUE)
# load packages
devtools::load_all("~/research_code/sceptre2/")
devtools::load_all("~/research_code/lowmoi/")
library(mgcv)
library(tidyverse)
reverselog_trans <- function(base = exp(1)) {
trans <- function(x) -log(x, base)
inv <- function(x) base^(-x)
scales::trans_new(paste0("reverselog-", format(base)), trans, inv,
scales::log_breaks(base = base),
domain = c(1e-100, Inf))
}
# load results
sceptre_debug <- readRDS("/Users/timbarry/research_offsite/projects/sceptre2/results/undercover_grna_analysis/sceptre_debug.rds")
# define the categories
ks_stat_categories <- list(good = c(0, 1e-2),
adequate = c(1e-2, 5e-2),
subpar = c(5e-2, 0.1),
poor = c(0.1, 1))
# make some modifications to results
sceptre_debug <- sceptre_debug |>
mutate(p_gap = abs(p_value - p_value_emp),
p_rat = p_value_emp/p_value,
ks_fit = cut(x = ks_stat,
breaks = unique(unlist(ks_stat_categories)),
labels = names(ks_stat_categories))) |>
filter(dataset != "papalexi/eccite_screen/protein")
plot(cowplot_lists$good)
plot(cowplot_lists$good)
ggplot(data = sceptre_debug,
mapping = aes(x = n_treatment_cells_with_expression + 1,
y = ks_stat)) +
geom_point(cex = 0.5, alpha = 0.5) +
scale_x_log10() +
scale_y_log10() +
facet_wrap(.~dataset) +
theme_bw() +
xlab("N treatment cells with expression + 1") +
ylab("KS statistic")
knitr::opts_chunk$set(echo = TRUE)
# load packages
devtools::load_all("~/research_code/sceptre2/")
devtools::load_all("~/research_code/lowmoi/")
library(mgcv)
library(tidyverse)
reverselog_trans <- function(base = exp(1)) {
trans <- function(x) -log(x, base)
inv <- function(x) base^(-x)
scales::trans_new(paste0("reverselog-", format(base)), trans, inv,
scales::log_breaks(base = base),
domain = c(1e-100, Inf))
}
# load results
sceptre_debug <- readRDS("/Users/timbarry/research_offsite/projects/sceptre2/results/undercover_grna_analysis/sceptre_debug.rds")
# define the categories
ks_stat_categories <- list(good = c(0, 1e-2),
adequate = c(1e-2, 5e-2),
subpar = c(5e-2, 0.1),
poor = c(0.1, 1))
# make some modifications to results
sceptre_debug <- sceptre_debug |>
mutate(p_gap = abs(p_value - p_value_emp),
p_rat = p_value_emp/p_value,
ks_fit = cut(x = ks_stat,
breaks = unique(unlist(ks_stat_categories)),
labels = names(ks_stat_categories))) |>
filter(dataset != "papalexi/eccite_screen/protein")
ggplot(data = sceptre_debug,
mapping = aes(x = n_control_cells_with_expression + 1,
y = ks_stat)) +
geom_point(cex = 0.5, alpha = 0.5) +
scale_x_log10() +
scale_y_log10() +
facet_wrap(.~dataset) +
theme_bw() +
xlab("N control cells with expression + 1") +
ylab("KS statistic")
# Fitting GAMs to each; two questions: (i) fraction deviance explained?
# (ii) what sample size do we need (for both treated and untreated) to have a "good" fit?
gam_out <- sceptre_debug |>
select(dataset,
ks_stat,
n_treatment_cells_with_expression,
n_control_cells_with_expression) |>
mutate(lg_ks_stat = log(ks_stat),
lg_n_treatment = log(n_treatment_cells_with_expression + 1),
lg_n_control = log(n_control_cells_with_expression + 1)) |>
group_by(dataset) |>
group_map(.f = function(tbl, key) {
fit_n_treatment <- gam(formula = lg_ks_stat ~ s(lg_n_treatment), data = tbl)
fit_n_control <- gam(formula = lg_ks_stat ~ s(lg_n_control), data = tbl)
fit_both <- gam(formula = lg_ks_stat ~ s(lg_n_treatment) + s(lg_n_control), data = tbl)
dev_explained_n_treatment <- summary(fit_n_treatment)$dev.expl
dev_explained_n_control <- summary(fit_n_control)$dev.expl
dev_explained_both <- summary(fit_both)$dev.expl
list(dataset = as.character(key$dataset),
dev_explained_n_treatment = dev_explained_n_treatment,
dev_explained_n_control = dev_explained_n_control,
dev_explained_both = dev_explained_both)
})
knitr::opts_chunk$set(echo = TRUE)
# load packages
devtools::load_all("~/research_code/sceptre2/")
devtools::load_all("~/research_code/lowmoi/")
library(mgcv)
library(tidyverse)
reverselog_trans <- function(base = exp(1)) {
trans <- function(x) -log(x, base)
inv <- function(x) base^(-x)
scales::trans_new(paste0("reverselog-", format(base)), trans, inv,
scales::log_breaks(base = base),
domain = c(1e-100, Inf))
}
# load results
sceptre_debug <- readRDS("/Users/timbarry/research_offsite/projects/sceptre2/results/undercover_grna_analysis/sceptre_debug.rds")
# define the categories
ks_stat_categories <- list(good = c(0, 1e-2),
adequate = c(1e-2, 5e-2),
subpar = c(5e-2, 0.1),
poor = c(0.1, 1))
# make some modifications to results
sceptre_debug <- sceptre_debug |>
mutate(p_gap = abs(p_value - p_value_emp),
p_rat = p_value_emp/p_value,
ks_fit = cut(x = ks_stat,
breaks = unique(unlist(ks_stat_categories)),
labels = names(ks_stat_categories))) |>
filter(dataset != "papalexi/eccite_screen/protein")
dev_explained <- data.frame(
dataset = sapply(gam_out, function(elem) elem[["dataset"]]),
dev_explained_n_treatment = sapply(gam_out, function(elem) elem[["dev_explained_n_treatment"]]),
dev_explained_n_control = sapply(gam_out, function(elem) elem[["dev_explained_n_control"]]),
dev_explained_both = sapply(gam_out, function(elem) elem[["dev_explained_both"]])) |>
mutate_at(c("dev_explained_n_treatment",
"dev_explained_n_control",
"dev_explained_both"), ~round(., 3))
dev_explained |> knitr::kable()
