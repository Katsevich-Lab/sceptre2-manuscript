dplyr::rename(grna_group = target, response_id = feature_id)
# Combine the results of the Schraivogel datasets
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
sample_size_df <-
sample_size_df |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens()
fisher_exact_res <- fisher_exact_res |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens()
pc_res <- pc_res |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens() |>
update_dataset_names()
fisher_exact_res <- update_dataset_names(undercover_res = fisher_exact_res, TRUE)
p <- ggplot(data = fisher_exact_res,
mapping = aes(y = p_value)) +
stat_qq_points(ymin = 1e-10, size = 0.8) +
facet_wrap(~dataset_rename_w_pairs, scales = "free", ncol = 3, labeller = label_wrap_gen(35)) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
p
p <- ggplot(data = fisher_exact_res,
mapping = aes(y = p_value)) +
stat_qq_points(ymin = 1e-10, size = 0.8) +
facet_wrap(~dataset_rename_w_pairs, scales = "free", ncol = 3, labeller = label_wrap_gen(35)) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_reverse() +
scale_y_reverse() +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
p
n_bonf_reject <- compute_n_bonf_rejected(pc_res)
p <- make_n_rejected_pairs_plot(n_rejected_df = n_bonf_reject,
y_max = NULL,
scales = "free",
log_trans = FALSE)
p
fisher_pc_res |>
select(dataset, min_effective_sample_size) |>
distinct() |>
knitr::kable()
fisher_pc_res |>
select(dataset, min_effective_sample_size) |>
rename("Min effective sample size to reject"  = "min_effective_sample_size")
# load packages
library(tidyverse)
library(katlabutils)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
# load the auxilliary functions
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
# load results
# 1. Fisher exact test negative control results
# 2. Fisher exact test positive control results
# 3. effective sample size data frame (number of cells with nonzero expression per gRNA)
# 1.
fisher_exact_res <- readRDS(paste0(result_dir, "undercover_grna_analysis/fisher_exact_1.rds"))
# 2.
pc_res <- readRDS(paste0(result_dir, "positive_control_analysis/pc_results.rds"))
# 3.
sample_size_df <- readRDS(paste0(result_dir, "dataset_sample_sizes/n_nonzero_cells_per_grna.rds")) |>
dplyr::mutate(dataset = dataset_concat,
dataset_concat = NULL, paper = NULL, modality = NULL) |>
dplyr::rename(grna_group = target, response_id = feature_id)
# Combine the results of the Schraivogel datasets
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
sample_size_df <-
sample_size_df |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens()
fisher_exact_res <- fisher_exact_res |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens()
pc_res <- pc_res |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens() |>
update_dataset_names()
fisher_exact_res <- update_dataset_names(undercover_res = fisher_exact_res, TRUE)
p <- ggplot(data = fisher_exact_res,
mapping = aes(y = p_value)) +
stat_qq_points(ymin = 1e-10, size = 0.8) +
facet_wrap(~dataset_rename_w_pairs, scales = "free", ncol = 3, labeller = label_wrap_gen(35)) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
p
p <- ggplot(data = fisher_exact_res,
mapping = aes(y = p_value)) +
stat_qq_points(ymin = 1e-10, size = 0.8) +
facet_wrap(~dataset_rename_w_pairs, scales = "free", ncol = 3, labeller = label_wrap_gen(35)) +
geom_abline(col = "darkred") +
stat_qq_band() +
theme_bw() +
scale_x_reverse() +
scale_y_reverse() +
labs(x = "Expected quantile", y = "Observed quantile") +
theme(legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
p
n_bonf_reject <- compute_n_bonf_rejected(pc_res)
p <- make_n_rejected_pairs_plot(n_rejected_df = n_bonf_reject,
y_max = NULL,
scales = "free",
log_trans = FALSE)
p
# compute the real and effective sample size for each positive control pair
pc_res_pairs <- pc_res |>
dplyr::select(grna_group, response_id, dataset) |>
dplyr::distinct()
pc_res_pairs_plus_nt <- rbind(pc_res_pairs,
data.frame(grna_group = "non-targeting",
response_id = pc_res_pairs$response_id,
dataset = pc_res_pairs$dataset))
sample_size_df_sub <- dplyr::left_join(pc_res_pairs_plus_nt, sample_size_df,
by = c("response_id", "grna_group", "dataset"))
samp_sizes <- apply(X = pc_res_pairs, MARGIN = 1, FUN = function(r) {
grna_group <- as.character(r[["grna_group"]])
response_id <- as.character(r[["response_id"]])
dataset <- as.character(r[["dataset"]])
# print(paste(grna_group, response_id, dataset))
treatment_cell_sizes <- sample_size_df_sub |>
dplyr::filter(response_id == !!response_id,
grna_group == !!grna_group,
dataset == !!dataset) |>
summarize(s_n_nonzero = sum(n_nonzero_cells),
s_n_cells = sum(n_cells))
control_cell_sizes <- sample_size_df_sub |>
dplyr::filter(response_id == !!response_id,
grna_group == "non-targeting",
dataset == !!dataset) |>
summarize(s_n_nonzero = sum(n_nonzero_cells),
s_n_cells = sum(n_cells))
c(trt_n_nonzero = treatment_cell_sizes$s_n_nonzero,
trt_n_cells = treatment_cell_sizes$s_n_cells,
cntrl_n_nonzero = control_cell_sizes$s_n_nonzero,
cntrl_n_cells = control_cell_sizes$s_n_cells)
}) |> t()
alpha <- 0.05
samp_sizes_2 <- cbind(pc_res_pairs, as.data.frame(samp_sizes)) |>
dplyr::mutate(effective_sample_size = trt_n_nonzero + cntrl_n_nonzero)
pc_res_with_samp_sizes <- dplyr::left_join(pc_res, samp_sizes_2,
by = c("grna_group", "response_id", "dataset")) |>
dplyr::group_by(dataset, method) |>
dplyr::mutate(reject = (p_value <= alpha/dplyr::n())) |>
dplyr::ungroup() |>
dplyr::mutate(lt = (p_value < 5e-4))
# smallest effective sample size such that we reject
fisher_pc_res <- pc_res_with_samp_sizes |>
dplyr::filter(method == "fisher_exact") |>
dplyr::group_by(dataset) |>
mutate(min_effective_sample_size = min(effective_sample_size[lt], na.rm = TRUE))
p <- ggplot(data = fisher_pc_res |> dplyr::filter(),
mapping = aes(y = p_value, x = effective_sample_size, col = lt)) +
geom_point(size = 0.8) +
facet_wrap(dataset_rename_w_pairs ~ .,
scales = "free_x",
labeller = label_wrap_gen(35)) + theme_bw() +
scale_color_manual(values = c("darkred", "darkblue")) +
guides(color=guide_legend(title="p < 5e-4")) +
geom_vline(mapping = aes(xintercept = min_effective_sample_size)) +
xlab("Effective sample size (N cells with nonzero expression)")
p
fisher_pc_res |>
select(dataset, min_effective_sample_size) |>
rename("Min effective sample size to reject" = "min_effective_sample_size")
distinct() |>
knitr::kable()
fisher_pc_res |>
select(dataset, min_effective_sample_size) |>
# rename("Min effective sample size to reject" = "min_effective_sample_size")
distinct() |>
knitr::kable()
fisher_pc_res |>
select(dataset, min_effective_sample_size) |>
rename("Min effective sample size to reject" = "min_effective_sample_size")
fisher_pc_res |>
select(dataset, min_effective_sample_size) |>
distinct() |>
rename("Min effective sample size to reject" = "min_effective_sample_size")
fisher_pc_res |>
select(dataset, min_effective_sample_size) |>
distinct() |>
rename("Min effective sample size to reject" = "min_effective_sample_size",
"Dataset" = "dataset") |>
knitr::kable()
fisher_pc_res
sample_size_df |> head()
sample_size_df |>
dplyr::filter(grna_group = "non-targeting")
sample_size_df |>
dplyr::filter(grna_group == "non-targeting")
sample_size_df |>
dplyr::filter(grna_group == "non-targeting") |>
dplyr::select(response_id, n_nonzero_cells, dataset)
sample_size_df |>
dplyr::filter(grna_group == "non-targeting") |>
dplyr::select(response_id, n_nonzero_cells, dataset) |>
dplyr::group_by(response_id, dataset) |>
dplyr::summarize(s = sum(n_nonzero_cells))
x <- sample_size_df |>
dplyr::filter(grna_group == "non-targeting") |>
dplyr::select(response_id, n_nonzero_cells, dataset) |>
dplyr::group_by(response_id, dataset) |>
dplyr::summarize(s = sum(n_nonzero_cells))
head(x)
nrow(x)
mean(x$s >= 300)
hist(x$s)
x$s |> head()
mean(x$s)
mean(x$s >= 300)
mean(x$s >= 100) # only 66% have an effective sample size of greater than 300!
mean(x$s >= 50) # only 66% have an effective sample size of greater than 300!
mean(x$s >= 10) # only 66% have an effective sample size of greater than 300!
mean(x$s >= 500) # only 66% have an effective sample size of greater than 300!
mean(x$s >= 300) # only 66% have an effective sample size of greater than 300!
mean(x$s >= 250) # only 66% have an effective sample size of greater than 300!
head(sample_size_df)
sample_size_df |>
filter(grna_group == "non-targeting")
sample_size_df |>
filter(grna_group == "non-targeting") |>
head()
head(sample_size_df |>
filter(grna_group == "non-targeting") |>
head())
pc_res_with_samp_sizes$dataset |> unique()
# smallest effective sample size such that we reject
fisher_pc_res <- pc_res_with_samp_sizes |>
dplyr::filter(method == "fisher_exact",
dataset != "schraivogel_ground_truth_perturbseq_gene") |>
dplyr::group_by(dataset) |>
mutate(min_effective_sample_size = min(effective_sample_size[lt], na.rm = TRUE))
p <- ggplot(data = fisher_pc_res |> dplyr::filter(),
mapping = aes(y = p_value, x = effective_sample_size, col = lt)) +
geom_point(size = 0.8) +
facet_wrap(dataset_rename_w_pairs ~ .,
scales = "free_x",
labeller = label_wrap_gen(35)) + theme_bw() +
scale_color_manual(values = c("darkred", "darkblue")) +
guides(color=guide_legend(title="p < 5e-4")) +
geom_vline(mapping = aes(xintercept = min_effective_sample_size)) +
xlab("Effective sample size (N cells with nonzero expression)")
p
# smallest effective sample size such that we reject
fisher_pc_res <- pc_res_with_samp_sizes |>
dplyr::filter(method == "fisher_exact",
dataset != "schraivogel_ground_truth_perturbseq_gene") |>
dplyr::group_by(dataset) |>
mutate(min_effective_sample_size = min(effective_sample_size[lt], na.rm = TRUE))
p <- ggplot(data = fisher_pc_res |> dplyr::filter(),
mapping = aes(y = p_value, x = effective_sample_size, col = lt)) +
geom_point(size = 0.8) +
facet_wrap(dataset_rename_w_pairs ~ .,
scales = "free_x",
labeller = label_wrap_gen(35)) + theme_bw() +
scale_color_manual(values = c("darkred", "darkblue")) +
guides(color=guide_legend(title="p < 5e-4")) +
geom_vline(mapping = aes(xintercept = min_effective_sample_size)) +
xlab("Effective sample size (N cells with nonzero expression)")
p
# smallest effective sample size such that we reject
fisher_pc_res <- pc_res_with_samp_sizes |>
dplyr::filter(method == "fisher_exact",
dataset != "schraivogel_ground_truth_perturbseq_gene") |>
dplyr::group_by(dataset) |>
mutate(min_effective_sample_size = min(effective_sample_size[lt], na.rm = TRUE))
p <- ggplot(data = fisher_pc_res |> dplyr::filter(),
mapping = aes(y = p_value, x = effective_sample_size, col = lt)) +
geom_point(size = 0.8) +
facet_wrap(dataset_rename_w_pairs ~ .,
scales = "free_x",
labeller = label_wrap_gen(35)) + theme_bw() +
scale_color_manual(values = c("darkred", "darkblue")) +
guides(color=guide_legend(title="p < 5e-4")) +
geom_vline(mapping = aes(xintercept = min_effective_sample_size)) +
xlab("Effective sample size (N cells with nonzero expression)")
p
head(sample_size_df)
sample_size_df |>
filter(grna_group == "non-targeting") |>
group_by(response_id, dataset)
sample_size_df |>
filter(grna_group == "non-targeting") |>
group_by(response_id, dataset) |>
summarize(s = sum(n_nonzero_cells))
ntc_effective_samp_size <- sample_size_df |>
filter(grna_group == "non-targeting") |>
group_by(response_id, dataset) |>
summarize(effective_samp_size = sum(n_nonzero_cells))
ntc_effective_samp_size <- sample_size_df |>
filter(grna_group == "non-targeting") |>
group_by(response_id, dataset) |>
summarize(effective_samp_size = sum(n_nonzero_cells))
head(ntc_effective_samp_size)
tail(ntc_effective_samp_size)
nrow(ntc_effective_samp_size)
head(ntc_effective_samp_size)
head(ntc_effective_samp_size, 40)
ntc_effective_samp_size |> dplyr::pull(effective_samp_size) |> hist()
ntc_effective_samp_size$effective_samp_size |> head()
mean(ntc_effective_samp_size$effective_samp_size >= 250)
effective_samp_size_thresh <- 250
effective_samp_size_thresh
head(ntc_effective_samp_size)
ggplot(data = ntc_effective_samp_size,
mapping = aes(x = effective_samp_size)) +
geom_histogram() + facet_null(dataset~.)
ggplot(data = ntc_effective_samp_size,
mapping = aes(x = effective_samp_size)) +
geom_histogram() + facet_grid(dataset~.)
ggplot(data = ntc_effective_samp_size,
mapping = aes(x = effective_samp_size)) +
geom_histogram() + facet_wrap(dataset~.)
ggplot(data = ntc_effective_samp_size,
mapping = aes(x = effective_samp_size)) +
geom_histogram() + facet_wrap(dataset~., scales ="free")
head(ntc_effective_samp_size)
head(sample_size_df)
ggplot(data = ntc_effective_samp_size,
mapping = aes(x = effective_samp_size)) +
geom_histogram() + facet_wrap(dataset~., scales ="free") +
theme_bw()
p <- ggplot(data = ntc_effective_samp_size,
mapping = aes(x = effective_samp_size)) +
geom_histogram() + facet_wrap(dataset~., scales ="free") +
theme_bw() +
xlab("Effective sample size") +
ylab("Count")
p
p <- ggplot(data = ntc_effective_samp_size,
mapping = aes(x = effective_samp_size)) +
geom_histogram() + facet_wrap(dataset~., scales ="free") +
theme_bw() +
xlab("Effective sample size") +
ylab("Count")
p
p <- ggplot(data = ntc_effective_samp_size,
mapping = aes(x = effective_samp_size)) +
geom_histogram() + facet_wrap(dataset~., scales ="free") +
theme_bw() +
xlab("Effective sample size") +
ylab("Count") +
scale_x_log10()
p
p <- ggplot(data = ntc_effective_samp_size,
mapping = aes(x = effective_samp_size)) +
geom_histogram() + facet_wrap(dataset~., scales ="free") +
theme_bw() +
xlab("Effective sample size") +
ylab("Count") +
scale_x_log10()
p
p <- ggplot(data = ntc_effective_samp_size,
mapping = aes(x = effective_samp_size)) +
geom_histogram() + facet_wrap(dataset~., scales ="free") +
theme_bw() +
xlab("Effective sample size") +
ylab("Count") +
scale_x_log10() + geom_vline(xintercept = effective_samp_size_thresh, col = "darkred")
p
result_dir
# 4.
undercover_res <- paste0(result_dir, "undercover_grna_analysis/undercover_result_grp_size_1.rds")
undercover_res
# 4.
undercover_res <- readRDS(paste0(result_dir, "undercover_grna_analysis/undercover_result_grp_size_1.rds"))
head(undercover_res)
undercover_res <- readRDS(paste0(result_dir, "undercover_grna_analysis/undercover_result_grp_size_1.rds")) |>
dplyr::select(-clock_time, -max_ram)
head(undercover_res)
tail(undercover_res)
nrow(undercover_res)
head(undercover_res)
head(sample_size_df)
head(sample_size_df)
head(ntc_effective_samp_size)
head(ntc_effective_samp_size)
undercover_res |> head()
undercover_res |> head()
head(ntc_effective_samp_size)
head(undercover_res)
head(ntc_effective_samp_size)
undercover_res_w_samp_size <- dplyr::left_join(undercover_res,
ntc_effective_samp_size, by = c("response_id", "dataset"))
head(undercover_res_w_samp_size)
rm(undercover_res)
make_trans_qq_plot()
make_trans_qq_plot
undercover_res_w_samp_size$dataset |> unique()
head(undercover_res_w_samp_size)
head(undercover_res)
# load packages
library(tidyverse)
library(katlabutils)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
# load the auxilliary functions
funct_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/writeups/undercover_results_eda/analyze_undercover_results_plot_functs.R")
source(funct_script)
# load results
# 1. Fisher exact test negative control results
# 2. Fisher exact test positive control results
# 3. effective sample size data frame (number of cells with nonzero expression per gRNA)
# 4. undercover result for group size = 1
# 1.
fisher_exact_res <- readRDS(paste0(result_dir, "undercover_grna_analysis/fisher_exact_1.rds"))
# 2.
pc_res <- readRDS(paste0(result_dir, "positive_control_analysis/pc_results.rds"))
# 3.
sample_size_df <- readRDS(paste0(result_dir, "dataset_sample_sizes/n_nonzero_cells_per_grna.rds")) |>
dplyr::mutate(dataset = dataset_concat,
dataset_concat = NULL, paper = NULL, modality = NULL) |>
dplyr::rename(grna_group = target, response_id = feature_id)
# 4.
undercover_res <- readRDS(paste0(result_dir, "undercover_grna_analysis/undercover_result_grp_size_1.rds")) |>
dplyr::select(-clock_time, -max_ram) |>
dplyr::filter(method %in% c("seurat_de", "liscovitch_method", "schraivogel_method", "weissman_method", "mimosca"))
# 5.
undercover_res_sceptre <- readRDS(paste0(result_dir, "undercover_grna_analysis/undercover_result_grp_size_1_sceptre.rds")) |>
dplyr::select(-clock_time, -max_ram)
undercover_res <- rbind(undercover_res, undercover_res_sceptre)
# Combine the results of the Schraivogel datasets
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "/",
replacement = "_",
fixed = TRUE,
x = dataset))
}
sample_size_df <-
sample_size_df |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens()
sample_size_df <-
sample_size_df |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens()
fisher_exact_res <- fisher_exact_res |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens()
head(fisher_exact_res)
# Combine the results of the Schraivogel datasets
replace_slash_w_underscore <- function(df) {
df |> dplyr::mutate(dataset = gsub(pattern = "[/|_]",
replacement = "_",
fixed = TRUE,
x = dataset))
}
fisher_exact_res <- fisher_exact_res |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens()
fisher_exact_res |>
combine_schraivogel_enhancer_screens()
combine_schraivogel_enhancer_screens
fisher_exact_res |>
combine_schraivogel_enhancer_screens()
fisher_exact_res |>
combine_schraivogel_enhancer_screens()
fisher_exact_res |>
combine_schraivogel_enhancer_screens()
combine_schraivogel_enhancer_screens
fisher_exact_res$dataset |> unique()
filter(fisher_exact_res, dataset == "schraivogel_enhancer_screen")
filter(fisher_exact_res, dataset == "schraivogel_enhancer_screen") |> head?()
filter(fisher_exact_res, dataset == "schraivogel_enhancer_screen") |> head()
filter(fisher_exact_res, dataset == "schraivogel_enhancer_screen") |> nrow()
head(undercover_res)
undercover_res <- undercover_res |>
dplyr::filter(dataset %in% c("frangieh_co_culture_gene",
"papalexi_eccite_screen_gene",
"papalexi_eccite_screen_protein",
"schraivogel_enhancer_screen",
"schraivogel_ground_truth_perturbseq_gene",
"schraivogel_ground_truth_tapseq_gene",
"simulated_experiment_1_gene",
"frangieh_control_gene",
"frangieh_ifn_gamma_gene")) |>
replace_slash_w_underscore() |>
combine_schraivogel_enhancer_screens() |>
update_dataset_names()
