response_grna_group_pairs <- my_samp |>
filter(dataset_concat == "frangieh/ifn_gamma/gene") |>
ungroup() |>
sample_n(size = 5) |>
select(eff_ss, response_id = feature_id, grna_group = target)
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = gene_odm@misc$sceptre_formula,
response_modality_name = "gene",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 250000,
max_b_per_batch = 100000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
# run SCEPTRE on these various pairs
gene_odm <- lowmoi::load_dataset_modality(data_fp = "frangieh/ifn_gamma/gene")
grna_odm <- lowmoi::load_dataset_modality(data_fp = "frangieh/ifn_gamma/grna_assignment")
mm_odm <- ondisc::multimodal_ondisc_matrix(covariate_ondisc_matrix_list = list(gene = gene_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
mm_odm
mm_odm@global_cell_covariates |> head()
mm_odm <- ondisc::multimodal_ondisc_matrix(covariate_ondisc_matrix_list = list(gene = gene_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
mm_odm
mm_odm@modalities$gene$
mm_odm@modalities$gene@misc$sceptre_formula
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
# run SCEPTRE on these various pairs
gene_odm <- lowmoi::load_dataset_modality(data_fp = "frangieh/ifn_gamma/gene")
grna_odm <- lowmoi::load_dataset_modality(data_fp = "frangieh/ifn_gamma/grna_assignment")
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
# run SCEPTRE on these various pairs
response_odm <- lowmoi::load_dataset_modality(data_fp = "frangieh/ifn_gamma/gene")
grna_odm <- lowmoi::load_dataset_modality(data_fp = "frangieh/ifn_gamma/grna_assignment")
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
response_grna_group_pairs <- my_samp |>
filter(dataset_concat == "frangieh/ifn_gamma/gene") |>
ungroup() |>
sample_n(size = 5) |>
select(eff_ss, response_id = feature_id, grna_group = target)
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = gene_odm@misc$sceptre_formula,
response_modality_name = "gene",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 250000,
max_b_per_batch = 100000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = gene_odm@misc$sceptre_formula,
response_modality_name = "response",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 250000,
max_b_per_batch = 100000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
res
dim(res)
class(res)
res[1:5,1:5]
colnames(res) |> tail()
res <- res |> reorder(response_id, grna_group)
response_id
res[,1]
res[1,]
9
10
res <- res |> relocate(response_id, grna_group)
res[1:5,1:4]
res[1,] |> class()
z_null <- res[1,] |> select(starts_with("z_")) |> as.numeric()
head(z_null)
hist(z_null)
response_grna_group_pairs
z_null <- res[2,] |> select(starts_with("z_")) |> as.numeric()
hist(z_null)
z_null <- res[3,] |> select(starts_with("z_")) |> as.numeric()
hist(z_null)
z_null <- res[4,] |> select(starts_with("z_")) |> as.numeric()
hist(z_null)
z_null <- res[5,] |> select(starts_with("z_")) |> as.numeric()
hist(z_null)
z_null <- z_null[z_null >= 2]
hist(z_null)
gc()
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = gene_odm@misc$sceptre_formula,
response_modality_name = "response",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 500000,
max_b_per_batch = 250000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
dim(res)
res <- res |> relocate(response_id, grna_group)
z_null <- res[1,] |> select(starts_with("z_")) |> as.numeric()
hist(z_null)
z_null <- res[2,] |> select(starts_with("z_")) |> as.numeric()
hist(z_null)
z_null <- res[3,] |> select(starts_with("z_")) |> as.numeric()
hist(z_null)
z_null <- res[4,] |> select(starts_with("z_")) |> as.numeric()
hist(z_null)
z_null <- res[5,] |> select(starts_with("z_")) |> as.numeric()
response_grna_group_pairs
z_null <- res[2,] |> select(starts_with("z_")) |> as.numeric()
hist(z_null)
z_null <- z_null[z_null >= 2]
head(z_null)
hist(z_null)
my_samp
head(response_grna_group_pairs)
dim(response_grna_group_pairs)
dim(Res)
dim(res)
res[1:5, 1:5]
response_grna_group_pairs
response_grna_group_pairs
res[1:5,1:5]
head(response_grna_group_pairs)
x <- dplyr::left_join(response_grna_group_pairs, res, by = c("response_id", "grna_group"))
response_grna_group_pairs |> dim()
my_samp
res |> select(response_id, grna_group)
res_order <- res |> select(response_id, grna_group)
response_grna_group_pairs
res_order <- left_join(res_order, response_grna_group_pairs, by = c("response_id", "grna_group"))
res_order
res |> select(response_id, grna_group)
res$eff_ss <- res_order$eff_ss
res <- res |> relocate(response_id, grna_group, eff_ss)
res[1:5,1:5]
dim(res)
dim(Res)
dim(res)
res[1:5,1:5]
res_order <- left_join(res |> select(response_id, grna_group),
response_grna_group_pairs,
by = c("response_id", "grna_group"))
res_order
res$eff_ss <- res_order$eff_ss
res <- res |> relocate(response_id, grna_group, eff_ss)
dim(res)
my_samp
my_datasets <- c("frangieh/ifn_gamma/gene",
"papalexi/eccite_screen/gene",
"schraivogel/enhancer_screen_chr11/gene")
eff_ss_df <- sample_size_df |>
dplyr::filter(dataset_concat %in% my_datasets) |>
group_by(feature_id, dataset_concat, target) |>
summarize(eff_ss = sum(n_nonzero_cells)) |>
ungroup()
# set different effective sample size levels; sample from each
eff_ss_levels <- c(7, 8, 9, 10, 12, 14, 16, 18, 20, 25, 30)
n_ex_per_eff_ss <- 10
set.seed(4)
my_samp <- eff_ss_df |>
filter(eff_ss %in% eff_ss_levels) |>
group_by(dataset_concat, eff_ss) |>
sample_n(size = n_ex_per_eff_ss)
my_samp
my_dataset <- my_datasets[1]
my_dataset
my_samp |>
filter(dataset_concat == !!my_dataset)
my_samp_sub <- my_samp |> filter(dataset_concat == !!my_dataset)
my_samp_sub
response_odm <- lowmoi::load_dataset_modality(data_fp = my_dataset)
grna_odm <- lowmoi::load_dataset_modality(data_fp = my_dataset)
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
mm_odm
my_dataset
response_odm <- lowmoi::load_dataset_modality(data_fp = my_dataset)
grna_odm <- lowmoi::load_dataset_modality(data_fp = my_dataset)
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
my_samp_sub
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = gene_odm@misc$sceptre_formula,
response_modality_name = "response",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 2000,
max_b_per_batch = 250000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
response_odm <- lowmoi::load_dataset_modality(data_fp = my_dataset)
grna_odm <- lowmoi::load_dataset_modality(data_fp = my_dataset)
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = gene_odm@misc$sceptre_formula,
response_modality_name = "response",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 2000,
max_b_per_batch = 250000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
grna_odm
grna_odm |> ondisc::get_feature_covariates() |> head()
my_dataset
library(tidyverse)
sceptre2_results_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
# load the sample size data frame
sample_size_df <- readRDS(paste0(sceptre2_results_dir, "dataset_sample_sizes/n_nonzero_cells_per_grna.rds"))
sample_size_df$dataset_concat |> unique()
my_datasets <- c("frangieh/ifn_gamma/gene",
"papalexi/eccite_screen/gene",
"schraivogel/enhancer_screen_chr11/gene")
eff_ss_df <- sample_size_df |>
dplyr::filter(dataset_concat %in% my_datasets) |>
group_by(feature_id, dataset_concat, target) |>
summarize(eff_ss = sum(n_nonzero_cells)) |>
ungroup()
# set different effective sample size levels; sample from each
eff_ss_levels <- c(7, 8, 9, 10, 12, 14, 16, 18, 20, 25, 30)
n_ex_per_eff_ss <- 10
set.seed(4)
my_samp <- eff_ss_df |>
filter(eff_ss %in% eff_ss_levels) |>
group_by(dataset_concat, eff_ss) |>
sample_n(size = n_ex_per_eff_ss)
my_dataset <- my_datasets[1]
my_samp_sub <- my_samp |> filter(dataset_concat == !!my_dataset)
response_odm <- lowmoi::load_dataset_modality(data_fp = my_dataset)
grna_odm <- lowmoi::load_dataset_modality(data_fp = my_dataset)
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
mm_odm@modalities$grna
my_dataset
response_odm <- load_dataset_modality(dataset_name)
response_odm <- lowmoi::load_dataset_modality(dataset_name)
grna_dataset_name <- lowmoi::get_grna_dataset_name(dataset_name, grna_modality)
response_odm <- lowmoi::load_dataset_modality(my_dataset)
grna_dataset_name <- lowmoi::get_grna_dataset_name(my_dataset, "assignment")
grna_odm <- lowmoi::load_dataset_modality(grna_dataset_name)
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = gene_odm@misc$sceptre_formula,
response_modality_name = "response",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 2000,
max_b_per_batch = 250000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
res
dim(Res)
dim(res)
head(my_samp)
response_grna_group_pairs <- my_samp |> filter(dataset_concat == !!my_dataset)
response_grna_group_pairs
response_odm <- lowmoi::load_dataset_modality(my_dataset)
grna_dataset_name <- lowmoi::get_grna_dataset_name(my_dataset, "assignment")
grna_odm <- lowmoi::load_dataset_modality(grna_dataset_name)
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = gene_odm@misc$sceptre_formula,
response_modality_name = "response",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 2000,
max_b_per_batch = 250000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
response_grna_group_pairs
my_samp <- eff_ss_df |>
filter(eff_ss %in% eff_ss_levels) |>
group_by(dataset_concat, eff_ss) |>
sample_n(size = n_ex_per_eff_ss) |>
rename(response_id = feature_id, grna_group = target)
my_samp
my_dataset <- my_datasets[1]
my_dataset
response_grna_group_pairs <- my_samp |> filter(dataset_concat == !!my_dataset)
response_odm <- lowmoi::load_dataset_modality(my_dataset)
grna_dataset_name <- lowmoi::get_grna_dataset_name(my_dataset, "assignment")
grna_odm <- lowmoi::load_dataset_modality(grna_dataset_name)
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
mm_odm
response_grna_group_pairs
gene_odm@misc$sceptre_formula
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = gene_odm@misc$sceptre_formula,
response_modality_name = "response",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 2000,
max_b_per_batch = 250000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
res |> dim()
res[1:5,1:5]
res_order <- left_join(res |> select(response_id, grna_group),
response_grna_group_pairs,
by = c("response_id", "grna_group"))
res$eff_ss <- res_order$eff_ss
res <- res |> relocate(response_id, grna_group, eff_ss)
res[1:5,1:5]
res[1,]
res[1,] |> select("z_null")
res[1,] |> select(starts_with("z_"))
res[1,] |> select(starts_with("z_")) |> hist()
res[1,] |> select(starts_with("z_")) |> as.numeric()
res[1,] |> select(starts_with("z_")) |> as.numeric() |> hist()
res[1:5,1:5]
res <- res |>
mutate(dataset = factor(my_dataset)) |>
relocate(response_id, grna_group, eff_ss, dataset)
res[1:5,1:5]
library(tidyverse)
sceptre2_results_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
# load the sample size data frame
sample_size_df <- readRDS(paste0(sceptre2_results_dir, "dataset_sample_sizes/n_nonzero_cells_per_grna.rds"))
sample_size_df$dataset_concat |> unique()
my_datasets <- c("frangieh/ifn_gamma/gene",
"papalexi/eccite_screen/gene",
"schraivogel/enhancer_screen_chr11/gene")
eff_ss_df <- sample_size_df |>
dplyr::filter(dataset_concat %in% my_datasets) |>
group_by(feature_id, dataset_concat, target) |>
summarize(eff_ss = sum(n_nonzero_cells)) |>
ungroup()
# set different effective sample size levels; sample from each
eff_ss_levels <- c(7, 8, 9, 10, 12, 14, 16, 18, 20, 25, 30)
n_ex_per_eff_ss <- 10
set.seed(4)
my_samp <- eff_ss_df |>
filter(eff_ss %in% eff_ss_levels) |>
group_by(dataset_concat, eff_ss) |>
sample_n(size = n_ex_per_eff_ss) |>
rename(response_id = feature_id, grna_group = target)
to_save <- lapply(X = my_datasets, FUN = function(my_dataset) {
response_grna_group_pairs <- my_samp |> filter(dataset_concat == !!my_dataset)
response_odm <- lowmoi::load_dataset_modality(my_dataset)
grna_dataset_name <- lowmoi::get_grna_dataset_name(my_dataset, "assignment")
grna_odm <- lowmoi::load_dataset_modality(grna_dataset_name)
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = gene_odm@misc$sceptre_formula,
response_modality_name = "response",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 2000,
max_b_per_batch = 250000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
res_order <- left_join(res |> select(response_id, grna_group),
response_grna_group_pairs,
by = c("response_id", "grna_group"))
res$eff_ss <- res_order$eff_ss
res <- res |>
mutate(dataset = factor(my_dataset)) |>
relocate(response_id, grna_group, eff_ss, dataset)
res
}) |> data.table::rbindlist()
library(tidyverse)
sceptre2_results_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
# load the sample size data frame
sample_size_df <- readRDS(paste0(sceptre2_results_dir, "dataset_sample_sizes/n_nonzero_cells_per_grna.rds"))
sample_size_df$dataset_concat |> unique()
my_datasets <- c("frangieh/ifn_gamma/gene",
"papalexi/eccite_screen/gene",
"schraivogel/enhancer_screen_chr11/gene")
eff_ss_df <- sample_size_df |>
dplyr::filter(dataset_concat %in% my_datasets) |>
group_by(feature_id, dataset_concat, target) |>
summarize(eff_ss = sum(n_nonzero_cells)) |>
ungroup()
# set different effective sample size levels; sample from each
eff_ss_levels <- c(7, 8, 9, 10, 12, 14, 16, 18, 20, 25, 30)
n_ex_per_eff_ss <- 10
set.seed(4)
my_samp <- eff_ss_df |>
filter(eff_ss %in% eff_ss_levels) |>
group_by(dataset_concat, eff_ss) |>
sample_n(size = n_ex_per_eff_ss) |>
rename(response_id = feature_id, grna_group = target)
rm(sample_size_df, eff_ss_df)
rm(sample_size_df, eff_ss_df); gc()
my_dataset <- my_datasets[1]
response_grna_group_pairs <- my_samp |> filter(dataset_concat == !!my_dataset)
response_odm <- lowmoi::load_dataset_modality(my_dataset)
grna_dataset_name <- lowmoi::get_grna_dataset_name(my_dataset, "assignment")
grna_odm <- lowmoi::load_dataset_modality(grna_dataset_name)
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = gene_odm@misc$sceptre_formula,
response_modality_name = "response",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 2000,
max_b_per_batch = 250000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
mm_odm
mm_odm
mm_odm
head(response_grna_group_pairs)
mm_odm
head(response_grna_group_pairs)
gene_odm@misc$sceptre_formula
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = response_odm@misc$sceptre_formula,
response_modality_name = "response",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 2000,
max_b_per_batch = 250000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
gc()
library(tidyverse)
sceptre2_results_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
# load the sample size data frame
sample_size_df <- readRDS(paste0(sceptre2_results_dir, "dataset_sample_sizes/n_nonzero_cells_per_grna.rds"))
sample_size_df$dataset_concat |> unique()
my_datasets <- c("frangieh/ifn_gamma/gene",
"papalexi/eccite_screen/gene",
"schraivogel/enhancer_screen_chr11/gene")
eff_ss_df <- sample_size_df |>
dplyr::filter(dataset_concat %in% my_datasets) |>
group_by(feature_id, dataset_concat, target) |>
summarize(eff_ss = sum(n_nonzero_cells)) |>
ungroup()
# set different effective sample size levels; sample from each
eff_ss_levels <- c(7, 8, 9, 10, 12, 14, 16, 18, 20, 25, 30)
n_ex_per_eff_ss <- 10
set.seed(4)
my_samp <- eff_ss_df |>
filter(eff_ss %in% eff_ss_levels) |>
group_by(dataset_concat, eff_ss) |>
sample_n(size = n_ex_per_eff_ss) |>
rename(response_id = feature_id, grna_group = target)
rm(sample_size_df, eff_ss_df); gc()
to_save <- lapply(X = my_datasets, FUN = function(my_dataset) {
response_grna_group_pairs <- my_samp |> filter(dataset_concat == !!my_dataset)
response_odm <- lowmoi::load_dataset_modality(my_dataset)
grna_dataset_name <- lowmoi::get_grna_dataset_name(my_dataset, "assignment")
grna_odm <- lowmoi::load_dataset_modality(grna_dataset_name)
mm_odm <- ondisc::multimodal_ondisc_matrix(list(response = response_odm, grna = grna_odm)) |>
lowmoi::process_multimodal_odm()
res <- sceptre2::run_sceptre_low_moi(mm_odm = mm_odm,
response_grna_group_pairs = response_grna_group_pairs,
form = response_odm@misc$sceptre_formula,
response_modality_name = "response",
grna_modality_name = "grna",
grna_group_column_name = "target",
B = 2000,
max_b_per_batch = 250000,
in_memory = TRUE,
statistic = "full",
return_dist = TRUE)
res_order <- left_join(res |> select(response_id, grna_group),
response_grna_group_pairs,
by = c("response_id", "grna_group"))
res$eff_ss <- res_order$eff_ss
res <- res |>
mutate(dataset = factor(my_dataset)) |>
relocate(response_id, grna_group, eff_ss, dataset)
res
}) |> data.table::rbindlist()
dim(to_save)
to_save[1:5,1:5]
to_save[1:20,1:5]
# extracting a given row
to_save[6,] |> select(starts_with("z_")) |> as.numeric()
# extracting a given row
to_save[6,] |> select(starts_with("z_")) |> as.numeric() |> hist()
# extracting a given row
z_null <- to_save[6,] |> select(starts_with("z_")) |> as.numeric()
hist(z_null)
sceptre2_results_dir
# save
saveRDS(object = to_save,file = paste0(sceptre2_results_dir, "resampling_distributions/sceptre_resampling_dists.rds"))
