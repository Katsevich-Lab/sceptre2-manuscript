.get_config_path
"LOCAL_SCEPTRE2_DATA_DIR"
.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
sceptre2_dir
# SCEPTRE 2 DIR
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# SCHRAIVOGEL DIR
schraivogel_dir <- .get_config_path("LOCAL_SCHRAIVOGEL_2020_DATA_DIR")
# PAPALEXI DIR
papalexi_dir <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
sceptre2_dir
schraivogel_dir
papalexi_dir
# load packages
library(ondisc)
papalexi_dir
# Load the datasets
# i. Papalexi gene
paste0(papalexi_dir, "processed/gene")
# Load the datasets
# i. Papalexi gene
paste0(papalexi_dir, "processed/gene/expression_matrix.odm")
paste0(papalexi_dir, "processed/gene/metadata.rds")
paste0(papalexi_dir, "processed/gene/metadata.rds") |> file.exists()
# Load the datasets
# i. Papalexi gene
paste0(papalexi_dir, "processed/gene/expression_matrix.odm") |> file.exists()
# Load the datasets
# i. Papalexi gene
read_odm(odm_fp = paste0(papalexi_dir, "processed/gene/expression_matrix.odm"),
metadata_fp = paste0(papalexi_dir, "processed/gene/metadata.rds"))
schraivogel_dir
papalexi_gene
# set directories
# SCEPTRE 2 DIR
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# SCHRAIVOGEL DIR
schraivogel_dir <- .get_config_path("LOCAL_SCHRAIVOGEL_2020_DATA_DIR")
# PAPALEXI DIR
papalexi_dir <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
# load packages
library(ondisc)
# set gene expression threshold
EXPRESSION_THRESH <- 0.005
# Load the datasets
# i. Papalexi gene
papalexi_gene <- read_odm(odm_fp = paste0(papalexi_dir, "processed/gene/expression_matrix.odm"),
metadata_fp = paste0(papalexi_dir, "processed/gene/metadata.rds"))
papalexi_gene
schraivogel_dir
# ii. Schraivogel TAP
schraivogel_tap <- read_odm(odm_fp = paste0(schraivogel_dir, "processed/ground_truth_tapseq/gene/expression_matrix.odm"),
metadata_fp = paste0(schraivogel_dir, "processed/ground_truth_tapseq/gene/metadata.rds"))
schraivogel_tap
# iii. Schraivogel Perturb
schraivogel_perturb <- read_odm(odm_fp = paste0(schraivogel_dir, "/processed/ground_truth_perturbseq/gene/expression_matrix.odm"),
metadata_fp = paste0(schraivogel_dir, "/processed/ground_truth_perturbseq/gene/metadata.rds"))
schraivogel_perturb
schraivogel_tap
papalexi_gene
# do feature selection on all datasets; keep those genes with expression >= 0.005.
get_highly_expressed_features(papalexi_gene, frac_expressed = 0.005)
# do feature selection on all datasets; keep those genes with expression >= 0.005.
filter_features <- function(odm) {
odm[get_highly_expressed_features(odm, frac_expressed = 0.005),]
}
papalexi_gene_filtered <- filter_features(papalexi_genes)
papalexi_gene_filtered <- filter_features(papalexi_gene)
papalexi_gene
papalexi_gene_filtered
papalexi_gene_filtered |> get_feature_covariates() |> dplyr::pull(n_umis)
papalexi_gene_filtered |> get_feature_covariates() |> colnames()
papalexi_gene_filtered |> get_feature_covariates() |> n_nonzero()
papalexi_gene_filtered |> get_feature_covariates() |> dplyr::pull(n_nonzero())
papalexi_gene_filtered |> get_feature_covariates() |> dplyr::pull(n_nonzero)
papalexi_gene_filtered |> get_feature_covariates() |> dplyr::pull(n_nonzero) |> min()
schraivogel_tap_filtered <- filter_features(schraivogel_tap)
schraivogel_tap_filtered
schraivogel_tap
schraivogel_perturb_filtered <- filter_features(schraivogel_perturb)
schraivogel_perturb_filtered
schraivogel_perturb
sceptre2_dir
papalexi_gene_filtered
paste0(sceptre2_dir, "data/papalexi/gene")
# save subsetted ODMs
save_odm(odm = papalexi_gene_filtered,
metadata_fp = paste0(sceptre2_dir, "data/papalexi/gene/filtered_metadata.rds"))
sceptre2_dir
schraivogel_tap_filtered
sceptre2_dir
paste0(sceptre2_dir, "data/papalexi/gene/")
save_odm(odm = schraivogel_tap_filtered,
metadata_fp = paste0(sceptre2_dir, "data/schraivogel/tap/filtered_metadata.rds"))
save_odm(odm = schraivogel_perturb_filtered,
metadata_fp = paste0(sceptre2_dir, "data/schraivogel/perturb/filtered_metadata.rds"))
.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
sceptre2_offsite <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
sceptre2_offsite
papalexi_gene = c(response_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
response_metadata_fp = paste0(sceptre2_offsite, "data/papalexi/gene/filtered_metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds"))
papalexi_offsite <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
schraivogel_offsite <- .get_config_path("LOCAL_SCHRAIVOGEL_2020_DATA_DIR")
sceptre2_offsite <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
c(response_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
response_metadata_fp = paste0(sceptre2_offsite, "data/papalexi/gene/filtered_metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds"))
sceptre2_offsite
sceptre2_offsite
papalexi_gene = c(response_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
response_metadata_fp = paste0(sceptre2_offsite, "data/papalexi/gene/filtered_metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds"))
schraivogel_tap = c(response_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gene/expression_matrix.odm"),
response_metadata_fp = paste0(sceptre2_offsite, "data/schraivogel/tap/filtered_metadata.rds"),
gRNA_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gRNA/raw_ungrouped.odm"),
gRNA_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gRNA/raw_ungrouped_metadata.rds"))
schraivogel_perturb = c(response_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_perturbseq/gene/expression_matrix.odm"),
response_metadata_fp = paste0(sceptre2_offsite, "data/schraivogel/perturb/filtered_metadata.rds"),
gRNA_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_perturbseq/gRNA/raw_ungrouped.odm"),
gRNA_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_perturbseq/gRNA/raw_ungrouped_metadata.rds"))
papalexi_gene
schraivogel_tap
schraivogel_perturb
papalexi_gene
read_odm(odm_fp = papalexi_gene[1], metadata_fp = papalexi_gene[2])
read_odm(odm_fp = schraivogel_tap[1], metadata_fp = schraivogel_tap[2])
# set directories
# SCEPTRE 2 DIR
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# SCHRAIVOGEL DIR
schraivogel_dir <- .get_config_path("LOCAL_SCHRAIVOGEL_2020_DATA_DIR")
# PAPALEXI DIR
papalexi_dir <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
# load packages
library(ondisc)
# set gene expression threshold
EXPRESSION_THRESH <- 0.005
# Load the datasets
# i. Papalexi gene
papalexi_gene <- read_odm(odm_fp = paste0(papalexi_dir, "processed/gene/expression_matrix.odm"),
metadata_fp = paste0(papalexi_dir, "processed/gene/metadata.rds"))
# ii. Schraivogel TAP
schraivogel_tap <- read_odm(odm_fp = paste0(schraivogel_dir, "processed/ground_truth_tapseq/gene/expression_matrix.odm"),
metadata_fp = paste0(schraivogel_dir, "processed/ground_truth_tapseq/gene/metadata.rds"))
# iii. Schraivogel Perturb
schraivogel_perturb <- read_odm(odm_fp = paste0(schraivogel_dir, "/processed/ground_truth_perturbseq/gene/expression_matrix.odm"),
metadata_fp = paste0(schraivogel_dir, "/processed/ground_truth_perturbseq/gene/metadata.rds"))
# do feature selection on all datasets; keep those genes with expression >= 0.005.
filter_features <- function(odm) {
odm[get_highly_expressed_features(odm, frac_expressed = 0.005),]
}
papalexi_gene
schraivogel_tap
schraivogel_perturb
.get_config_path("LOCAL_LISCOVITCH_2021_DATA_DIR")
liscovitch_dir <- .get_config_path("LOCAL_LISCOVITCH_2021_DATA_DIR")
liscovitch_dir
liscovitch_dir
liscovitch_atac
# iv. Liscovitch exp 1
liscovitch_atac <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/chip_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/metadata.rds"))
liscovitch_atac
dim(liscovitch_atac)
liscovitch_atac[[1,]]
liscovitch_atac[[2,]]
liscovitch_atac[[10,]]
liscovitch_atac[[,10]]
# iv. Liscovitch exp 1
liscovitch_atac <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/chip_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/metadata.rds"))
liscovitch_gRNA <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/chip_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/metadata.rds"))
# iv. Liscovitch exp 1
liscovitch_atac <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/chip_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/metadata.rds"))
liscovitch_gRNA <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/gRNA_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/metadata.rds"))
liscovitch_atac
liscovitch_gRNA
# QC metrics: (a) >= 100 gRNA reads, (b) >= 99% of reads assigned to one gRNA sequence, (c) >= 500 ATAC-seq fragments
exp_1_multimodal <- multimodal_ondisc_matrix(covariate_ondisc_matrix_list = list(atac = liscovitch_atac, gRNA = liscovitch_gRNA))
exp_1_multimodal
exp_1_multimodal
multimodal_odm
multimodal_odm <- exp_1_multimodal
multimodal_odm
n_gRNA_reads = 100; n_atac_frags = 500
p_reads_one_gRNA_seq <- 0.99
multimodal_odm
multimodal_odm |> get_cell_covariates()
multimodal_odm |> get_cell_covariates() |> head()
multimodal_odm |>
get_cell_covariates() |>
dplyr::filter(atac_n_fragments >= n_atac_frags)
multimodal_odm |>
get_cell_covariates() |>
dplyr::filter(atac_n_fragments >= n_atac_frags) |>
dplyr::filter(gRNA_n_umis >= 100)
get_modality(multimodal_odm, "gRNA")
gRNA_mod <- get_modality(multimodal_odm, "gRNA")
gRNA_mod
gRNA_mod[[1:nrow(gRNA_mod),]]
?apply
col <- gRNA_mod[[,"AACCTGCCCATTAGAATCTACTCT"]]
col <- as.numeric(gRNA_mod[[,"AACCTGCCCATTAGAATCTACTCT"]]_
col <- as.numeric(gRNA_mod[[,"AACCTGCCCATTAGAATCTACTCT"]])
col
length(col)
max(col)
max_col <- max(col)
max_entry <- max(col)
max(col)/sum(col)
p_reads_one_gRNA_seq
gRNA_mod[[1:nrow(gRNA_mod),]] |> apply(MARGIN = 2, FUN = function(col) {
max(col)/sum(col) > p_reads_one_gRNA_seq
})
gRNA_mod[[1:nrow(gRNA_mod),]] |> apply(MARGIN = 2, FUN = function(col) {
max(col)/sum(col) > p_reads_one_gRNA_seq
}) |> mean()
gRNA_mod[[1:nrow(gRNA_mod),]] |> apply(MARGIN = 2, FUN = function(col) max(col)/sum(col) > p_reads_one_gRNA_seq)
assignable <- gRNA_mod[[1:nrow(gRNA_mod),]] |> apply(MARGIN = 2, FUN = function(col) {
max(col)/sum(col) > p_reads_one_gRNA_seq
})
assignable
assignable
multimodal_odm
multimodal_odm <- multimodal_odm[,assignable]
multimodal_odm
multimodal_odm |>
get_cell_covariates() |>
dplyr::filter(atac_n_fragments >= n_atac_frags) |>
dplyr::filter(gRNA_n_umis >= 100)
multimodal_odm |>
get_cell_covariates() |>
dplyr::filter(atac_n_fragments >= n_atac_frags) |>
dplyr::filter(gRNA_n_umis >= 100) |> row.names()
high_quality <-  multimodal_odm |>
get_cell_covariates() |>
dplyr::filter(atac_n_fragments >= n_atac_frags) |>
dplyr::filter(gRNA_n_umis >= 100) |> row.names()
multimodal_odm[,high_quality]
gRNA_mod <- get_modality(multimodal_odm, "gRNA")
assignable <- gRNA_mod[[1:nrow(gRNA_mod),]] |> apply(MARGIN = 2, FUN = function(col) {
max(col)/sum(col) > p_reads_one_gRNA_seq
})
multimodal_odm <- multimodal_odm[,assignable]
high_quality <-  multimodal_odm |>
get_cell_covariates() |>
dplyr::filter(atac_n_fragments >= n_atac_frags) |>
dplyr::filter(gRNA_n_umis >= 100) |> row.names()
multimodal_odm[,high_quality]
# iv. Liscovitch exp 1 (QC metrics: (a) >= 100 gRNA reads, (b) >= 99% of reads assigned to one gRNA sequence, (c) >= 500 ATAC-seq fragments)
liscovitch_atac <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/chip_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/metadata.rds"))
liscovitch_gRNA <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/gRNA_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/metadata.rds"))
exp_1_multimodal <- multimodal_ondisc_matrix(covariate_ondisc_matrix_list = list(atac = liscovitch_atac, gRNA = liscovitch_gRNA))
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
# Liscovitch QC function
run_lisc_qc <- function(multimodal_odm, n_gRNA_reads = 100, n_atac_frags = 500, p_reads_one_gRNA_seq) {
gRNA_mod <- get_modality(multimodal_odm, "gRNA")
assignable <- gRNA_mod[[1:nrow(gRNA_mod),]] |> apply(MARGIN = 2, FUN = function(col) {
max(col)/sum(col) > p_reads_one_gRNA_seq
})
multimodal_odm <- multimodal_odm[,assignable]
high_quality <-  multimodal_odm |>
get_cell_covariates() |>
dplyr::filter(atac_n_fragments >= n_atac_frags) |>
dplyr::filter(gRNA_n_umis >= 100) |> row.names()
multimodal_odm[,high_quality]
}
# iv. Liscovitch exp 1 (QC metrics: (a) >= 100 gRNA reads, (b) >= 99% of reads assigned to one gRNA sequence, (c) >= 500 ATAC-seq fragments)
liscovitch_atac <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/chip_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/metadata.rds"))
liscovitch_gRNA <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/gRNA_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/metadata.rds"))
exp_1_multimodal <- multimodal_ondisc_matrix(covariate_ondisc_matrix_list = list(atac = liscovitch_atac, gRNA = liscovitch_gRNA))
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.90)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.0)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.990)
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.90)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
get_modality(exp_1_multimodal_qc, "ATAC")
get_modality(exp_1_multimodal_qc, "atac")
schraivogel_dir
# iv. Liscovitch exp 1 (QC metrics: (a) >= 100 gRNA reads, (b) >= 99% of reads assigned to one gRNA sequence, (c) >= 500 ATAC-seq fragments)
liscovitch_atac_1 <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/chip_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/metadata.rds"))
liscovitch_gRNA_1 <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/gRNA_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/metadata.rds"))
exp_1_multimodal <- multimodal_ondisc_matrix(covariate_ondisc_matrix_list = list(atac = liscovitch_atac_1, gRNA = liscovitch_gRNA_1))
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
liscovitch_atac_1
liscovitch_gRNA_1
exp_1_multimodal
exp_1_multimodal_qc
# v. Liscovitch exp 2 (QC metrics: >= 100 gRNA reads, (b) >= 90% of reads assigned to one gRNA sequence, (c) >= 500 ATAC-seq fragments)
liscovitch_atac_2 <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_2/chip_counts/chip_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_2/chip_counts/metadata.rds"))
liscovitch_gRNA_2 <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_2/gRNA_counts/gRNA_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_2/gRNA_counts/metadata.rds"))
exp_2_multimodal <- multimodal_ondisc_matrix(covariate_ondisc_matrix_list = list(atac = liscovitch_atac_2, gRNA = liscovitch_gRNA_2))
exp_2_multimodal_qc <- run_lisc_qc(exp_2_multimodal, p_reads_one_gRNA_seq = 0.90)
exp_2_multimodal_qc
get_modality(exp_1_multimodal_qc, "atac")
get_modality(exp_1_multimodal_qc, "atac")
get_modality(exp_1_multimodal_qc, "atac")
paste0(sceptre2_dir, "data/liscovitch/experiment_1/filtered_metadata.rds")
dir.exists("/Users/timbarry/research_offsite/projects/sceptre2/data/liscovitch/experiment_1/")
save_odm(odm = get_modality(exp_1_multimodal_qc, "atac"),
metadata_fp = paste0(sceptre2_dir, "data/liscovitch/experiment_1/filtered_metadata.rds"))
get_modality(exp_1_multimodal_qc, "gRNA")
save_odm(odm = get_modality(exp_1_multimodal_qc, "atac"),
metadata_fp = paste0(sceptre2_dir, "data/liscovitch/experiment_1/chip_count/filtered_metadata.rds"))
save_odm(odm = get_modality(exp_1_multimodal_qc, "gRNA"),
metadata_fp = paste0(sceptre2_dir, "data/liscovitch/experiment_1/gRNA/filtered_metadata.rds"))
# liscovitch exp 2, atac modality
save_odm(odm = get_modality(exp_2_multimodal_qc, "atac"),
metadata_fp = paste0(sceptre2_dir, "data/liscovitch/experiment_2/chip_count/filtered_metadata.rds"))
# liscovitch exp 2, gRNA modality
save_odm(odm = get_modality(exp_2_multimodal_qc, "gRNA"),
metadata_fp = paste0(sceptre2_dir, "data/liscovitch/experiment_2/gRNA/filtered_metadata.rds"))
