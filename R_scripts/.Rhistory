# add vertical line separating the dataset column from the rest
nt_table_g <- gtable_add_grob(nt_table_g,
grobs = segmentsGrob(
x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(1,"npc"),
gp = gpar(lwd = 4.0)),
t = 9, b = 1, l = 2, r = 2)
# add title to the table
title <- textGrob("Number of false positives",gp=gpar(fontsize=12))
padding <- unit(5,"mm")
nt_table_g <- gtable_add_rows(
nt_table_g,
heights = grobHeight(title) + padding,
pos = 0)
nt_table_g <- gtable_add_grob(
nt_table_g,
title,
1, 1, 1, ncol(nt_table_g))
# left-justify the first column
id <- which(grepl("core-fg", nt_table_g$layout$name ) & nt_table_g$layout$l == 1 )
for (i in id) {
nt_table_g$grobs[[i]]$x <- unit(0.05, "npc")
nt_table_g$grobs[[i]]$hjust <- 0
}
#################################################################
# Format power table
#################################################################
# create gtable for positive control table
pc_table_g <- tableGrob(n_true_rejections_tab, theme = table_theme, rows = NULL)
# add bold font for lowest numbers of false rejections
for (row_idx in seq(1, nrow(n_true_rejections_tab))) {
row <- as.integer(n_true_rejections_tab[row_idx, seq(2, 8L)])
row[is.na(row)] <- 0L
col_idxs <- which(row == max(row))
for (col_idx in col_idxs) {
pc_table_g$grobs[find_cell(pc_table_g, row_idx + 1L, col_idx + 1L, "core-fg")][[1]][["gp"]] <- gpar(fontface="bold")
}
}
# add line separating the PC pairs column from the rest
pc_table_g <- gtable_add_grob(pc_table_g,
grobs = segmentsGrob(
x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(1,"npc"),
gp = gpar(lwd = 4.0)),
t = 7, b = 1, l = 9, r = 9)
# add line separating the dataset column from the rest
pc_table_g <- gtable_add_grob(pc_table_g,
grobs = segmentsGrob(
x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(1,"npc"),
gp = gpar(lwd = 4.0)),
t = 7, b = 1, l = 2, r = 2)
# add title
title <- textGrob("Number of true positives",gp=gpar(fontsize=12))
padding <- unit(5,"mm")
pc_table_g <- gtable_add_rows(
pc_table_g,
heights = grobHeight(title) + padding,
pos = 0)
pc_table_g <- gtable_add_grob(
pc_table_g,
title,
1, 1, 1, ncol(pc_table_g))
# left justify the first column
id <- which(grepl("core-fg", pc_table_g$layout$name ) & pc_table_g$layout$l == 1 )
for (i in id) {
pc_table_g$grobs[[i]]$x <- unit(0.05, "npc")
pc_table_g$grobs[[i]]$hjust <- 0
}
#################################################################
# Create QQ plots
#################################################################
# read colors from my_cols
my_values <- my_cols[names(my_cols) %in% c("Seurat-Wilcox", "Seurat-NB", "SCEPTRE")]
# Frangieh QQ plot
qq_frangieh <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "frangieh_ifn_gamma_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-10, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
# ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
scale_color_manual(values = my_values) +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.25, 0.86),
legend.text = element_text(size = 11),
legend.margin = margin(t = 0, unit = 'cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
#################################################################
# Put the pieces together and save
#################################################################
# put the pieces together
final_plot <- ggarrange(
ggarrange(qq_frangieh, qq_papalexi, nrow = 1),
as_ggplot(nt_table_g),
as_ggplot(pc_table_g),
labels = "auto",
heights = c(1.2, 1, 0.8),
ncol = 1
)
# define the file path
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4.png"
)
# save the figure
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7,
height = 8.5,
bg = "white")
library(lowmoi)
library(tidyverse)
conflicts_prefer(dplyr::filter)
sceptre2_results_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
sample_size_df <- readRDS(paste0(sceptre2_results_dir, "dataset_sample_sizes/n_nonzero_cells_per_grna.rds"))
# undercover res grp = 1
undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_0423.rds"))
sceptre_undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_sceptre_0423.rds"))
seuratnb_undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_seuratnb_0423.rds"))
undercover_res <- rbind(undercover_res, sceptre_undercover_res, seuratnb_undercover_res)
undercover_res_processed <- process_undercover_result(undercover_res, sample_size_df)
saveRDS(object = undercover_res_processed,
paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_0423_processed.rds"))
undercover_res_processed$p_value |> min()
min(undercover_res_processed$response_id, na.rm = TRUE)
min(undercover_res_processed$p_value, na.rm = TRUE)
# pc result
pc_res <- readRDS(paste0(sceptre2_results_dir, "positive_control_analysis/pc_results_0423.rds"))
seuratnb_pc_res <- readRDS(paste0(sceptre2_results_dir, "positive_control_analysis/pc_results_seuratnb_0423.rds"))
pc_res <- rbind(pc_res, seuratnb_pc_res)
pc_res_processed <- suppressWarnings(process_pc_result(pc_res, sample_size_df))
saveRDS(object = pc_res_processed,
file = paste0(sceptre2_results_dir, "positive_control_analysis/pc_results_processed.rds"))
min(pc_res_processed$p_value, na.rm = TRUE)
saveRDS(object = pc_res_processed,
file = paste0(sceptre2_results_dir, "positive_control_analysis/pc_results_processed.rds"))
# Load packages
library(tidyverse)
library(katlabutils)
library(cowplot)
conflicts_prefer(dplyr::filter)
# Load scripts and results
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
undercover_res <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_1_0423_processed.rds")) |>
filter(n_nonzero_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_nonzero_control >= N_NONZERO_CONTROL_CUTOFF)
alpha <- 0.1
make_figure_row <- function(dataset, print_legend) {
my_methods <- c("KS test", "MAST", "MIMOSCA", "t-test", "Seurat-Wilcox", "Seurat-NB")
my_values <- my_cols[names(my_cols) %in% my_methods]
df_sub <- undercover_res |>
filter(dataset == !!dataset,
Method %in% my_methods)
bonf_thresh <- alpha/(nrow(df_sub)/length(my_methods))
p2 <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.55) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
geom_hline(yintercept = bonf_thresh, linetype = "dashed") +
scale_color_manual(values = my_values)
if (print_legend) {
p2 <- p2 +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.78, 0.2),
legend.text=element_text(size = 8.0),
legend.margin=margin(t = 0, unit='cm'),
legend.background = element_blank()) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.1,
default.unit="inch",
override.aes = list(size = 2.5)))
} else {
p2 <- p2 + my_theme_no_legend
}
bonf_reject_df <- compute_n_bonf_rejections(df_sub, alpha = alpha)
p3 <- bonf_reject_df |>
ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
scale_y_continuous(trans = scales::pseudo_log_trans(base = 10, sigma = 0.2),
expand = c(0,0),
breaks = c(0, 1, 10, 100, 1000, 8000)) +
ylab("False positives") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank()) +
scale_fill_manual(values = my_cols)
p_row <- plot_grid(p2, p3, nrow = 1, labels = NULL,
align = "h", rel_widths = c(2,1))
p_row
}
r0 <- ggplot() +
theme_minimal() +
ggtitle("Undercover gRNA calibration assessment") +
theme(plot.title = element_text(hjust = 0.5, size=11))
r1 <- make_figure_row(dataset = "papalexi_eccite_screen_gene", print_legend = TRUE)
r2 <- make_figure_row(dataset = "frangieh_ifn_gamma_gene", print_legend = FALSE)
fig <- plot_grid(r1, r2, nrow = 1)
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_1/fig_1_bottom.png")
ggsave(filename = to_save_fp, plot = fig, device = "png",
scale = 1.1, width = 7, height = 2.25, dpi = 330)
my_methods <- c("KS test", "MAST", "MIMOSCA", "t-test", "Seurat-Wilcox", "Seurat-NB")
my_methods <- c("KS test", "MAST", "MIMOSCA", "t-test", "Seurat-Wilcox", "Seurat-NB")
my_values <- my_cols[names(my_cols) %in% my_methods]
my_methods
my_values
head(df_sub)
my_methods <- c("KS test", "MAST", "MIMOSCA", "t-test", "Seurat-Wilcox", "Seurat-NB")
my_values <- my_cols[names(my_cols) %in% my_methods]
df_sub <- undercover_res |>
filter(dataset == !!dataset,
Method %in% my_methods)
dataset
dataset <- "papalexi_eccite_screen_gene"
df_sub <- undercover_res |>
filter(dataset == !!dataset,
Method %in% my_methods)
head(df_sub)
df_sub <- undercover_res |>
filter(dataset == !!dataset,
Method %in% my_methods) |>
dplyr::arrange(Method)
head(df_sub)
df_sub$Method
library(lowmoi)
library(tidyverse)
conflicts_prefer(dplyr::filter)
sceptre2_results_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
sample_size_df <- readRDS(paste0(sceptre2_results_dir, "dataset_sample_sizes/n_nonzero_cells_per_grna.rds"))
# undercover res grp = 1
undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_0423.rds"))
sceptre_undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_sceptre_0423.rds"))
seuratnb_undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_seuratnb_0423.rds"))
undercover_res <- rbind(undercover_res, sceptre_undercover_res, seuratnb_undercover_res)
undercover_res_processed <- process_undercover_result(undercover_res, sample_size_df)
saveRDS(object = undercover_res_processed,
paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_0423_processed.rds"))
undercover_res_processed$Method |> unique()
undercover_res_processed$Method |> levels()
head(pc_res_w_ss)
head(undercover_res)
head(sample_size_df)
undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_0423.rds"))
sceptre_undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_sceptre_0423.rds"))
seuratnb_undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_seuratnb_0423.rds"))
undercover_res <- rbind(undercover_res, sceptre_undercover_res, seuratnb_undercover_res)
sample_size_df_nt <- sample_size_df |>
dplyr::filter(grna_group == "non-targeting")
ntc_effective_samp_size <- sample_size_df_nt |>
dplyr::group_by(response_id, dataset) |>
dplyr::summarize(effective_samp_size = sum(n_nonzero_cells))
sample_size_df_nt <- dplyr::left_join(x = sample_size_df_nt,
y = ntc_effective_samp_size,
by = c("response_id", "dataset")) |>
dplyr::mutate(n_nonzero_treatment = n_nonzero_cells,
n_nonzero_control = effective_samp_size - n_nonzero_cells) |>
dplyr::rename("undercover_grna" = "grna_id") |>
dplyr::select(response_id, undercover_grna, dataset,
n_nonzero_treatment, n_nonzero_control, effective_samp_size)
out <- dplyr::left_join(x = undercover_res,
y = sample_size_df_nt,
by = c("response_id", "undercover_grna", "dataset")) |>
replace_slash_w_underscore()
load_all("~/research_code/lowmoi")
head(out)
sample_size_df_nt <- sample_size_df |>
dplyr::filter(grna_group == "non-targeting")
ntc_effective_samp_size <- sample_size_df_nt |>
dplyr::group_by(response_id, dataset) |>
dplyr::summarize(effective_samp_size = sum(n_nonzero_cells))
sample_size_df_nt <- dplyr::left_join(x = sample_size_df_nt,
y = ntc_effective_samp_size,
by = c("response_id", "dataset")) |>
dplyr::mutate(n_nonzero_treatment = n_nonzero_cells,
n_nonzero_control = effective_samp_size - n_nonzero_cells) |>
dplyr::rename("undercover_grna" = "grna_id") |>
dplyr::select(response_id, undercover_grna, dataset,
n_nonzero_treatment, n_nonzero_control, effective_samp_size)
out <- dplyr::left_join(x = undercover_res,
y = sample_size_df_nt,
by = c("response_id", "undercover_grna", "dataset")) |>
replace_slash_w_underscore()
if ("schraivogel_enhancer_screen_chr11_gene" %in% out$dataset &&
"schraivogel_enhancer_screen_chr8_gene" %in% out$dataset) {
out <- out |> combine_schraivogel_enhancer_screens()
}
head(out)
undercover_res <- out
undercover_res |>
mutate(Method = forcats::fct_recode(method,
"SCEPTRE" = "sceptre",
"SCEPTRE (no covariates)" = "sceptre_no_covariates",
"NB regression (w/ covariates)" = "nb_regression_w_covariates",
"NB regression (no covariates)" = "nb_regression_no_covariates",
"Seurat-Wilcox" = "seurat_de",
"Seurat-NB" = "seurat_de_nb",
"t-test" = "liscovitch_method",
"KS test" = "weissman_method",
"MAST" = "schraivogel_method",
"MIMOSCA" = "mimosca"
)) |> head()
undercover_res |>
mutate(Method = forcats::fct_recode(method,
"SCEPTRE" = "sceptre",
"SCEPTRE (no covariates)" = "sceptre_no_covariates",
"NB regression (w/ covariates)" = "nb_regression_w_covariates",
"NB regression (no covariates)" = "nb_regression_no_covariates",
"Seurat-Wilcox" = "seurat_de",
"Seurat-NB" = "seurat_de_nb",
"t-test" = "liscovitch_method",
"KS test" = "weissman_method",
"MAST" = "schraivogel_method",
"MIMOSCA" = "mimosca"
)) |>
mutate(Method = forcats::fct_relevel(levels = c("SCEPTRE",
"SCEPTRE (no covariates)",
"NB regression (w/ covariates)",
"NB regression (no covariates)",
"Seurat-Wilcox",
"Seurat-NB",
"t-test",
"KS test",
"MAST",
"MIMOSCA"))) |> head()
undercover_res |>
mutate(Method = forcats::fct_recode(method,
"SCEPTRE" = "sceptre",
"SCEPTRE (no covariates)" = "sceptre_no_covariates",
"NB regression (w/ covariates)" = "nb_regression_w_covariates",
"NB regression (no covariates)" = "nb_regression_no_covariates",
"Seurat-Wilcox" = "seurat_de",
"Seurat-NB" = "seurat_de_nb",
"t-test" = "liscovitch_method",
"KS test" = "weissman_method",
"MAST" = "schraivogel_method",
"MIMOSCA" = "mimosca"
)) |>
mutate(Method = forcats::fct_relevel(Method, levels = c("SCEPTRE",
"SCEPTRE (no covariates)",
"NB regression (w/ covariates)",
"NB regression (no covariates)",
"Seurat-Wilcox",
"Seurat-NB",
"t-test",
"KS test",
"MAST",
"MIMOSCA")))
undercover_res |>
mutate(Method = forcats::fct_recode(method,
"SCEPTRE" = "sceptre",
"SCEPTRE (no covariates)" = "sceptre_no_covariates",
"NB regression (w/ covariates)" = "nb_regression_w_covariates",
"NB regression (no covariates)" = "nb_regression_no_covariates",
"Seurat-Wilcox" = "seurat_de",
"Seurat-NB" = "seurat_de_nb",
"t-test" = "liscovitch_method",
"KS test" = "weissman_method",
"MAST" = "schraivogel_method",
"MIMOSCA" = "mimosca"
))
undercover_res |>
mutate(Method = forcats::fct_recode(method,
"SCEPTRE" = "sceptre",
"SCEPTRE (no covariates)" = "sceptre_no_covariates",
"NB regression (w/ covariates)" = "nb_regression_w_covariates",
"NB regression (no covariates)" = "nb_regression_no_covariates",
"Seurat-Wilcox" = "seurat_de",
"Seurat-NB" = "seurat_de_nb",
"t-test" = "liscovitch_method",
"KS test" = "weissman_method",
"MAST" = "schraivogel_method",
"MIMOSCA" = "mimosca"
)) -> x
head(x)
x$Method |> unique()
forcats::fct_relevel(.f = x$Method, c("SCEPTRE", "SCEPTRE (no covariates)"))
forcats::fct_relevel(.f = x$Method, c("SCEPTRE", "SCEPTRE (no covariates)")) |> levels()
undercover_res |>
mutate(Method = forcats::fct_recode(method,
"SCEPTRE" = "sceptre",
"SCEPTRE (no covariates)" = "sceptre_no_covariates",
"NB regression (w/ covariates)" = "nb_regression_w_covariates",
"NB regression (no covariates)" = "nb_regression_no_covariates",
"Seurat-Wilcox" = "seurat_de",
"Seurat-NB" = "seurat_de_nb",
"t-test" = "liscovitch_method",
"KS test" = "weissman_method",
"MAST" = "schraivogel_method",
"MIMOSCA" = "mimosca") |>
forcats::fct_relevel(levels = c("SCEPTRE",
"SCEPTRE (no covariates)",
"NB regression (w/ covariates)",
"NB regression (no covariates)",
"Seurat-Wilcox",
"Seurat-NB",
"t-test",
"KS test",
"MAST",
"MIMOSCA"))) -> x
undercover_res |>
mutate(Method = forcats::fct_recode(method,
"SCEPTRE" = "sceptre",
"SCEPTRE (no covariates)" = "sceptre_no_covariates",
"NB regression (w/ covariates)" = "nb_regression_w_covariates",
"NB regression (no covariates)" = "nb_regression_no_covariates",
"Seurat-Wilcox" = "seurat_de",
"Seurat-NB" = "seurat_de_nb",
"t-test" = "liscovitch_method",
"KS test" = "weissman_method",
"MAST" = "schraivogel_method",
"MIMOSCA" = "mimosca") |>
forcats::fct_relevel(levels = c("SCEPTRE",
"SCEPTRE (no covariates)",
"NB regression (w/ covariates)",
"NB regression (no covariates)",
"Seurat-Wilcox",
"Seurat-NB",
"t-test",
"KS test",
"MAST",
"MIMOSCA"))) -> x
undercover_res |>
mutate(Method = forcats::fct_recode(method,
"SCEPTRE" = "sceptre",
"SCEPTRE (no covariates)" = "sceptre_no_covariates",
"NB regression (w/ covariates)" = "nb_regression_w_covariates",
"NB regression (no covariates)" = "nb_regression_no_covariates",
"Seurat-Wilcox" = "seurat_de",
"Seurat-NB" = "seurat_de_nb",
"t-test" = "liscovitch_method",
"KS test" = "weissman_method",
"MAST" = "schraivogel_method",
"MIMOSCA" = "mimosca") |>
forcats::fct_relevel(c("SCEPTRE",
"SCEPTRE (no covariates)",
"NB regression (w/ covariates)",
"NB regression (no covariates)",
"Seurat-Wilcox",
"Seurat-NB",
"t-test",
"KS test",
"MAST",
"MIMOSCA"))) -> x
x$Method |> levels()
x
x |> dplyr::arrange(Method)
library(lowmoi)
library(tidyverse)
conflicts_prefer(dplyr::filter)
sceptre2_results_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
sample_size_df <- readRDS(paste0(sceptre2_results_dir, "dataset_sample_sizes/n_nonzero_cells_per_grna.rds"))
# undercover res grp = 1
undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_0423.rds"))
sceptre_undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_sceptre_0423.rds"))
seuratnb_undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_seuratnb_0423.rds"))
undercover_res <- rbind(undercover_res, sceptre_undercover_res, seuratnb_undercover_res)
undercover_res_processed <- process_undercover_result(undercover_res, sample_size_df)
saveRDS(object = undercover_res_processed,
paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_0423_processed.rds"))
head(undercover_res_processed)
undercover_res_processed$Method |> levels()
# pc result
pc_res <- readRDS(paste0(sceptre2_results_dir, "positive_control_analysis/pc_results_0423.rds"))
seuratnb_pc_res <- readRDS(paste0(sceptre2_results_dir, "positive_control_analysis/pc_results_seuratnb_0423.rds"))
pc_res <- rbind(pc_res, seuratnb_pc_res)
pc_res_processed <- suppressWarnings(process_pc_result(pc_res, sample_size_df))
saveRDS(object = pc_res_processed,
file = paste0(sceptre2_results_dir, "positive_control_analysis/pc_results_processed.rds"))
pc_res_processed$Method |> levels()
saveRDS(object = pc_res_processed,
file = paste0(sceptre2_results_dir, "positive_control_analysis/pc_results_processed.rds"))
