.get_config_path
"LOCAL_SCEPTRE2_DATA_DIR"
.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
sceptre2_dir
# SCEPTRE 2 DIR
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# SCHRAIVOGEL DIR
schraivogel_dir <- .get_config_path("LOCAL_SCHRAIVOGEL_2020_DATA_DIR")
# PAPALEXI DIR
papalexi_dir <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
sceptre2_dir
schraivogel_dir
papalexi_dir
# load packages
library(ondisc)
papalexi_dir
# Load the datasets
# i. Papalexi gene
paste0(papalexi_dir, "processed/gene")
# Load the datasets
# i. Papalexi gene
paste0(papalexi_dir, "processed/gene/expression_matrix.odm")
paste0(papalexi_dir, "processed/gene/metadata.rds")
paste0(papalexi_dir, "processed/gene/metadata.rds") |> file.exists()
# Load the datasets
# i. Papalexi gene
paste0(papalexi_dir, "processed/gene/expression_matrix.odm") |> file.exists()
# Load the datasets
# i. Papalexi gene
read_odm(odm_fp = paste0(papalexi_dir, "processed/gene/expression_matrix.odm"),
metadata_fp = paste0(papalexi_dir, "processed/gene/metadata.rds"))
schraivogel_dir
papalexi_gene
# set directories
# SCEPTRE 2 DIR
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# SCHRAIVOGEL DIR
schraivogel_dir <- .get_config_path("LOCAL_SCHRAIVOGEL_2020_DATA_DIR")
# PAPALEXI DIR
papalexi_dir <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
# load packages
library(ondisc)
# set gene expression threshold
EXPRESSION_THRESH <- 0.005
# Load the datasets
# i. Papalexi gene
papalexi_gene <- read_odm(odm_fp = paste0(papalexi_dir, "processed/gene/expression_matrix.odm"),
metadata_fp = paste0(papalexi_dir, "processed/gene/metadata.rds"))
papalexi_gene
schraivogel_dir
# ii. Schraivogel TAP
schraivogel_tap <- read_odm(odm_fp = paste0(schraivogel_dir, "processed/ground_truth_tapseq/gene/expression_matrix.odm"),
metadata_fp = paste0(schraivogel_dir, "processed/ground_truth_tapseq/gene/metadata.rds"))
schraivogel_tap
# iii. Schraivogel Perturb
schraivogel_perturb <- read_odm(odm_fp = paste0(schraivogel_dir, "/processed/ground_truth_perturbseq/gene/expression_matrix.odm"),
metadata_fp = paste0(schraivogel_dir, "/processed/ground_truth_perturbseq/gene/metadata.rds"))
schraivogel_perturb
schraivogel_tap
papalexi_gene
# do feature selection on all datasets; keep those genes with expression >= 0.005.
get_highly_expressed_features(papalexi_gene, frac_expressed = 0.005)
# do feature selection on all datasets; keep those genes with expression >= 0.005.
filter_features <- function(odm) {
odm[get_highly_expressed_features(odm, frac_expressed = 0.005),]
}
papalexi_gene_filtered <- filter_features(papalexi_genes)
papalexi_gene_filtered <- filter_features(papalexi_gene)
papalexi_gene
papalexi_gene_filtered
papalexi_gene_filtered |> get_feature_covariates() |> dplyr::pull(n_umis)
papalexi_gene_filtered |> get_feature_covariates() |> colnames()
papalexi_gene_filtered |> get_feature_covariates() |> n_nonzero()
papalexi_gene_filtered |> get_feature_covariates() |> dplyr::pull(n_nonzero())
papalexi_gene_filtered |> get_feature_covariates() |> dplyr::pull(n_nonzero)
papalexi_gene_filtered |> get_feature_covariates() |> dplyr::pull(n_nonzero) |> min()
schraivogel_tap_filtered <- filter_features(schraivogel_tap)
schraivogel_tap_filtered
schraivogel_tap
schraivogel_perturb_filtered <- filter_features(schraivogel_perturb)
schraivogel_perturb_filtered
schraivogel_perturb
sceptre2_dir
papalexi_gene_filtered
paste0(sceptre2_dir, "data/papalexi/gene")
# save subsetted ODMs
save_odm(odm = papalexi_gene_filtered,
metadata_fp = paste0(sceptre2_dir, "data/papalexi/gene/filtered_metadata.rds"))
sceptre2_dir
schraivogel_tap_filtered
sceptre2_dir
paste0(sceptre2_dir, "data/papalexi/gene/")
save_odm(odm = schraivogel_tap_filtered,
metadata_fp = paste0(sceptre2_dir, "data/schraivogel/tap/filtered_metadata.rds"))
save_odm(odm = schraivogel_perturb_filtered,
metadata_fp = paste0(sceptre2_dir, "data/schraivogel/perturb/filtered_metadata.rds"))
.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
sceptre2_offsite <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
sceptre2_offsite
papalexi_gene = c(response_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
response_metadata_fp = paste0(sceptre2_offsite, "data/papalexi/gene/filtered_metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds"))
papalexi_offsite <- .get_config_path("LOCAL_PAPALEXI_2021_DATA_DIR")
schraivogel_offsite <- .get_config_path("LOCAL_SCHRAIVOGEL_2020_DATA_DIR")
sceptre2_offsite <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
c(response_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
response_metadata_fp = paste0(sceptre2_offsite, "data/papalexi/gene/filtered_metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds"))
sceptre2_offsite
sceptre2_offsite
papalexi_gene = c(response_odm_fp = paste0(papalexi_offsite, "processed/gene/expression_matrix.odm"),
response_metadata_fp = paste0(sceptre2_offsite, "data/papalexi/gene/filtered_metadata.rds"),
gRNA_odm_fp = paste0(papalexi_offsite, "processed/gRNA/count_matrix.odm"),
gRNA_metadata_fp = paste0(papalexi_offsite, "processed/gRNA/metadata.rds"))
schraivogel_tap = c(response_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gene/expression_matrix.odm"),
response_metadata_fp = paste0(sceptre2_offsite, "data/schraivogel/tap/filtered_metadata.rds"),
gRNA_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gRNA/raw_ungrouped.odm"),
gRNA_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_tapseq/gRNA/raw_ungrouped_metadata.rds"))
schraivogel_perturb = c(response_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_perturbseq/gene/expression_matrix.odm"),
response_metadata_fp = paste0(sceptre2_offsite, "data/schraivogel/perturb/filtered_metadata.rds"),
gRNA_odm_fp = paste0(schraivogel_offsite, "processed/ground_truth_perturbseq/gRNA/raw_ungrouped.odm"),
gRNA_metadata_fp = paste0(schraivogel_offsite, "processed/ground_truth_perturbseq/gRNA/raw_ungrouped_metadata.rds"))
papalexi_gene
schraivogel_tap
schraivogel_perturb
papalexi_gene
read_odm(odm_fp = papalexi_gene[1], metadata_fp = papalexi_gene[2])
read_odm(odm_fp = schraivogel_tap[1], metadata_fp = schraivogel_tap[2])
