assignable <- gRNA_mod[[1:nrow(gRNA_mod),]] |> apply(MARGIN = 2, FUN = function(col) {
max(col)/sum(col) > p_reads_one_gRNA_seq
})
multimodal_odm <- multimodal_odm[,assignable]
high_quality <-  multimodal_odm |>
get_cell_covariates() |>
dplyr::filter(atac_n_fragments >= n_atac_frags) |>
dplyr::filter(gRNA_n_umis >= 100) |> row.names()
multimodal_odm[,high_quality]
}
# iv. Liscovitch exp 1 (QC metrics: (a) >= 100 gRNA reads, (b) >= 99% of reads assigned to one gRNA sequence, (c) >= 500 ATAC-seq fragments)
liscovitch_atac <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/chip_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/metadata.rds"))
liscovitch_gRNA <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/gRNA_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/metadata.rds"))
exp_1_multimodal <- multimodal_ondisc_matrix(covariate_ondisc_matrix_list = list(atac = liscovitch_atac, gRNA = liscovitch_gRNA))
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.90)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.0)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.990)
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.90)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
exp_1_multimodal_qc
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
get_modality(exp_1_multimodal_qc, "ATAC")
get_modality(exp_1_multimodal_qc, "atac")
schraivogel_dir
# iv. Liscovitch exp 1 (QC metrics: (a) >= 100 gRNA reads, (b) >= 99% of reads assigned to one gRNA sequence, (c) >= 500 ATAC-seq fragments)
liscovitch_atac_1 <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/chip_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/chip_counts/metadata.rds"))
liscovitch_gRNA_1 <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/gRNA_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_1/gRNA_counts/metadata.rds"))
exp_1_multimodal <- multimodal_ondisc_matrix(covariate_ondisc_matrix_list = list(atac = liscovitch_atac_1, gRNA = liscovitch_gRNA_1))
exp_1_multimodal_qc <- run_lisc_qc(exp_1_multimodal, p_reads_one_gRNA_seq = 0.99)
liscovitch_atac_1
liscovitch_gRNA_1
exp_1_multimodal
exp_1_multimodal_qc
# v. Liscovitch exp 2 (QC metrics: >= 100 gRNA reads, (b) >= 90% of reads assigned to one gRNA sequence, (c) >= 500 ATAC-seq fragments)
liscovitch_atac_2 <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_2/chip_counts/chip_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_2/chip_counts/metadata.rds"))
liscovitch_gRNA_2 <- read_odm(odm_fp = paste0(liscovitch_dir, "processed/experiment_2/gRNA_counts/gRNA_counts.odm"),
metadata_fp = paste0(liscovitch_dir, "processed/experiment_2/gRNA_counts/metadata.rds"))
exp_2_multimodal <- multimodal_ondisc_matrix(covariate_ondisc_matrix_list = list(atac = liscovitch_atac_2, gRNA = liscovitch_gRNA_2))
exp_2_multimodal_qc <- run_lisc_qc(exp_2_multimodal, p_reads_one_gRNA_seq = 0.90)
exp_2_multimodal_qc
get_modality(exp_1_multimodal_qc, "atac")
get_modality(exp_1_multimodal_qc, "atac")
get_modality(exp_1_multimodal_qc, "atac")
paste0(sceptre2_dir, "data/liscovitch/experiment_1/filtered_metadata.rds")
dir.exists("/Users/timbarry/research_offsite/projects/sceptre2/data/liscovitch/experiment_1/")
save_odm(odm = get_modality(exp_1_multimodal_qc, "atac"),
metadata_fp = paste0(sceptre2_dir, "data/liscovitch/experiment_1/filtered_metadata.rds"))
get_modality(exp_1_multimodal_qc, "gRNA")
save_odm(odm = get_modality(exp_1_multimodal_qc, "atac"),
metadata_fp = paste0(sceptre2_dir, "data/liscovitch/experiment_1/chip_count/filtered_metadata.rds"))
save_odm(odm = get_modality(exp_1_multimodal_qc, "gRNA"),
metadata_fp = paste0(sceptre2_dir, "data/liscovitch/experiment_1/gRNA/filtered_metadata.rds"))
# liscovitch exp 2, atac modality
save_odm(odm = get_modality(exp_2_multimodal_qc, "atac"),
metadata_fp = paste0(sceptre2_dir, "data/liscovitch/experiment_2/chip_count/filtered_metadata.rds"))
# liscovitch exp 2, gRNA modality
save_odm(odm = get_modality(exp_2_multimodal_qc, "gRNA"),
metadata_fp = paste0(sceptre2_dir, "data/liscovitch/experiment_2/gRNA/filtered_metadata.rds"))
library(ondisc)
sceptre2_offsite_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
library(ondisc)
sceptre2_offsite_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
sceptre2_offsite_dir
paste0(sceptre2_offsite_dir, "data/")
sceptre2_data_dir = paste0(sceptre2_offsite_dir, "data/")
sceptre2_data_dir
paper
dataset
sceptre2_data_dir
paper <- "liscovitch"
dataset <- "eccite_screen"
paper
dataset
paste0(sceptre2_data_dir, paper, "/", dataset)
paste0(sceptre2_data_dir, paper, "/", dataset)
dataset_dir <- paste0(sceptre2_data_dir, paper, "/", dataset)
dataset_dir
modality_list <- list.files(dataset_dir)
modality_list
list.files(dataset_dir)
modality_list
dataset_dir
list.files(dataset_dir)
dir.exists(dataset_dir)
dataset_dir
dataset <- "experiment_big"
dataset
paper
dataset_dir <- paste0(sceptre2_data_dir, paper, "/", dataset)
modality_list <- list.files(dataset_dir)
modality_list
multimodal_list <- list()
multimodal_list
odm_list <- list()
dataset_dir
modality_list
odm_list <- list()
odm_list
dataset_dir <- paste0(sceptre2_data_dir, paper, "/", dataset)
modality_vect <- list.files(dataset_dir)
odm_list <- list()
dataset_dir
modality_vect
odm_list
dataset_dir <- paste0(sceptre2_data_dir, paper, "/", dataset)
modality_vect <- list.files(dataset_dir)
odm_list <- list()
dataset_dir
modality_vect
odm_list
modality_vect
modality
modality <- modality_vect[1]
dataset_dir
modality_vect
odm_list
modality
dataset_dir
odm_dir <- paste0(dataset_dir, modality)
odm_dir
odm_dir <- paste0(dataset_dir, "/", modality)
odm_dir
odm_dir
odm_dir
odm_dir
odm_dir <- paste0(dataset_dir, "/", modality, "/")
odm_dir
curr_odm <- read_odm(odm_fp = paste0(odm_dir, "matrix.odm"),
metadata_fp = paste0(odm_dir, "metadata_orig.rds"))
curr_odm
odm_list <- c(odm_list, curr_odm)
odm_list
length(odm_list)
modality
odm_list <- list()
for (modality in modality_vect) {
odm_dir <- paste0(dataset_dir, "/", modality, "/")
curr_odm <- read_odm(odm_fp = paste0(odm_dir, "matrix.odm"),
metadata_fp = paste0(odm_dir, "metadata_orig.rds"))
odm_list <- c(odm_list, curr_odm)
}
odm_list
names(odm_list) <- modality_vect
odm_list
multimodal_ondisc_matrix(odm_list)
multimodal_odm
# 0) We write a general read and save multimodal_odm functions
save_multimodal_odm <- function(multimodal_odm, paper, dataset, metadata_file_name, sceptre2_data_dir = paste0(sceptre2_offsite_dir, "data/")) {
dataset_dir <- paste0(sceptre2_data_dir, paper, "/", dataset)
modality_list <- multimodal_odm@modalities |> names()
for (modality in modality_list) {
save_odm(odm = get_modality(multimodal_odm, modality),
metadata_fp = paste0(dataset_dir, "/", modality, "/", metadata_file_name))
}
}
read_multimodal_odm <- function(paper, dataset, sceptre2_data_dir = paste0(sceptre2_offsite_dir, "data/")) {
dataset_dir <- paste0(sceptre2_data_dir, paper, "/", dataset)
modality_vect <- list.files(dataset_dir)
odm_list <- list()
for (modality in modality_vect) {
odm_dir <- paste0(dataset_dir, "/", modality, "/")
curr_odm <- read_odm(odm_fp = paste0(odm_dir, "matrix.odm"),
metadata_fp = paste0(odm_dir, "metadata_orig.rds"))
odm_list <- c(odm_list, curr_odm)
}
names(odm_list) <- modality_vect
ret <- multimodal_ondisc_matrix(odm_list)
return(ret)
}
paper
dataset
sceptre2_data_dir
# 1) Liscovitch
# Load the chromatin and grna modalities for experiment_small and experiment_big
exp_small_multimodal <- read_multimodal_odm(paper = "liscovitch", dataset = "experiment_small")
exp_small_multimodal
exp_big_multimodal <- read_multimodal_odm(paper = "liscovitch", dataset = "experiment_big")
exp_big_multimodal
exp_small_multimodal
exp_small_multimodal
exp_big_multimodal
exp_small_multimodal[[,1]]
library(ondisc)
sceptre2_offsite_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# This script performs cell-wise QC.
# We perform cell-wise QC on datasets from two papers: Frangieh and Liscovitch.
# We follow as closely as possible the cell QC implemented by the original authors.
# We do not perform cell QC on the Schraivogel or Papalexi datasets, as these datasets already come with cell QC.
# 0) We write a general read and save multimodal_odm functions
# save
save_multimodal_odm <- function(multimodal_odm, paper, dataset, metadata_file_name, sceptre2_data_dir = paste0(sceptre2_offsite_dir, "data/")) {
dataset_dir <- paste0(sceptre2_data_dir, paper, "/", dataset)
modality_list <- multimodal_odm@modalities |> names()
for (modality in modality_list) {
save_odm(odm = get_modality(multimodal_odm, modality),
metadata_fp = paste0(dataset_dir, "/", modality, "/", metadata_file_name))
}
}
# read
read_multimodal_odm <- function(paper, dataset, sceptre2_data_dir = paste0(sceptre2_offsite_dir, "data/")) {
dataset_dir <- paste0(sceptre2_data_dir, paper, "/", dataset)
modality_vect <- list.files(dataset_dir)
odm_list <- list()
for (modality in modality_vect) {
odm_dir <- paste0(dataset_dir, "/", modality, "/")
curr_odm <- read_odm(odm_fp = paste0(odm_dir, "matrix.odm"),
metadata_fp = paste0(odm_dir, "metadata_orig.rds"))
odm_list <- c(odm_list, curr_odm)
}
names(odm_list) <- modality_vect
ret <- multimodal_ondisc_matrix(odm_list)
return(ret)
}
# 1) Liscovitch
# First, load the chromatin and grna modalities for experiment_small and experiment_big
exp_small_multimodal <- read_multimodal_odm(paper = "liscovitch", dataset = "experiment_small")
exp_big_multimodal <- read_multimodal_odm(paper = "liscovitch", dataset = "experiment_big")
# Second, define the QC function
run_lisc_cell_qc <- function(multimodal_odm, n_gRNA_reads = 100, n_atac_frags = 500, p_reads_one_gRNA_seq) {
gRNA_mod <- get_modality(multimodal_odm, "grna")
assignable <- gRNA_mod[[1:nrow(gRNA_mod),]] |> apply(MARGIN = 2, FUN = function(col) {
max(col)/sum(col) > p_reads_one_gRNA_seq
})
multimodal_odm <- multimodal_odm[,assignable]
high_quality <-  multimodal_odm |>
get_cell_covariates() |>
dplyr::filter(chromatin_n_fragments >= n_atac_frags) |>
dplyr::filter(grna_n_umis >= 100) |> row.names()
multimodal_odm[,high_quality]
}
# next, apply the QC, first to the small experiment and then to the big experiment
experiment_small_multimodal_cell_qc <- run_lisc_cell_qc(experiment_small_multimodal, p_reads_one_gRNA_seq = 0.99)
experiment_big_multimodal_cell_qc <- run_lisc_cell_qc(experiment_big_multimodal, p_reads_one_gRNA_seq = 0.90)
# save multimodal odms
save_multimodal_odm(experiment_small_multimodal_cell_qc, "liscovitch", "experiment_small", "metadata_cell_qc.rds")
save_multimodal_odm(experiment_big_multimodal_cell_qc, "liscovitch", "experiment_big", "metadata_cell_qc.rds")
library(ondisc)
sceptre2_offsite_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# 0) We write a general read and save multimodal_odm functions
# save
save_multimodal_odm <- function(multimodal_odm, paper, dataset, metadata_file_name, sceptre2_data_dir = paste0(sceptre2_offsite_dir, "data/")) {
dataset_dir <- paste0(sceptre2_data_dir, paper, "/", dataset)
modality_list <- multimodal_odm@modalities |> names()
for (modality in modality_list) {
save_odm(odm = get_modality(multimodal_odm, modality),
metadata_fp = paste0(dataset_dir, "/", modality, "/", metadata_file_name))
}
}
# read
read_multimodal_odm <- function(paper, dataset, sceptre2_data_dir = paste0(sceptre2_offsite_dir, "data/")) {
dataset_dir <- paste0(sceptre2_data_dir, paper, "/", dataset)
modality_vect <- list.files(dataset_dir)
odm_list <- list()
for (modality in modality_vect) {
odm_dir <- paste0(dataset_dir, "/", modality, "/")
curr_odm <- read_odm(odm_fp = paste0(odm_dir, "matrix.odm"),
metadata_fp = paste0(odm_dir, "metadata_orig.rds"))
odm_list <- c(odm_list, curr_odm)
}
names(odm_list) <- modality_vect
ret <- multimodal_ondisc_matrix(odm_list)
return(ret)
}
# 1) Liscovitch
# First, load the chromatin and grna modalities for experiment_small and experiment_big
exp_small_multimodal <- read_multimodal_odm(paper = "liscovitch", dataset = "experiment_small")
exp_big_multimodal <- read_multimodal_odm(paper = "liscovitch", dataset = "experiment_big")
# Second, define the QC function
run_lisc_cell_qc <- function(multimodal_odm, n_gRNA_reads = 100, n_atac_frags = 500, p_reads_one_gRNA_seq) {
gRNA_mod <- get_modality(multimodal_odm, "grna")
assignable <- gRNA_mod[[1:nrow(gRNA_mod),]] |> apply(MARGIN = 2, FUN = function(col) {
max(col)/sum(col) > p_reads_one_gRNA_seq
})
multimodal_odm <- multimodal_odm[,assignable]
high_quality <-  multimodal_odm |>
get_cell_covariates() |>
dplyr::filter(chromatin_n_fragments >= n_atac_frags) |>
dplyr::filter(grna_n_umis >= 100) |> row.names()
multimodal_odm[,high_quality]
}
# next, apply the QC, first to the small experiment and then to the big experiment
experiment_small_multimodal_cell_qc <- run_lisc_cell_qc(experiment_small_multimodal, p_reads_one_gRNA_seq = 0.99)
# next, apply the QC, first to the small experiment and then to the big experiment
experiment_small_multimodal_cell_qc <- run_lisc_cell_qc(exp_small_multimodal, p_reads_one_gRNA_seq = 0.99)
experiment_big_multimodal_cell_qc <- run_lisc_cell_qc(exp_big_multimodal, p_reads_one_gRNA_seq = 0.90)
# save multimodal odms
save_multimodal_odm(experiment_small_multimodal_cell_qc, "liscovitch", "experiment_small", "metadata_cell_qc.rds")
save_multimodal_odm(experiment_big_multimodal_cell_qc, "liscovitch", "experiment_big", "metadata_cell_qc.rds")
# 2) Frangieh
# First, load the co_culture, control, and ifn_gamma multimodal_odms
read_multimodal_odm(paper = "frangieh", dataset = "co_culture")
# 2) Frangieh
# First, load the co_culture, control, and ifn_gamma multimodal_odms
multimodal_odm_list <- list(co_culture = read_multimodal_odm(paper = "frangieh", dataset = "co_culture"),
control = read_multimodal_odm(paper = "frangieh", dataset = "control"),
ifn_gamma = read_multimodal_odm(paper = "frangieh", dataset = "ifn_gamma"))
multimodal_odm_list
multimodal_odm
multimodal_odm
multimodal_odm <- multimodal_odm_list$co_culture
multimodal_odm
multimodal_odm |> get_cell_covariates()
multimodal_odm |> get_cell_covariates() |> head()
multimodal_odm |> get_cell_covariates() |> head() |> dplyr::pull(grna_n_nonzero)
multimodal_odm |> get_cell_covariates() |> dplyr::pull(grna_n_nonzero)
multimodal_odm |> get_cell_covariates() |> dplyr::pull(grna_n_nonzero)|> hist()
multimodal_odm |>
get_cell_covariates() |>
dplyr::pull(grna_n_nonzero)
cellwise_grna_count <- multimodal_odm |>
get_cell_covariates() |>
dplyr::pull(grna_n_nonzero)
head(cellwise_grna_count)
cellwise_grna_count
sum(cellwise_grna_count == 1)
mean(cellwise_grna_count == 1)
multimodal_odm[,cellwise_grna_count == 1]
sum(cellwise_grna_count == 1)
# Second, write the QC function
run_frangieh_cell_qc <- function(multimodal_odm) {
cellwise_grna_count <- multimodal_odm |>
get_cell_covariates() |>
dplyr::pull(grna_n_nonzero)
ret <- multimodal_odm[,cellwise_grna_count == 1]
return(ret)
}
# Second, write the QC function; this function simply restricts attention to cells that have received exactly 1 gRNA.
run_frangieh_cell_qc <- function(multimodal_odm) {
cellwise_grna_count <- multimodal_odm |>
get_cell_covariates() |>
dplyr::pull(grna_n_nonzero)
ret <- multimodal_odm[,cellwise_grna_count == 1]
return(ret)
}
multimodal_odm_list
for (experiment in multimodal_odm_list) {
experiment
}
for (experiment in multimodal_odm_list) {
print(experiment)
}
# Third, apply the QC function to the data
lapply(X = multimodal_odm_list,
FUN = run_frangieh_cell_qc)
# Third, apply the QC function to the data
multimodal_odm_list_qc <- lapply(X = multimodal_odm_list, FUN = run_frangieh_cell_qc)
multimodal_odm_list_qc
length(multimodal_odm_list_qc)
multimodal_odm_list_qc
# Finally, save the multimodal odms
names(multimodal_odm_list_qc)
# Finally, save the multimodal odms
exp_names <- names(multimodal_odm_list_qc)
exp_names
curr_multimodal_odm <- multimodal_odm_list_qc[[exp_name]]
exp_name <- exp_names[1]
exp_name
curr_multimodal_odm <- multimodal_odm_list_qc[[exp_name]]
curr_multimodal_odm
curr_multimodal_odm <- multimodal_odm_list_qc[[exp_name]]
exp_name
for (exp_name in exp_names) {
curr_multimodal_odm <- multimodal_odm_list_qc[[exp_name]]
save_multimodal_odm(multimodal_odm = curr_multimodal_odm,
paper = "frangieh",
dataset = exp_name,
metadata_file_name = "metadata_cell_qc.rds")
}
# set directories
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# load packages
library(ondisc)
library(ondisc)
# load/create dirs
offsite_dir <- .get_config_path("LOCAL_LISCOVITCH_2021_DATA_DIR")
intermediate_files_dir <- paste0(offsite_dir, "intermediate/")
processed_dir <- paste0(offsite_dir, "processed/")
if (!dir.exists(processed_dir)) dir.create(processed_dir)
experiment_1_dir <- paste0(processed_dir, "experiment_small/")
experiment_2_dir <- paste0(processed_dir, "experiment_big/")
if (!dir.exists(experiment_1_dir)) dir.create(experiment_1_dir)
if (!dir.exists(experiment_2_dir)) dir.create(experiment_2_dir)
experiment_1_dir_chip <- paste0(experiment_1_dir, "chromatin/")
experiment_1_dir_gRNA <- paste0(experiment_1_dir, "gRNA/")
if (!dir.exists(experiment_1_dir_chip)) dir.create(experiment_1_dir_chip)
if (!dir.exists(experiment_1_dir_gRNA)) dir.create(experiment_1_dir_gRNA)
experiment_2_dir_chip <-  paste0(experiment_2_dir, "chromatin/")
experiment_2_dir_gRNA <- paste0(experiment_2_dir, "gRNA/")
if (!dir.exists(experiment_2_dir_chip)) dir.create(experiment_2_dir_chip)
if (!dir.exists(experiment_2_dir_gRNA)) dir.create(experiment_2_dir_gRNA)
# write function to initialize odms
write_m_list <- function(m_list, chip_counts_odm_fp, chip_counts_metadata_fp, gRNA_counts_odm_fp, gRNA_counts_metadata_fp, files_used_in_exp) {
chip_counts <- m_list$atac_count
gRNA_counts <- m_list$gRNA_count
n_fragments <- m_list$fragment_lib_sizes
# initialize the chip counts odm
chip_odm <- create_ondisc_matrix_from_R_matrix(r_matrix = chip_counts,
barcodes = colnames(chip_counts),
features_df = data.frame(row.names(chip_counts)),
odm_fp = chip_counts_odm_fp)
# modify chip metadata; add n_fragments per cell and file_used_in_exp
feat_ids <- chip_odm |> get_feature_ids()
used_in_exp_bool <- feat_ids %in% files_used_in_exp
chip_odm_mod <- chip_odm |> mutate_cell_covariates(n_fragments = n_fragments$n_fragments,
n_nonzero = NULL, n_umis = NULL)
save_odm(odm = chip_odm_mod, metadata_fp = chip_counts_metadata_fp)
# initialize the gRNA odm
gRNA_odm <- create_ondisc_matrix_from_R_matrix(r_matrix = gRNA_counts,
barcodes = colnames(gRNA_counts),
features_df = data.frame(row.names(gRNA_counts)),
odm_fp = gRNA_counts_odm_fp,
metadata_fp = gRNA_counts_metadata_fp)
# add information about target and target_type
gRNA_ids <- gsub(pattern = "non_targeting", replacement = "non-targeting", x = gRNA_odm |> get_feature_ids(), fixed = TRUE)
target <- strsplit(x = gRNA_ids, split = "_", fixed = TRUE) |> sapply(FUN = function(entry) entry[1])
target_type <- ifelse(target %in% c("NT", "non-targeting"), "non-targeting", "gene")
gRNA_odm_mod <- gRNA_odm |> mutate_feature_covariates(target = target, target_type = target_type)
save_odm(odm = gRNA_odm_mod, metadata_fp = gRNA_counts_metadata_fp)
}
# load data for ODM 1, and initialize
m_list <- readRDS(paste0(intermediate_files_dir, "matrix_list_1.rds"))
library(ondisc)
# load/create dirs
offsite_dir <- .get_config_path("LOCAL_LISCOVITCH_2021_DATA_DIR")
intermediate_files_dir <- paste0(offsite_dir, "intermediate/")
processed_dir <- paste0(offsite_dir, "processed/")
if (!dir.exists(processed_dir)) dir.create(processed_dir)
experiment_1_dir <- paste0(processed_dir, "experiment_small/")
experiment_2_dir <- paste0(processed_dir, "experiment_big/")
if (!dir.exists(experiment_1_dir)) dir.create(experiment_1_dir)
if (!dir.exists(experiment_2_dir)) dir.create(experiment_2_dir)
experiment_1_dir_chip <- paste0(experiment_1_dir, "chromatin/")
experiment_1_dir_gRNA <- paste0(experiment_1_dir, "gRNA/")
if (!dir.exists(experiment_1_dir_chip)) dir.create(experiment_1_dir_chip)
if (!dir.exists(experiment_1_dir_gRNA)) dir.create(experiment_1_dir_gRNA)
experiment_2_dir_chip <-  paste0(experiment_2_dir, "chromatin/")
experiment_2_dir_gRNA <- paste0(experiment_2_dir, "gRNA/")
if (!dir.exists(experiment_2_dir_chip)) dir.create(experiment_2_dir_chip)
if (!dir.exists(experiment_2_dir_gRNA)) dir.create(experiment_2_dir_gRNA)
# write function to initialize odms
write_m_list <- function(m_list, chip_counts_odm_fp, chip_counts_metadata_fp, gRNA_counts_odm_fp, gRNA_counts_metadata_fp, files_used_in_exp) {
chip_counts <- m_list$atac_count
gRNA_counts <- m_list$gRNA_count
n_fragments <- m_list$fragment_lib_sizes
# initialize the chip counts odm
chip_odm <- create_ondisc_matrix_from_R_matrix(r_matrix = chip_counts,
barcodes = colnames(chip_counts),
features_df = data.frame(row.names(chip_counts)),
odm_fp = chip_counts_odm_fp)
# modify chip metadata; add n_fragments per cell and file_used_in_exp
feat_ids <- chip_odm |> get_feature_ids()
used_in_exp_bool <- feat_ids %in% files_used_in_exp
chip_odm_mod <- chip_odm |> mutate_cell_covariates(n_fragments = n_fragments$n_fragments,
n_nonzero = NULL, n_umis = NULL)
save_odm(odm = chip_odm_mod, metadata_fp = chip_counts_metadata_fp)
# initialize the gRNA odm
gRNA_odm <- create_ondisc_matrix_from_R_matrix(r_matrix = gRNA_counts,
barcodes = colnames(gRNA_counts),
features_df = data.frame(row.names(gRNA_counts)),
odm_fp = gRNA_counts_odm_fp,
metadata_fp = gRNA_counts_metadata_fp)
# add information about target and target_type
gRNA_ids <- gsub(pattern = "non_targeting", replacement = "non-targeting", x = gRNA_odm |> get_feature_ids(), fixed = TRUE)
target <- strsplit(x = gRNA_ids, split = "_", fixed = TRUE) |> sapply(FUN = function(entry) entry[1])
target_type <- ifelse(target %in% c("NT", "non-targeting"), "non-targeting", "gene")
gRNA_odm_mod <- gRNA_odm |> mutate_feature_covariates(target = target, target_type = target_type)
save_odm(odm = gRNA_odm_mod, metadata_fp = gRNA_counts_metadata_fp)
}
# load data for ODM 1, and initialize
m_list <- readRDS(paste0(intermediate_files_dir, "matrix_list_1.rds"))
chip_counts_odm_fp <- paste0(experiment_1_dir_chip, "chip_counts.odm")
chip_counts_metadata_fp <- paste0(experiment_1_dir_chip, "metadata.rds")
gRNA_counts_odm_fp <- paste0(experiment_1_dir_gRNA, "gRNA_counts.odm")
gRNA_counts_metadata_fp <- paste0(experiment_1_dir_gRNA, "metadata.rds")
files_used_in_exp <- c("H2AZ.broadPeak", "H3K27Ac.broadPeak", "H3K27me3.broadPeak",
"H3K36me3.broadPeak", "H3K4me1.broadPeak", "H3K4me2.broadPeak",
"H3K4me3.broadPeak", "H3K79me2.broadPeak", "H3K9Ac.broadPeak",
"H3K9me1.broadPeak", "H3K9me3.broadPeak", "H4K20me1.broadPeak")
write_m_list(m_list = m_list,
chip_counts_odm_fp = chip_counts_odm_fp,
chip_counts_metadata_fp = chip_counts_metadata_fp,
gRNA_counts_odm_fp = gRNA_counts_odm_fp,
gRNA_counts_metadata_fp = gRNA_counts_metadata_fp,
files_used_in_exp = files_used_in_exp)
# load data for ODM 2, and initialize
m_list <- readRDS(paste0(intermediate_files_dir, "matrix_list_2.rds"))
chip_counts_odm_fp <- paste0(experiment_2_dir_chip, "chip_counts.odm")
chip_counts_metadata_fp <- paste0(experiment_2_dir_chip, "metadata.rds")
gRNA_counts_odm_fp <- paste0(experiment_2_dir_gRNA, "gRNA_counts.odm")
gRNA_counts_metadata_fp <- paste0(experiment_2_dir_gRNA, "metadata.rds")
all_chip_names <- m_list$atac_count |> row.names()
files_used_in_exp_2 <- all_chip_names[!(all_chip_names %in% files_used_in_exp)]
write_m_list(m_list = m_list,
chip_counts_odm_fp = chip_counts_odm_fp,
chip_counts_metadata_fp = chip_counts_metadata_fp,
gRNA_counts_odm_fp = gRNA_counts_odm_fp,
gRNA_counts_metadata_fp = gRNA_counts_metadata_fp,
files_used_in_exp = files_used_in_exp_2)
