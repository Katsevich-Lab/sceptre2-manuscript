labels = "auto")
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_s3/fig_s3.png")
ggsave(filename = to_save_fp, plot = fig, device = "png", scale = 1.1, width = 6.5, height = 5.5, dpi = 330)
# p1: no problems (no confounding, correct model specification)
make_qq_plot <- function(result_matrix, tit, w_legend = FALSE) {
p0 <- as.data.frame(result_matrix) |>
tidyr::pivot_longer(cols = c("p_theory", "p_camp", "p_perm"),
names_to = "Method", values_to = "p_value") |>
mutate(Method = fct_recode(Method, "NB regression (w/ covariates)" = "p_theory",
"SCEPTRE" = "p_camp",
"Permutation test" = "p_perm")) |>
mutate(Method = fct_relevel(Method, "SCEPTRE", after = Inf)) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.9) +
scale_x_reverse() +
scale_y_reverse() +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
my_theme +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit="inch",
override.aes = list(size = 2.5))) +
ggtitle(tit) +
scale_color_manual(values = my_cols)
if (w_legend) {
p <- p0 + theme(legend.position = c(0.7, 0.1),
legend.title = element_blank(),
legend.key.size = unit(0.35, 'cm'),
legend.margin = margin(t = -0.5, unit = 'cm')
)
} else {
p <- p0 + theme(legend.position = "none")
}
return(p)
}
p_a <- make_qq_plot(result_matrix = sim_res$sim_res_uncorrelated_correct_model$out_m,
tit = "Treatment unconfounded,\nGLM specified correctly", w_legend = TRUE)
p_b <- make_qq_plot(result_matrix = sim_res$sim_res_uncorrelated_misspec$out_m,
tit = "Treatment unconfounded,\nGLM specified incorrectly", w_legend = FALSE)
p_c <- make_qq_plot(result_matrix = sim_res$sim_res_correlated_corret_model$out_m,
tit = "Treatment confounded,\nGLM specified correctly", w_legend = FALSE)
p_d <- make_qq_plot(result_matrix = sim_res$sim_res_correlated_misspec$out_m,
tit = "Treatment confounded,\nGLM specified incorrectly", w_legend = FALSE)
fig <- plot_grid(p_a, p_b, p_c, p_d, nrow = 2,
labels = "auto")
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_s3/fig_s3.png")
ggsave(filename = to_save_fp, plot = fig, device = "png", scale = 1.1, width = 6.5, height = 5.5, dpi = 330)
# load functions and data
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/extra_analyses/")
sim_res <- readRDS(paste0(result_dir, "simulation_study_res.rds"))
# p1: no problems (no confounding, correct model specification)
make_qq_plot <- function(result_matrix, tit, w_legend = FALSE) {
p0 <- as.data.frame(result_matrix) |>
tidyr::pivot_longer(cols = c("p_theory", "p_camp", "p_perm"),
names_to = "Method", values_to = "p_value") |>
mutate(Method = fct_recode(Method, "NB regression (w/ covariates)" = "p_theory",
"SCEPTRE" = "p_camp",
"Permutation test" = "p_perm")) |>
mutate(Method = fct_relevel(Method, "SCEPTRE", after = Inf)) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.9) +
scale_x_reverse() +
scale_y_reverse() +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
my_theme +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit="inch",
override.aes = list(size = 2.5))) +
ggtitle(tit) +
scale_color_manual(values = my_cols)
if (w_legend) {
p <- p0 + theme(legend.position = c(0.7, 0.15),
legend.title = element_blank(),
legend.key.size = unit(0.35, 'cm'),
legend.margin = margin(t = -0.5, unit = 'cm')
)
} else {
p <- p0 + theme(legend.position = "none")
}
return(p)
}
p_a <- make_qq_plot(result_matrix = sim_res$sim_res_uncorrelated_correct_model$out_m,
tit = "Treatment unconfounded,\nGLM specified correctly", w_legend = TRUE)
p_b <- make_qq_plot(result_matrix = sim_res$sim_res_uncorrelated_misspec$out_m,
tit = "Treatment unconfounded,\nGLM specified incorrectly", w_legend = FALSE)
p_c <- make_qq_plot(result_matrix = sim_res$sim_res_correlated_corret_model$out_m,
tit = "Treatment confounded,\nGLM specified correctly", w_legend = FALSE)
p_d <- make_qq_plot(result_matrix = sim_res$sim_res_correlated_misspec$out_m,
tit = "Treatment confounded,\nGLM specified incorrectly", w_legend = FALSE)
fig <- plot_grid(p_a, p_b, p_c, p_d, nrow = 2,
labels = "auto")
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_s3/fig_s3.png")
ggsave(filename = to_save_fp, plot = fig, device = "png", scale = 1.1, width = 6.5, height = 5.5, dpi = 330)
library(tidyverse)
library(katlabutils)
library(cowplot)
library(ondisc)
# load functions and data
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
x <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_1_processed.rds"))
# load functions and data
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
.get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
result_dir
# load functions and data
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
undercover_res <- readRDS(paste0(result_dir,
"undercover_result_grp_1_0423_processed.rds")) |>
filter(n_nonzero_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_nonzero_control >= N_NONZERO_CONTROL_CUTOFF)
result_dir
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/undercover_grna_analysis/")
undercover_res <- readRDS(paste0(result_dir,
"undercover_result_grp_1_0423_processed.rds"))
head(undercover_res)
undercover_res$Method |> unique()
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/undercover_grna_analysis/")
undercover_res <- readRDS(paste0(result_dir,
"undercover_result_grp_1_0423_processed.rds")) |>
filter(n_nonzero_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_nonzero_control >= N_NONZERO_CONTROL_CUTOFF,
Method %in% c("SCEPTRE", "SCEPTRE (no covariates)", "NB regression (w/ covariates)")) |>
my_values <- my_cols[names(my_cols) %in% c("SCEPTRE", "SCEPTRE (no covariates)", "NB regression (w/ covariates)")]
# load functions and data
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/undercover_grna_analysis/")
undercover_res <- readRDS(paste0(result_dir,
"undercover_result_grp_1_0423_processed.rds")) |>
filter(n_nonzero_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_nonzero_control >= N_NONZERO_CONTROL_CUTOFF,
Method %in% c("SCEPTRE", "SCEPTRE (no covariates)", "NB regression (w/ covariates)"))
my_values <- my_cols[names(my_cols) %in% c("SCEPTRE", "SCEPTRE (no covariates)", "NB regression (w/ covariates)")]
get_plots_for_dataset <- function(df_sub, tit, print_legend, legend_position = c(0.45, 0.85)) {
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values,
drop = FALSE,
breaks = c("SCEPTRE",
"Seurat De",
"SCEPTRE (w/o covariates)",
"NB Regression"))
if (print_legend) {
p_qq <- p_qq +
my_theme +
theme(legend.title= element_blank(),
legend.position = legend_position,
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
} else {
p_qq <- p_qq + my_theme_no_legend
}
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 5 else 1)
p_bar <- n_bonf_rej |> ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
return(list(p_qq = p_qq, p_bar = p_bar))
}
# 1.
ifn_gama_plots <- get_plots_for_dataset(undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene"),
"Frangieh (IFN-\u03B3) neg. controls",
print_legend = FALSE)
# 2.
papa_plots <- get_plots_for_dataset(undercover_res |> filter(dataset == "papalexi_eccite_screen_gene"),
"Papalexi (gene) neg. controls",
print_legend = TRUE,
legend_position = c(0.38, 0.8))
fig <- cowplot::plot_grid(papa_plots$p_qq, papa_plots$p_bar,
ifn_gama_plots$p_qq, ifn_gama_plots$p_bar,
labels = c("a", "", "b", "", "c", "", "d", "", "e", "", "f", ""),
rel_widths = c(.75, 0.25),
ncol = 2, nrow = 2, align = "h")
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_s4/fig_s4.png")
ggsave(filename = to_save_fp, plot = fig, device = "png",
scale = 1.1, width = 4.0, height = 5, dpi = 330)
df_sub <- undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene")
tit <- "Frangieh (IFN-\u03B3) neg. controls"
head(df_sub)
tit
print_legend
print_legend = TRUE
legend_position = c(0.38, 0.8)
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values,
drop = FALSE,
breaks = c("SCEPTRE",
"Seurat De",
"SCEPTRE (w/o covariates)",
"NB Regression"))
if (print_legend) {
p_qq <- p_qq +
my_theme +
theme(legend.title= element_blank(),
legend.position = legend_position,
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
} else {
p_qq <- p_qq + my_theme_no_legend
}
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 5 else 1)
p_bar <- n_bonf_rej |> ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
p_qq
df_sub <- undercover_res |> filter(dataset == "papalexi_eccite_screen_gene"),
df_sub <- undercover_res |> filter(dataset == "papalexi_eccite_screen_gene")
tit
tit <- "Papalexi (gene) neg. controls"
print_legend = TRUE
legend_position = c(0.38, 0.8)
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values,
drop = FALSE,
breaks = c("SCEPTRE",
"Seurat De",
"SCEPTRE (w/o covariates)",
"NB Regression"))
p_qq  p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit)
p_qq
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values)
p_qq
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values)
if (print_legend) {
p_qq <- p_qq +
my_theme +
theme(legend.title= element_blank(),
legend.position = legend_position,
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
} else {
p_qq <- p_qq + my_theme_no_legend
}
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 5 else 1)
p_bar <- n_bonf_rej |> ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
# 1.
ifn_gama_plots <- get_plots_for_dataset(undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene"),
"Frangieh (IFN-\u03B3) neg. controls",
print_legend = FALSE)
# 2.
papa_plots <- get_plots_for_dataset(undercover_res |> filter(dataset == "papalexi_eccite_screen_gene"),
"Papalexi (gene) neg. controls",
print_legend = TRUE,
legend_position = c(0.38, 0.8))
fig <- cowplot::plot_grid(papa_plots$p_qq, papa_plots$p_bar,
ifn_gama_plots$p_qq, ifn_gama_plots$p_bar,
labels = c("a", "", "b", "", "c", "", "d", "", "e", "", "f", ""),
rel_widths = c(.75, 0.25),
ncol = 2, nrow = 2, align = "h")
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_s4/fig_s4.png")
ggsave(filename = to_save_fp, plot = fig, device = "png",
scale = 1.1, width = 4.0, height = 5, dpi = 330)
get_plots_for_dataset <- function(df_sub, tit, print_legend, legend_position = c(0.45, 0.85)) {
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values)
if (print_legend) {
p_qq <- p_qq +
my_theme +
theme(legend.title= element_blank(),
legend.position = legend_position,
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
} else {
p_qq <- p_qq + my_theme_no_legend
}
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 5 else 1)
p_bar <- n_bonf_rej |> ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
return(list(p_qq = p_qq, p_bar = p_bar))
}
# 1.
ifn_gama_plots <- get_plots_for_dataset(undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene"),
"Frangieh (IFN-\u03B3) neg. controls",
print_legend = FALSE)
# 2.
papa_plots <- get_plots_for_dataset(undercover_res |> filter(dataset == "papalexi_eccite_screen_gene"),
"Papalexi (gene) neg. controls",
print_legend = TRUE,
legend_position = c(0.38, 0.8))
papa_plots
fig <- cowplot::plot_grid(papa_plots$p_qq, papa_plots$p_bar,
ifn_gama_plots$p_qq, ifn_gama_plots$p_bar,
labels = c("a", "", "b", "", "c", "", "d", "", "e", "", "f", ""),
rel_widths = c(.75, 0.25),
ncol = 2, nrow = 2, align = "h")
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_s4/fig_s4.png")
ggsave(filename = to_save_fp, plot = fig, device = "png",
scale = 1.1, width = 4.0, height = 5, dpi = 330)
get_plots_for_dataset <- function(df_sub, tit, print_legend, legend_position = c(0.45, 0.85)) {
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values)
if (print_legend) {
p_qq <- p_qq +
my_theme +
theme(legend.title= element_blank(),
legend.position = legend_position,
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.1,
default.unit = "inch",
override.aes = list(size = 2.5)))
} else {
p_qq <- p_qq + my_theme_no_legend
}
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 5 else 1)
p_bar <- n_bonf_rej |> ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
return(list(p_qq = p_qq, p_bar = p_bar))
}
# 1.
ifn_gama_plots <- get_plots_for_dataset(undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene"),
"Frangieh (IFN-\u03B3) neg. controls",
print_legend = FALSE)
# 2.
papa_plots <- get_plots_for_dataset(undercover_res |> filter(dataset == "papalexi_eccite_screen_gene"),
"Papalexi (gene) neg. controls",
print_legend = TRUE,
legend_position = c(0.38, 0.8))
fig <- cowplot::plot_grid(papa_plots$p_qq, papa_plots$p_bar,
ifn_gama_plots$p_qq, ifn_gama_plots$p_bar,
labels = c("a", "", "b", "", "c", "", "d", "", "e", "", "f", ""),
rel_widths = c(.75, 0.25),
ncol = 2, nrow = 2, align = "h")
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_s4/fig_s4.png")
ggsave(filename = to_save_fp, plot = fig, device = "png",
scale = 1.1, width = 4.0, height = 5, dpi = 330)
# 2.
papa_plots <- get_plots_for_dataset(undercover_res |> filter(dataset == "papalexi_eccite_screen_gene"),
"Papalexi (gene) neg. controls",
print_legend = TRUE,
legend_position = c(0.38, 0.83))
fig <- cowplot::plot_grid(papa_plots$p_qq, papa_plots$p_bar,
ifn_gama_plots$p_qq, ifn_gama_plots$p_bar,
labels = c("a", "", "b", "", "c", "", "d", "", "e", "", "f", ""),
rel_widths = c(.75, 0.25),
ncol = 2, nrow = 2, align = "h")
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_s4/fig_s4.png")
ggsave(filename = to_save_fp, plot = fig, device = "png",
scale = 1.1, width = 4.0, height = 5, dpi = 330)
