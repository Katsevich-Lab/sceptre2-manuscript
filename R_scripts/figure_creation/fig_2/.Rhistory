get_plots_for_dataset <- function(df_sub, tit, print_legend, legend_position = c(0.45, 0.85)) {
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values,
drop = FALSE,
breaks = c("SCEPTRE",
"Seurat De",
"SCEPTRE (w/o covariates)",
"NB Regression"))
if (print_legend) {
p_qq <- p_qq +
my_theme +
theme(legend.title= element_blank(),
legend.position = legend_position,
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit="inch"))
} else {
p_qq <- p_qq + my_theme_no_legend
}
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
# breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 2 else 1)
p_bar <- n_bonf_rej |> ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
# scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
return(list(p_qq = p_qq, p_bar = p_bar))
}
# 1.
ifn_gama_plots <- get_plots_for_dataset(undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene"),
"Frangieh (IFN-\u03B3) neg. controls",
print_legend = FALSE)
# 2.
papa_plots <- get_plots_for_dataset(undercover_res |> filter(dataset == "papalexi_eccite_screen_gene"),
"Papalexi (gene) neg. controls",
print_legend = TRUE,
legend_position = c(0.38, 0.8))
fig <- cowplot::plot_grid(papa_plots$p_qq, papa_plots$p_bar,
ifn_gama_plots$p_qq, ifn_gama_plots$p_bar,
labels = c("a", "", "b", "", "c", "", "d", "", "e", "", "f", ""),
rel_widths = c(0.38, 0.12),
ncol = 2, nrow = 2, align = "h")
fig
get_plots_for_dataset <- function(df_sub, tit, print_legend, legend_position = c(0.45, 0.85)) {
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values,
drop = FALSE,
breaks = c("SCEPTRE",
"Seurat De",
"SCEPTRE (w/o covariates)",
"NB Regression"))
if (print_legend) {
p_qq <- p_qq +
my_theme +
theme(legend.title= element_blank(),
legend.position = legend_position,
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit="inch"))
} else {
p_qq <- p_qq + my_theme_no_legend
}
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
# breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 2 else 1)
p_bar <- n_bonf_rej |> ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
# scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
return(list(p_qq = p_qq, p_bar = p_bar))
}
get_plots_for_dataset <- function(df_sub, tit, print_legend, legend_position = c(0.45, 0.85)) {
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values,
drop = FALSE,
breaks = c("SCEPTRE",
"Seurat De",
"SCEPTRE (w/o covariates)",
"NB Regression"))
if (print_legend) {
p_qq <- p_qq +
my_theme +
theme(legend.title= element_blank(),
legend.position = legend_position,
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit="inch"))
} else {
p_qq <- p_qq + my_theme_no_legend
}
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
# breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 2 else 1)
p_bar <- n_bonf_rej |> ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
# scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
return(list(p_qq = p_qq, p_bar = p_bar))
}
# 1.
ifn_gama_plots <- get_plots_for_dataset(undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene"),
"Frangieh (IFN-\u03B3) neg. controls",
print_legend = FALSE)
# 2.
papa_plots <- get_plots_for_dataset(undercover_res |> filter(dataset == "papalexi_eccite_screen_gene"),
"Papalexi (gene) neg. controls",
print_legend = TRUE,
legend_position = c(0.38, 0.8))
ifn_gama_plots
# 1.
ifn_gama_plots <- get_plots_for_dataset(undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene"),
"Frangieh (IFN-\u03B3) neg. controls",
print_legend = FALSE)
# 2.
papa_plots <- get_plots_for_dataset(undercover_res |> filter(dataset == "papalexi_eccite_screen_gene"),
"Papalexi (gene) neg. controls",
print_legend = TRUE,
legend_position = c(0.38, 0.8))
ifn_gama_plots
papa_plots
# 1.
ifn_gama_plots <- get_plots_for_dataset(undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene"),
"Frangieh (IFN-\u03B3) neg. controls",
print_legend = FALSE)
ifn_gama_plots
df_sub <- undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene")
tit <- "Frangieh (IFN-\u03B3) neg. controls"
print_legend = FALSE
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values,
drop = FALSE,
breaks = c("SCEPTRE",
"Seurat De",
"SCEPTRE (w/o covariates)",
"NB Regression"))
if (print_legend) {
p_qq <- p_qq +
my_theme +
theme(legend.title= element_blank(),
legend.position = legend_position,
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit="inch"))
} else {
p_qq <- p_qq + my_theme_no_legend
}
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
n_bonf_rej
# breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 2 else 1)
p_bar <- n_bonf_rej |> ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
# scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
p_bar
# breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 2 else 1)
p_bar <- n_bonf_rej |>
ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
# scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
p_bar
get_plots_for_dataset <- function(df_sub, tit, print_legend, legend_position = c(0.45, 0.85)) {
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values,
drop = FALSE,
breaks = c("SCEPTRE",
"Seurat De",
"SCEPTRE (w/o covariates)",
"NB Regression"))
if (print_legend) {
p_qq <- p_qq +
my_theme +
theme(legend.title= element_blank(),
legend.position = legend_position,
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit="inch"))
} else {
p_qq <- p_qq + my_theme_no_legend
}
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
# breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 2 else 1)
p_bar <- n_bonf_rej |>
ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
# scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
return(list(p_qq = p_qq, p_bar = p_bar))
}
# 1.
ifn_gama_plots <- get_plots_for_dataset(undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene"),
"Frangieh (IFN-\u03B3) neg. controls",
print_legend = FALSE)
# 2.
papa_plots <- get_plots_for_dataset(undercover_res |> filter(dataset == "papalexi_eccite_screen_gene"),
"Papalexi (gene) neg. controls",
print_legend = TRUE,
legend_position = c(0.38, 0.8))
ifn_gama_plots
papa_plots
fig <- cowplot::plot_grid(papa_plots$p_qq, papa_plots$p_bar,
ifn_gama_plots$p_qq, ifn_gama_plots$p_bar,
labels = c("a", "", "b", "", "c", "", "d", "", "e", "", "f", ""),
rel_widths = c(0.38, 0.12),
ncol = 2, nrow = 2, align = "h")
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_s2/r_output.png")
ggsave(filename = to_save_fp, plot = fig, device = "png",
scale = 1.05, width = 4, height = 5, dpi = 330)
library(tidyverse)
library(katlabutils)
library(cowplot)
library(ondisc)
bio_rep_cols <- c("R1" = "darkred", "R2" = "darkblue", "R3" = "darkgreen")
bio_rep_fills <-  c("R1" = "lightcoral", "R2" = "cornflowerblue", "R3" = "palegreen3")
dataset_cols <- c("frangieh_co_culture_gene" = "purple",
"frangieh_control_gene" = "royalblue1",
"frangieh_ifn_gamma_gene" = "lightcoral",
"papalexi_eccite_screen_gene" = "palegreen3")
# load functions and data
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
undercover_res <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_1_processed.rds")) |>
filter(n_nonzero_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_nonzero_control >= N_NONZERO_CONTROL_CUTOFF)
undercover_res <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_1_processed.rds")) |>
filter(n_nonzero_treatment >= 10,
n_nonzero_control >= 10)
resampling_res <- readRDS(paste0(result_dir, "resampling_distributions/seurat_resampling_at_scale_processed.rds")) |>
mutate(p_rat = p_emp/p_value)
fisher_exact_p <- readRDS(paste0(result_dir, "extra_analyses/papalexi_grna_confounding_tests.rds"))
nb_gof_tests <- readRDS(paste0(result_dir, "extra_analyses/goodness_of_fit_tests.rds")) |>
mutate(theta = NULL)
##########
# PANNEL c
##########
# filter for seurat and NB reg (with cov) on Frangieh IFN gamma; add column for pass stringent QC
my_labels <- c("Seurat De (w/ strict QC)", "Seurat De (w/o strict QC)", "NB Reg (w/ strict QC)", "NB Reg (w/o strict QC)")
undercover_res_sub <- undercover_res |>
filter(method %in% c("seurat_de", "nb_regression_w_covariates"),
dataset == "frangieh_ifn_gamma_gene") |>
mutate(pass_stringent_qc = (n_nonzero_treatment >= 30 & n_nonzero_control >= 30),
Method = fct_recode(Method, "NB Reg"= "Nb Regression W Covariates")) |>
mutate(Method = paste0(Method, ifelse(pass_stringent_qc, " (w/ strict QC)", " (w/o strict QC)"))) |>
mutate(Method = fct_relevel(Method,
my_labels))
# compute the minimum number across method-QC status pairs
n_to_sample <- undercover_res_sub |>
group_by(Method) |>
summarize(count = n()) |>
pull(count) |> min()
# downsample
set.seed(1)
to_plot_c <- undercover_res_sub |>
group_by(Method) |>
sample_n(n_to_sample)
p_c <- ggplot(data = to_plot_c, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.8) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
my_theme +
theme(legend.title= element_blank(),
legend.position = c(0.32, 0.75),
legend.margin=margin(t = -0.5, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.15,
default.unit = "inch")) +
scale_color_manual(values = my_cols[names(my_cols) %in% my_labels]) +
ggtitle("Frangieh IFN-\u03B3 negative control pairs")
p_c
N_NONZERO_TREATMENT_CUTOFF
undercover_res <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_1_processed.rds")) |>
filter(n_nonzero_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_nonzero_control >= N_NONZERO_CONTROL_CUTOFF)
my_labels <- c("Seurat De (w/ strict QC)", "Seurat De (w/o strict QC)", "NB Reg (w/ strict QC)", "NB Reg (w/o strict QC)")
undercover_res_sub <- undercover_res |>
filter(method %in% c("seurat_de", "nb_regression_w_covariates"),
dataset == "frangieh_ifn_gamma_gene") |>
mutate(pass_stringent_qc = (n_nonzero_treatment >= 30 & n_nonzero_control >= 30),
Method = fct_recode(Method, "NB Reg"= "Nb Regression W Covariates")) |>
mutate(Method = paste0(Method, ifelse(pass_stringent_qc, " (w/ strict QC)", " (w/o strict QC)"))) |>
mutate(Method = fct_relevel(Method,
my_labels))
# compute the minimum number across method-QC status pairs
n_to_sample <- undercover_res_sub |>
group_by(Method) |>
summarize(count = n()) |>
pull(count) |> min()
# downsample
set.seed(1)
to_plot_c <- undercover_res_sub |>
group_by(Method) |>
sample_n(n_to_sample)
p_c <- ggplot(data = to_plot_c, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.8) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
my_theme +
theme(legend.title= element_blank(),
legend.position = c(0.32, 0.75),
legend.margin=margin(t = -0.5, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.15,
default.unit = "inch")) +
scale_color_manual(values = my_cols[names(my_cols) %in% my_labels]) +
ggtitle("Frangieh IFN-\u03B3 negative control pairs")
p_c
##########
# PANNEL d
##########
# load papalexi data
response_odm <- lowmoi::load_dataset_modality("papalexi/eccite_screen/gene")
grna_odm <- lowmoi::load_dataset_modality("papalexi/eccite_screen/grna_assignment")
# find a gRNA group that is strongly associated with bio_rep
grna_assignments <- lowmoi:::get_grna_assignments_via_max_op(grna_odm)
nt_cells <- grepl(pattern = "^NTg*", x = grna_assignments)
nt_grna_assignments <- grna_assignments[nt_cells]
unique_nt_grnas <- unique(nt_grna_assignments)
biorep_vect <- response_odm |>
get_cell_covariates() |>
pull(bio_rep)
biorep_vect_nt <- biorep_vect[nt_cells]
my_nt_grna <- names(which.min(fisher_exact_p))
grna_binary_vect <- as.integer(my_nt_grna == nt_grna_assignments)
cont_table <- as.matrix(table(biorep_vect_nt, grna_binary_vect))
prop_table <- cont_table |>
prop.table(margin = 1) |>
as.data.frame() |>
filter(grna_binary_vect == 1) |>
select(-grna_binary_vect, freq = Freq, bio_rep = biorep_vect_nt) |>
mutate(bio_rep = fct_recode(bio_rep, "R1" = "rep_1", "R2" = "rep_2", "R3" = "rep_3"))
undercover_res_sub <- undercover_res |>
filter(method %in% c("nb_regression_w_covariates", "nb_regression_no_covariates"),
dataset == "papalexi_eccite_screen_gene") |>
mutate(Method = fct_recode(Method,
"NB Reg (w/ covariates)" = "Nb Regression W Covariates",
"NB Reg (w/o covariates)" = "Nb Regression No Covariates"))
my_labels <- c("NB Reg (w/o covariates)", "NB Reg (w/ covariates)", "Seurat De")
p_e <- undercover_res_sub |>
ggplot(aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.8) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
my_theme +
theme(legend.title= element_blank(),
legend.position = c(0.32, 0.75),
legend.margin=margin(t = -0.5, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.15,
default.unit = "inch")) +
scale_color_manual(values = my_cols[names(my_cols) %in% my_labels]) +
ggtitle("Papalexi (gene) negative control pairs")
p_e
undercover_res <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_1_processed.rds")) |>
filter(n_nonzero_treatment >= 10,
n_nonzero_control >= 10)
###########
# PANNEL E
###########
undercover_res_sub <- undercover_res |>
filter(method %in% c("nb_regression_w_covariates", "nb_regression_no_covariates"),
dataset == "papalexi_eccite_screen_gene") |>
mutate(Method = fct_recode(Method,
"NB Reg (w/ covariates)" = "Nb Regression W Covariates",
"NB Reg (w/o covariates)" = "Nb Regression No Covariates"))
my_labels <- c("NB Reg (w/o covariates)", "NB Reg (w/ covariates)", "Seurat De")
p_e <- undercover_res_sub |>
ggplot(aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.8) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
my_theme +
theme(legend.title= element_blank(),
legend.position = c(0.32, 0.75),
legend.margin=margin(t = -0.5, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.15,
default.unit = "inch")) +
scale_color_manual(values = my_cols[names(my_cols) %in% my_labels]) +
ggtitle("Papalexi (gene) negative control pairs")
p_e
