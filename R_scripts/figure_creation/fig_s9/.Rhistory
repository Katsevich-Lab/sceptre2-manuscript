my_cols <- c("Weissman Method" = "purple3",
"Weissman Meth." = "purple3",
"KS test" = "purple3",
"Schraivogel Method" = "aquamarine4",
"Schraivogel Meth." = "aquamarine4",
"MAST" = "aquamarine4",
"Mimosca" = "palevioletred3",
"MIMOSCA" = "palevioletred3",
"Liscovitch Method" = "navy",
"Liscovitch Meth." = "navy",
"t-test" = "navy",
"Seurat De" = "dodgerblue3",
"Seurat De (w/ strict QC)" = "dodgerblue4",
"Seurat De (w/o strict QC)" = "dodgerblue",
"NB Reg (w/o covariates)" = "darkgoldenrod3",
"NB Reg (w/ covariates)" = "darkgoldenrod4",
"NB Regression" = "goldenrod3",
"SCEPTRE" = "firebrick3",
"Sceptre" = "firebrick3",
"SCEPTRE (w/o covariates)" = "dodgerblue",
"Truth" = "slategray4")
my_methods <- c("Liscovitch Method", "Schraivogel Method", "Mimosca", "Weissman Method", "Seurat De", "Sceptre", "Truth")
my_values <- my_cols[names(my_cols) %in% my_methods]
results <- results |>
mutate(Method = factor(Method, levels = my_methods))
par(mfrow = c(1, 1), mar = c(5, 4, 4, 2) + 0.1, oma = c(0, 0, 0, 0))
options(repr.plot.width = 70, repr.plot.height = 12)
p_rejections <- results |>
mutate(Method = factor(Method, levels = my_methods)) |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000)) +
scale_fill_manual(values = my_values) +
theme(legend.position = "bottom",
legend.title = element_blank(),legend.text = element_text(size = 18)) +
labs(x = "Number of rejections",
y = "TF")
p_fdp <- results |>
ggplot(aes(x = fdp, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
geom_vline(xintercept = 0.05, linetype = "dashed") +
scale_x_continuous(limits = c(0,1)) +
scale_fill_manual(values = my_values) +
theme(legend.position = "none") +
labs(x = "FDP",
y = NULL)
p_power <- results |>
ggplot(aes(x = power, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_fill_manual(values = my_values) +
theme(legend.position = "") +
labs(x = "Power",
y = NULL)
p_odds_ratios <- results |>
ggplot(aes(x = odds_ratio, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(breaks = c(0, 1, 2, 3, 4)) +
scale_fill_manual(values = my_values) +
theme(legend.position = "none") +
labs(x = "Odds ratio",
y = NULL)
p_pvalues <- results |>
ggplot(aes(x = pvalue, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
geom_vline(xintercept = 0.05, linetype = "dashed") +
scale_x_continuous(trans = katlabutils::revlog_trans(),
breaks = c(1e-20, 1e-40, 1e-60)) +
scale_fill_manual(values = my_values) +
theme(legend.position = "") +
labs(x = "p-value",
y = NULL)
p_rejections
p_rejections
p_fdp
# read the results
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
source("~/.Rprofile")
library(dplyr)
library(tidyr)
library(ggplot2)
library(cowplot)
library(conflicted)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::filter)
# analysis parameteres
N_NONZERO_CNTRL_THRESH <- 7
N_NONZERO_TRT_THRESH <- 7
q <- 0.1
#add file path of figure here
figure_file_path = ""
# read the results
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
method_results_fp <- paste0(
sceptre2_dir,
"results/discovery_analyses/discovery_results_0423_processed.rds"
)
TF_targets_fp <- paste0(
sceptre2_dir,
"results/discovery_analyses/TF_targets_papalexi_chipseq.rds"
)
method_results <- readRDS(method_results_fp) |> as_tibble()
TF_targets <- readRDS(TF_targets_fp) |> unique()
# join method results with TF targets, apply BH at level q
method_results <- method_results |>
filter(dataset_rename == "Papalexi Eccite Screen Gene",
n_control >= N_NONZERO_CNTRL_THRESH,
n_treatment >= N_NONZERO_TRT_THRESH) |>
rename(gene = response_id, TF = grna_group) |>
inner_join(TF_targets, by = c("gene", "TF")) |>
group_by(TF, Method) |>
#  group_by(Method) |>
mutate(rejection = p.adjust(p_value, method = "fdr") <= q) |>
ungroup()
method_results
head(method_results_fp)
method_results <- readRDS(method_results_fp) |> as_tibble()
head(method_results)
method_results
head(method_results)
method_results$Method |> unique()
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
# shared script
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
# analysis parameteres
N_NONZERO_CNTRL_THRESH <- 7
N_NONZERO_TRT_THRESH <- 7
q <- 0.1
#add file path of figure here
figure_file_path = ""
# read the results
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
method_results_fp <- paste0(
sceptre2_dir,
"results/discovery_analyses/discovery_results_0423_processed.rds"
)
TF_targets_fp <- paste0(
sceptre2_dir,
"results/discovery_analyses/TF_targets_papalexi_chipseq.rds"
)
method_results <- readRDS(method_results_fp) |> as_tibble()
TF_targets <- readRDS(TF_targets_fp) |> unique()
# join method results with TF targets, apply BH at level q
method_results <- method_results |>
filter(dataset_rename == "Papalexi Eccite Screen Gene",
n_control >= N_NONZERO_CNTRL_THRESH,
n_treatment >= N_NONZERO_TRT_THRESH) |>
rename(gene = response_id, TF = grna_group) |>
inner_join(TF_targets, by = c("gene", "TF")) |>
group_by(TF, Method) |>
#  group_by(Method) |>
mutate(rejection = p.adjust(p_value, method = "fdr") <= q) |>
ungroup()
# version of Fisher test that returns NA (rather than throwing an error)
# in degenerate cases
my.fisher.test <- function(x, y) {
if(length(unique(x)) == 1 | length(unique(y)) == 1){
list(p.value = NA, estimate = NA)
} else{
fisher.test(x, y, alternative = "greater")
}
}
results <- method_results |>
group_by(TF, Method) |>
summarise(num_rejections = sum(rejection),
odds_ratio = my.fisher.test(target, rejection)$estimate,
pvalue = my.fisher.test(target, rejection)$p.value,
fdp = sum(rejection & !target)/max(1, sum(rejection)),
power = sum(rejection & target)/sum(target),
.groups = "drop") |>
bind_rows(TF_targets |>
group_by(TF) |>
summarise(num_rejections = sum(target)) |>
mutate(Method = "Truth", odds_ratio = NA, pvalue = NA))
results
results
head(results)
results <- method_results |>
group_by(TF, Method) |>
summarise(num_rejections = sum(rejection),
odds_ratio = my.fisher.test(target, rejection)$estimate,
pvalue = my.fisher.test(target, rejection)$p.value,
fdp = sum(rejection & !target)/max(1, sum(rejection)),
power = sum(rejection & target)/sum(target),
.groups = "drop") |>
bind_rows(TF_targets |>
group_by(TF) |>
summarise(num_rejections = sum(target)) |>
mutate(Method = "Truth", odds_ratio = NA, pvalue = NA))
results
p_rejections <- results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000)) +
# scale_fill_manual(values = my_values) +
theme(legend.position = "bottom",
legend.title = element_blank(),legend.text = element_text(size = 18)) +
labs(x = "Number of rejections",
y = "TF")
p_rejections
my_values
my_methods
my_cols
source(shared_fig_script)
# shared script
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
my_values
my_cols
p_rejections <- results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000)) +
scale_fill_manual(values = my_values) +
theme(legend.position = "bottom",
legend.title = element_blank(),legend.text = element_text(size = 18)) +
labs(x = "Number of rejections",
y = "TF")
p_rejections <- results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000)) +
scale_fill_manual(values = my_cols) +
theme(legend.position = "bottom",
legend.title = element_blank(),legend.text = element_text(size = 18)) +
labs(x = "Number of rejections",
y = "TF")
p_rejections
my_cols
my_methods <- c("KS test", "MAST", "MIMOSCA", "t-test", "Seurat-Wilcox", "Seurat-NB", "SCEPTRE")
my_values <- my_cols[names(my_cols) %in% my_methods]
my_values
my_values <- c(my_cols[names(my_cols) %in% my_methods], Truth = "grey50")
my_values
my_values <- c(my_cols[names(my_cols) %in% my_methods])
p_rejections <- results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000)) +
scale_fill_manual(values = my_values) +
theme(legend.position = "bottom",
legend.title = element_blank(), legend.text = element_text(size = 18)) +
labs(x = "Number of rejections",
y = "TF")
p_rejections
p_rejections
my_values
results
num_rejections
results
results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method))
results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black")
results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000))
results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000)) +
scale_fill_manual(values = my_values)
my_values
results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000)) +
scale_fill_manual(values = my_values)
results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000)) +
scale_fill_manual(values = my_values)
results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000))
my_values
source("~/.Rprofile")
library(lowmoi)
library(tidyverse)
conflicts_prefer(dplyr::filter)
sceptre2_results_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
sample_size_df <- readRDS(paste0(sceptre2_results_dir, "dataset_sample_sizes/n_nonzero_cells_per_grna.rds"))
sceptre2_results_dir
# discovery result
discovery_res <- readRDS(paste0(sceptre2_results_dir, "discovery_analyses/disc_analysis_sceptre_0423.rds"))
head(discovery_res)
process_undercover_result
discovery_res_processed <- suppressWarnings(process_undercover_result(discovery_res, sample_size_df))
discovery_res_processed <- suppressWarnings(process_pc_result(discovery_res, sample_size_df))
head(discovery_res_processed)
discovery_res_processed
discovery_res_processed
saveRDS(discovery_res_processed, paste0(sceptre2_results_dir, "discovery_analyses/disc_analysis_sceptre_0423_processed.rds"))
head(discovery_res_processed)
# discovery result
discovery_res <- readRDS(paste0(sceptre2_results_dir, "discovery_analyses/discovery_results_0423.rds"))
head(discovery_res)
discovery_res_processed <- suppressWarnings(process_pc_result(discovery_res, sample_size_df))
saveRDS(discovery_res_processed, paste0(sceptre2_results_dir, "discovery_analyses/discovery_results_0423_processed.rds"))
head(discovery_res_processed)
source("~/.Rprofile")
library(dplyr)
library(tidyr)
library(ggplot2)
library(cowplot)
library(conflicted)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::filter)
# shared script
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
my_methods <- c("KS test", "MAST", "MIMOSCA", "t-test", "Seurat-Wilcox", "Seurat-NB", "SCEPTRE")
my_values <- c(my_cols[names(my_cols) %in% my_methods])
# analysis parameteres
N_NONZERO_CNTRL_THRESH <- 7
N_NONZERO_TRT_THRESH <- 7
q <- 0.1
#add file path of figure here
figure_file_path = ""
# read the results
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
method_results_fp <- paste0(
sceptre2_dir,
"results/discovery_analyses/discovery_results_0423_processed.rds"
)
TF_targets_fp <- paste0(
sceptre2_dir,
"results/discovery_analyses/TF_targets_papalexi_chipseq.rds"
)
method_results <- readRDS(method_results_fp) |> as_tibble()
TF_targets <- readRDS(TF_targets_fp) |> unique()
# join method results with TF targets, apply BH at level q
method_results <- method_results |>
filter(dataset_rename == "Papalexi Eccite Screen Gene",
n_control >= N_NONZERO_CNTRL_THRESH,
n_treatment >= N_NONZERO_TRT_THRESH) |>
rename(gene = response_id, TF = grna_group) |>
inner_join(TF_targets, by = c("gene", "TF")) |>
group_by(TF, Method) |>
#  group_by(Method) |>
mutate(rejection = p.adjust(p_value, method = "fdr") <= q) |>
ungroup()
# version of Fisher test that returns NA (rather than throwing an error)
# in degenerate cases
my.fisher.test <- function(x, y) {
if(length(unique(x)) == 1 | length(unique(y)) == 1){
list(p.value = NA, estimate = NA)
} else{
fisher.test(x, y, alternative = "greater")
}
}
results <- method_results |>
group_by(TF, Method) |>
summarise(num_rejections = sum(rejection),
odds_ratio = my.fisher.test(target, rejection)$estimate,
pvalue = my.fisher.test(target, rejection)$p.value,
fdp = sum(rejection & !target)/max(1, sum(rejection)),
power = sum(rejection & target)/sum(target),
.groups = "drop") |>
bind_rows(TF_targets |>
group_by(TF) |>
summarise(num_rejections = sum(target)) |>
mutate(Method = "Truth", odds_ratio = NA, pvalue = NA))
method_results
source("~/.Rprofile")
library(dplyr)
library(tidyr)
library(ggplot2)
library(cowplot)
library(conflicted)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::filter)
# shared script
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
my_methods <- c("KS test", "MAST", "MIMOSCA", "t-test", "Seurat-Wilcox", "Seurat-NB", "SCEPTRE")
my_values <- c(my_cols[names(my_cols) %in% my_methods])
my_methods
my_values
# analysis parameteres
N_NONZERO_CNTRL_THRESH <- 7
N_NONZERO_TRT_THRESH <- 7
q <- 0.1
#add file path of figure here
figure_file_path = ""
# read the results
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
method_results_fp <- paste0(
sceptre2_dir,
"results/discovery_analyses/discovery_results_0423_processed.rds"
)
TF_targets_fp <- paste0(
sceptre2_dir,
"results/discovery_analyses/TF_targets_papalexi_chipseq.rds"
)
method_results_fp
TF_targets_fp
method_results <- readRDS(method_results_fp) |> as_tibble()
head(method_results)
TF_targets <- readRDS(TF_targets_fp) |> unique()
method_results |>
filter(dataset_rename == "Papalexi Eccite Screen Gene",
n_control >= N_NONZERO_CNTRL_THRESH,
n_treatment >= N_NONZERO_TRT_THRESH)
method_results$dataset_rename |> unique()
method_results |>
filter(dataset_rename == "Papalexi (Gene)",
n_control >= N_NONZERO_CNTRL_THRESH,
n_treatment >= N_NONZERO_TRT_THRESH)
method_results |>
filter(dataset_rename == "Papalexi (Gene)",
n_control >= N_NONZERO_CNTRL_THRESH,
n_treatment >= N_NONZERO_TRT_THRESH) |>
rename(gene = response_id, TF = grna_group)
# join method results with TF targets, apply BH at level q
method_results <- method_results |>
filter(dataset_rename == "Papalexi (Gene)",
n_control >= N_NONZERO_CNTRL_THRESH,
n_treatment >= N_NONZERO_TRT_THRESH) |>
rename(gene = response_id, TF = grna_group) |>
inner_join(TF_targets, by = c("gene", "TF")) |>
group_by(TF, Method) |>
#  group_by(Method) |>
mutate(rejection = p.adjust(p_value, method = "fdr") <= q) |>
ungroup()
method_results
# version of Fisher test that returns NA (rather than throwing an error)
# in degenerate cases
my.fisher.test <- function(x, y) {
if(length(unique(x)) == 1 | length(unique(y)) == 1){
list(p.value = NA, estimate = NA)
} else{
fisher.test(x, y, alternative = "greater")
}
}
results <- method_results |>
group_by(TF, Method) |>
summarise(num_rejections = sum(rejection),
odds_ratio = my.fisher.test(target, rejection)$estimate,
pvalue = my.fisher.test(target, rejection)$p.value,
fdp = sum(rejection & !target)/max(1, sum(rejection)),
power = sum(rejection & target)/sum(target),
.groups = "drop") |>
bind_rows(TF_targets |>
group_by(TF) |>
summarise(num_rejections = sum(target)) |>
mutate(Method = "Truth", odds_ratio = NA, pvalue = NA))
results
p_rejections <- results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000)) +
scale_fill_manual(values = my_values) +
theme(legend.position = "bottom",
legend.title = element_blank(), legend.text = element_text(size = 18)) +
labs(x = "Number of rejections",
y = "TF")
p_rejections
my_values
p_odds_ratios <- results |>
ggplot(aes(x = odds_ratio, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
geom_vline(xintercept = 1, linetype = "dashed") +
scale_x_continuous(breaks = c(0, 1, 2, 3, 4)) +
scale_fill_manual(values = my_values) +
theme(legend.position = "none") +
labs(x = "Odds ratio",
y = NULL)
p_odds_ratios
my_values
p_pvalues <- results |>
ggplot(aes(x = pvalue, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
geom_vline(xintercept = 0.05, linetype = "dashed") +
scale_x_continuous(trans = katlabutils::revlog_trans(),
breaks = c(1e-20, 1e-40, 1e-60)) +
scale_fill_manual(values = my_values) +
theme(legend.position = "") +
labs(x = "p-value",
y = NULL)
p_pvalues
p_pvalues <- results |>
ggplot(aes(x = pvalue, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
geom_vline(xintercept = 0.05, linetype = "dashed") +
scale_x_continuous(trans = katlabutils::revlog_trans(),
breaks = c(1e-20, 1e-40, 1e-60)) +
scale_fill_manual(values = my_values) +
theme(legend.position = "") +
labs(x = "p-value",
y = NULL)
p_pvalues
p_rejections
p_rejections <- results |>
ggplot(aes(x = num_rejections, y = TF, fill = Method)) +
geom_col(position = "dodge", color = "black") +
scale_x_continuous(trans = "log10", breaks = c(1, 10, 100, 1000)) +
scale_fill_manual(values = my_values) +
theme(legend.position = "bottom",
legend.title = element_blank()) +
labs(x = "Number of rejections",
y = "TF")
p_rejections
