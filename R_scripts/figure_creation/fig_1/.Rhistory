p <- p0 + theme(legend.position = "none")
}
return(p)
}
p_a <- make_qq_plot(result_matrix = sim_res$sim_res_uncorrelated_correct_model$out_m,
tit = "Treatment unconfounded,\nGLM specified correctly", w_legend = TRUE)
p_b <- make_qq_plot(result_matrix = sim_res$sim_res_uncorrelated_misspec$out_m,
tit = "Treatment unconfounded,\nGLM specified incorrectly", w_legend = FALSE)
p_c <- make_qq_plot(result_matrix = sim_res$sim_res_correlated_corret_model$out_m,
tit = "Treatment confounded,\nGLM specified correctly", w_legend = FALSE)
p_d <- make_qq_plot(result_matrix = sim_res$sim_res_correlated_misspec$out_m,
tit = "Treatment confounded,\nGLM specified incorrectly", w_legend = FALSE)
fig <- plot_grid(p_a, p_b, p_c, p_d, nrow = 2,
labels = "auto")
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_s3/fig_s3.png")
ggsave(filename = to_save_fp, plot = fig, device = "png", scale = 1.1, width = 6.5, height = 5.5, dpi = 330)
library(tidyverse)
library(katlabutils)
library(cowplot)
library(ondisc)
# load functions and data
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
undercover_res <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_1_processed.rds")) |>
filter(n_nonzero_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_nonzero_control >= N_NONZERO_CONTROL_CUTOFF,
method %in% c("sceptre", "sceptre_no_covariates", "nb_regression_w_covariates")) |>
mutate(Method = fct_recode(Method,
"SCEPTRE" = "Sceptre",
"SCEPTRE (w/o covariates)" = "Sceptre No Covariates",
"NB Regression" = "Nb Regression W Covariates"))
my_values <- my_cols[names(my_cols) %in% c("SCEPTRE", "SCEPTRE (w/o covariates)", "NB Regression")]
get_plots_for_dataset <- function(df_sub, tit, print_legend, legend_position = c(0.45, 0.85)) {
p_qq <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle(tit) +
scale_color_manual(values = my_values,
drop = FALSE,
breaks = c("SCEPTRE",
"Seurat De",
"SCEPTRE (w/o covariates)",
"NB Regression"))
if (print_legend) {
p_qq <- p_qq +
my_theme +
theme(legend.title= element_blank(),
legend.position = legend_position,
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
} else {
p_qq <- p_qq + my_theme_no_legend
}
n_bonf_rej <- df_sub |>
compute_n_bonf_rejections()
max_reject <- max(n_bonf_rej$n_reject)
n_bonf_rej <- n_bonf_rej |>
mutate(n_reject = ifelse(n_reject == 0, max_reject/50, n_reject))
breaks_v <-  seq(0, max_reject, by = if (max_reject >= 7) 5 else 1)
p_bar <- n_bonf_rej |> ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
ylab("N Bonferoni rejections") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank(),
plot.margin = margin(t = 5.5, r = 5.5, b = 5.5, l = 5.5, unit = "pt")) +
scale_y_continuous(breaks = breaks_v, expand = c(0, 0)) +
ggtitle("") +
scale_fill_manual(values = my_values)
return(list(p_qq = p_qq, p_bar = p_bar))
}
# 1.
ifn_gama_plots <- get_plots_for_dataset(undercover_res |>
filter(dataset == "frangieh_ifn_gamma_gene"),
"Frangieh (IFN-\u03B3) neg. controls",
print_legend = FALSE)
# 2.
papa_plots <- get_plots_for_dataset(undercover_res |> filter(dataset == "papalexi_eccite_screen_gene"),
"Papalexi (gene) neg. controls",
print_legend = TRUE,
legend_position = c(0.38, 0.8))
fig <- cowplot::plot_grid(papa_plots$p_qq, papa_plots$p_bar,
ifn_gama_plots$p_qq, ifn_gama_plots$p_bar,
labels = c("a", "", "b", "", "c", "", "d", "", "e", "", "f", ""),
rel_widths = c(.75, 0.25),
ncol = 2, nrow = 2, align = "h")
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_s4/fig_s4.png")
ggsave(filename = to_save_fp, plot = fig, device = "png",
scale = 1.1, width = 4.0, height = 5, dpi = 330)
library(ggplot2)
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
correlated_sim_res <- readRDS(paste0(result_dir, "extra_analyses/correlated_sim_result.rds"))
result_dir
correlated_sim_res <- readRDS(paste0(result_dir, "extra_analyses/simulation_study_res.rds"))
correlated_sim_res |> head()
correlated_sim_res$sim_res_correlated_corret_model$resamp_dist |> head()
sim_res <- readRDS(paste0(result_dir, "extra_analyses/simulation_study_res.rds"))
correlated_sim_res <- sim_res$sim_res_correlated_corret_model
z_star <- correlated_sim_res$resamp_dist$camp_star
correlated_sim_res
sim_res <- readRDS(paste0(result_dir, "extra_analyses/simulation_study_res.rds"))
correlated_sim_res <- sim_res$sim_res_correlated_corret_model
correlated_sim_res
correlated_sim_res$out_m
z_star <- correlated_sim_res$resamp_dist$camp_star
p_val <- correlated_sim_res$out_m[1,"p_camp"]
z_star
p_val
density_df <- data.frame(z = correlated_sim_res$resamp_dist$camp_null)
p <- ggplot() + geom_histogram(aes(x = z, y = after_stat(density)),
data = density_df,  color = "black",
fill = "grey85", bins = 20) +
my_theme +
scale_y_continuous(expand = expansion(mult = c(0.0, .01))) +
theme(axis.ticks.x =  element_blank(),
axis.title.y =  element_blank(),
axis.text.y =  element_blank(),
axis.ticks.y =  element_blank()) +
geom_vline(xintercept = z_star, col = "purple", linewidth = 1) +
annotate("rect", xmin = z_star, xmax = Inf,
ymin = 0, ymax = Inf, fill = "purple", alpha = 0.15) +
annotate("rect", xmin = -Inf, xmax = -z_star,
ymin = 0, ymax = Inf, fill = "purple", alpha = 0.15) +
xlab("Null z-scores") +
xlim(c(-3.5, 3.5))
p
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
sim_res <- readRDS(paste0(result_dir, "extra_analyses/simulation_study_res.rds"))
correlated_sim_res <- sim_res$sim_res_correlated_corret_model
correlated_sim_res
library(ggplot2)
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
sim_res <- readRDS(paste0(result_dir, "extra_analyses/simulation_study_res.rds"))
correlated_sim_res <- sim_res$sim_res_correlated_corret_model
z_star <- correlated_sim_res$resamp_dist$camp_star
p_val <- correlated_sim_res$out_m[1,"p_camp"]
z_star
p_val
z_null <- correlated_sim_res$resamp_dist$camp_null
density_df <- data.frame(z = z_null)
density_df
z_null
max(z_null)
min(z_null)
p <- ggplot() + geom_histogram(aes(x = z, y = after_stat(density)),
data = density_df,  color = "black",
fill = "grey85", bins = 20) +
my_theme +
scale_y_continuous(expand = expansion(mult = c(0.0, .01))) +
theme(axis.ticks.x =  element_blank(),
axis.title.y =  element_blank(),
axis.text.y =  element_blank(),
axis.ticks.y =  element_blank()) +
geom_vline(xintercept = z_star, col = "purple", linewidth = 1) +
annotate("rect", xmin = z_star, xmax = Inf,
ymin = 0, ymax = Inf, fill = "purple", alpha = 0.15) +
annotate("rect", xmin = -Inf, xmax = -z_star,
ymin = 0, ymax = Inf, fill = "purple", alpha = 0.15) +
xlab("Null z-scores") +
xlim(c(-3.5, 3.5))
p
p
ggplot() + geom_histogram(aes(x = z, y = after_stat(density)),
data = density_df,  color = "black",
fill = "grey85", bins = 20)
ggplot() + geom_histogram(aes(x = z, y = after_stat(density)),
data = density_df,  color = "black",
fill = "grey85", bins = 20) +
my_theme
ggplot() + geom_histogram(aes(x = z, y = after_stat(density)),
data = density_df,  color = "black",
fill = "grey85", bins = 20) +
my_theme +
scale_y_continuous(expand = expansion(mult = c(0.0, .01)))
ggplot() + geom_histogram(aes(x = z, y = after_stat(density)),
data = density_df,  color = "black",
fill = "grey85", bins = 20) +
my_theme +
scale_y_continuous(expand = expansion(mult = c(0.0, .01))) +
theme(axis.ticks.x =  element_blank(),
axis.title.y =  element_blank(),
axis.text.y =  element_blank(),
axis.ticks.y =  element_blank())
ggplot() + geom_histogram(aes(x = z, y = after_stat(density)),
data = density_df,  color = "black",
fill = "grey85", bins = 20) +
my_theme +
scale_y_continuous(expand = expansion(mult = c(0.0, .01))) +
theme(axis.ticks.x =  element_blank(),
axis.title.y =  element_blank(),
axis.text.y =  element_blank(),
axis.ticks.y =  element_blank()) +
geom_vline(xintercept = z_star, col = "purple", linewidth = 1)
ggplot() + geom_histogram(aes(x = z, y = after_stat(density)),
data = density_df,  color = "black",
fill = "grey85", bins = 20) +
my_theme +
scale_y_continuous(expand = expansion(mult = c(0.0, .01))) +
theme(axis.ticks.x =  element_blank(),
axis.title.y =  element_blank(),
axis.text.y =  element_blank(),
axis.ticks.y =  element_blank()) +
geom_vline(xintercept = z_star, col = "purple", linewidth = 1) +
annotate("rect", xmin = z_star, xmax = Inf,
ymin = 0, ymax = Inf, fill = "purple", alpha = 0.15)
ggplot() + geom_histogram(aes(x = z, y = after_stat(density)),
data = density_df,  color = "black",
fill = "grey85", bins = 20) +
my_theme +
scale_y_continuous(expand = expansion(mult = c(0.0, .01))) +
theme(axis.ticks.x =  element_blank(),
axis.title.y =  element_blank(),
axis.text.y =  element_blank(),
axis.ticks.y =  element_blank()) +
geom_vline(xintercept = z_star, col = "purple", linewidth = 1) +
annotate("rect", xmin = z_star, xmax = -Inf,
ymin = 0, ymax = Inf, fill = "purple", alpha = 0.15)
ggplot() + geom_histogram(aes(x = z, y = after_stat(density)),
data = density_df,  color = "black",
fill = "grey85", bins = 20) +
my_theme +
scale_y_continuous(expand = expansion(mult = c(0.0, .01))) +
theme(axis.ticks.x =  element_blank(),
axis.title.y =  element_blank(),
axis.text.y =  element_blank(),
axis.ticks.y =  element_blank()) +
geom_vline(xintercept = z_star, col = "purple", linewidth = 1) +
annotate("rect", xmin = z_star, xmax = -Inf,
ymin = 0, ymax = Inf, fill = "purple", alpha = 0.15) +
annotate("rect", xmin = Inf, xmax = -z_star,
ymin = 0, ymax = Inf, fill = "purple", alpha = 0.15)
p <- ggplot() + geom_histogram(aes(x = z, y = after_stat(density)),
data = density_df,  color = "black",
fill = "grey85", bins = 20) +
my_theme +
scale_y_continuous(expand = expansion(mult = c(0.0, .01))) +
theme(axis.ticks.x =  element_blank(),
axis.title.y =  element_blank(),
axis.text.y =  element_blank(),
axis.ticks.y =  element_blank()) +
geom_vline(xintercept = z_star, col = "purple", linewidth = 1) +
annotate("rect", xmin = z_star, xmax = -Inf,
ymin = 0, ymax = Inf, fill = "purple", alpha = 0.15) +
annotate("rect", xmin = Inf, xmax = -z_star,
ymin = 0, ymax = Inf, fill = "purple", alpha = 0.15) +
xlab("Null z-scores") +
xlim(c(-3.5, 3.5))
p
ggsave(filename = paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_3/histogram.png"),
plot = p, device = "png", width = 4, height = 3)
# cowplot option
left <- cowplot::plot_grid(NULL, p + ggtitle("\n"), NULL, NULL)
right <- cowplot::plot_grid(NULL, NULL, ncol = 1, labels = c("b", "c"))
fig <- cowplot::plot_grid(left, right, ncol = 2, rel_widths = c(2/3, 1/3), labels = c("a"))
ggsave(filename = paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_3/cowplot.pdf"),
plot = fig, device = "pdf", scale = 1.2, width = 7.5, height = 5)
ggsave(filename = paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_3/cowplot.pdf"),
plot = fig, device = "pdf", scale = 1.2, width = 7.5, height = 5)
# Load packages
library(tidyverse)
library(katlabutils)
library(cowplot)
# Load scripts and results
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
undercover_res <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_1_processed.rds")) |>
filter(n_nonzero_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_nonzero_control >= N_NONZERO_CONTROL_CUTOFF) |>
mutate(Method = forcats::fct_recode(Method,
"SCEPTRE" = "Sceptre",
"t-test" = "Liscovitch Method",
"MAST" = "Schraivogel Method",
"KS test" = "Weissman Method",
"MIMOSCA" = "Mimosca"
))
x <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_1_processed.rds"))
library(lowmoi)
library(tidyverse)
sceptre2_results_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
sample_size_df <- readRDS(paste0(sceptre2_results_dir, "dataset_sample_sizes/n_nonzero_cells_per_grna.rds"))
undercover_res <- readRDS(paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_0423.rds"))
undercover_res_processed <- process_undercover_result(undercover_res, sample_size_df) |>
mutate(p_value = ifelse(p_value <= 0, 1e-50, p_value))
saveRDS(object = undercover_res_processed,
paste0(sceptre2_results_dir, "undercover_grna_analysis/undercover_result_grp_1_0423_processed.rds"))
gc()
# Load packages
library(tidyverse)
library(katlabutils)
library(cowplot)
# Load scripts and results
shared_fig_script <- paste0(.get_config_path("LOCAL_CODE_DIR"), "sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R")
source(shared_fig_script)
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
undercover_res <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_1_0423_processed.rds")) |>
filter(n_nonzero_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_nonzero_control >= N_NONZERO_CONTROL_CUTOFF) |>
mutate(Method = forcats::fct_recode(Method,
"SCEPTRE" = "Sceptre",
"t-test" = "Liscovitch Method",
"MAST" = "Schraivogel Method",
"KS test" = "Weissman Method",
"MIMOSCA" = "Mimosca"
))
undercover_res <- readRDS(paste0(result_dir,
"undercover_grna_analysis/undercover_result_grp_1_0423_processed.rds")) |>
dplyr::filter(n_nonzero_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_nonzero_control >= N_NONZERO_CONTROL_CUTOFF) |>
mutate(Method = forcats::fct_recode(Method,
"SCEPTRE" = "Sceptre",
"t-test" = "Liscovitch Method",
"MAST" = "Schraivogel Method",
"KS test" = "Weissman Method",
"MIMOSCA" = "Mimosca"
))
alpha <- 0.1
my_cols <- c("Weissman Method" = "purple3",
"Weissman Meth." = "purple3",
"KS test" = "purple3",
"Schraivogel Method" = "aquamarine4",
"Schraivogel Meth." = "aquamarine4",
"MAST" = "aquamarine4",
"Mimosca" = "palevioletred3",
"MIMOSCA" = "palevioletred3",
"Liscovitch Method" = "navy",
"Liscovitch Meth." = "navy",
"t-test" = "navy",
"Seurat De" = "dodgerblue3",
"Seurat De (w/ strict QC)" = "dodgerblue4",
"Seurat De (w/o strict QC)" = "dodgerblue",
"NB Reg (w/o covariates)" = "darkgoldenrod3",
"NB Reg (w/ covariates)" = "darkgoldenrod4",
"NB Regression" = "goldenrod3",
"SCEPTRE" = "firebrick3",
"SCEPTRE (w/o covariates)" = "dodgerblue",
"Permutation test" = "slategray4")
make_figure_row <- function(dataset, name, print_legend) {
my_methods <- c("KS test", "MAST", "MIMOSCA", "t-test", "Seurat De")
my_values <- my_cols[names(my_cols) %in% my_methods]
df_sub <- undercover_res |>
filter(dataset == !!dataset,
Method %in% my_methods)
bonf_thresh <- alpha/(nrow(df_sub)/length(my_methods))
p2 <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.55) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
geom_hline(yintercept = bonf_thresh, linetype = "dashed") +
scale_color_manual(values = my_values)
if (print_legend) {
p2 <- p2 +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.78, 0.22),
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm'),
legend.background = element_blank()) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.1,
default.unit="inch",
override.aes = list(size = 2.5)))
} else {
p2 <- p2 + my_theme_no_legend
}
bonf_reject_df <- compute_n_bonf_rejections(df_sub, alpha = alpha)
p3 <- bonf_reject_df |>
ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
scale_y_continuous(trans = scales::pseudo_log_trans(base = 10, sigma = 0.2),
expand = c(0,0),
breaks = c(0, 1, 10, 100, 1000, 8000)) +
ylab("False positives") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank()) +
scale_fill_manual(values = my_cols)
p_row <- plot_grid(p2, p3, nrow = 1, labels = NULL,
align = "h", rel_widths = c(2,1))
p_row
}
r0 <- ggplot() +
theme_minimal() +
ggtitle("Undercover gRNA calibration assessment") +
theme(plot.title = element_text(hjust = 0.5, size=11))
r1 <- make_figure_row(dataset = "papalexi_eccite_screen_gene", name = "Papalexi gene modality", print_legend = TRUE)
conflicts_prefer(dplyr::filter)
my_cols <- c("Weissman Method" = "purple3",
"Weissman Meth." = "purple3",
"KS test" = "purple3",
"Schraivogel Method" = "aquamarine4",
"Schraivogel Meth." = "aquamarine4",
"MAST" = "aquamarine4",
"Mimosca" = "palevioletred3",
"MIMOSCA" = "palevioletred3",
"Liscovitch Method" = "navy",
"Liscovitch Meth." = "navy",
"t-test" = "navy",
"Seurat De" = "dodgerblue3",
"Seurat De (w/ strict QC)" = "dodgerblue4",
"Seurat De (w/o strict QC)" = "dodgerblue",
"NB Reg (w/o covariates)" = "darkgoldenrod3",
"NB Reg (w/ covariates)" = "darkgoldenrod4",
"NB Regression" = "goldenrod3",
"SCEPTRE" = "firebrick3",
"SCEPTRE (w/o covariates)" = "dodgerblue",
"Permutation test" = "slategray4")
# The following plot (the letters are rows):
# a) three empty columns for undercover schematic
# b) col1: Frangieh IFN gamma transformed
#    col2: Frangieh IFN gamma transformed
#    col3: Frangieh IFN gamma N bonferoni rejections (at level 0.1)
# c) same as above, but with Papalexi
# d) same as above, but with simulated OR Schraivogel enhancer screen
# restricting attention to pairs with >= 10 treatment cells and > 10 control cells in all cases
make_figure_row <- function(dataset, name, print_legend) {
my_methods <- c("KS test", "MAST", "MIMOSCA", "t-test", "Seurat De")
my_values <- my_cols[names(my_cols) %in% my_methods]
df_sub <- undercover_res |>
filter(dataset == !!dataset,
Method %in% my_methods)
bonf_thresh <- alpha/(nrow(df_sub)/length(my_methods))
p2 <- ggplot(data = df_sub, mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-8, size = 0.55) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
geom_hline(yintercept = bonf_thresh, linetype = "dashed") +
scale_color_manual(values = my_values)
if (print_legend) {
p2 <- p2 +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.78, 0.22),
legend.text=element_text(size = 9),
legend.margin=margin(t = 0, unit='cm'),
legend.background = element_blank()) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.1,
default.unit="inch",
override.aes = list(size = 2.5)))
} else {
p2 <- p2 + my_theme_no_legend
}
bonf_reject_df <- compute_n_bonf_rejections(df_sub, alpha = alpha)
p3 <- bonf_reject_df |>
ggplot2::ggplot(ggplot2::aes(x = Method, y = n_reject, fill = Method)) +
ggplot2::geom_col(col = "black") +
scale_y_continuous(trans = scales::pseudo_log_trans(base = 10, sigma = 0.2),
expand = c(0,0),
breaks = c(0, 1, 10, 100, 1000, 8000)) +
ylab("False positives") +
xlab("Method") + my_theme_no_legend +
theme(axis.text.x = element_blank()) +
scale_fill_manual(values = my_cols)
p_row <- plot_grid(p2, p3, nrow = 1, labels = NULL,
align = "h", rel_widths = c(2,1))
p_row
}
r0 <- ggplot() +
theme_minimal() +
ggtitle("Undercover gRNA calibration assessment") +
theme(plot.title = element_text(hjust = 0.5, size=11))
r1 <- make_figure_row(dataset = "papalexi_eccite_screen_gene", name = "Papalexi gene modality", print_legend = TRUE)
r2 <- make_figure_row(dataset = "frangieh_ifn_gamma_gene", name = "Frangieh IFN-\u03B3", print_legend = FALSE)
fig <- plot_grid(r1, r2, nrow = 1)
fig
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/genes_figs/fig_1_bottom.png")
ggsave(filename = to_save_fp, plot = fig, device = "png",
scale = 1.1, width = 7, height = 2, dpi = 330)
fig
to_save_fp
ggsave(filename = to_save_fp, plot = fig, device = "png",
scale = 1.1, width = 7, height = 2, dpi = 330)
to_save_fp <- paste0(.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_1/fig_1_bottom.png")
ggsave(filename = to_save_fp, plot = fig, device = "png",
scale = 1.1, width = 7, height = 2, dpi = 330)
