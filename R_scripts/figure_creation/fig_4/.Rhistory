ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-10, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3, 1e-5)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-2, 1e-5, 1e-8)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
# ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
scale_color_manual(values = my_values) +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.25, 0.86),
legend.text = element_text(size = 11),
legend.margin = margin(t = 0, unit = 'cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-0, 1e-2, 1e-4)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-4, 1e-7)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
# put the pieces together
final_plot <- ggarrange(
# ggarrange(qq_frangieh, qq_papalexi, nrow = 1),
cowplot::plot_grid(qq_frangieh, qq_papalexi, nrow = 1, labels = c("a", "b")),
as_ggplot(nt_table_g),
as_ggplot(pc_table_g),
labels = c("", "c", "d"),
heights = c(1.2, 1, 0.8),
ncol = 1
)
# define the file path
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4.png"
)
# save the figure
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7.5,
height = 10.0,
bg = "white")
# add line separating the dataset column from the rest
pc_table_g <- gtable_add_grob(pc_table_g,
grobs = segmentsGrob(
x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(1,"npc"),
gp = gpar(lwd = 4.0)),
t = 8, b = 1, l = 2, r = 2)
# add title
title <- textGrob("Number of true positives",gp=gpar(fontsize=12))
padding <- unit(5,"mm")
pc_table_g <- gtable_add_rows(
pc_table_g,
heights = grobHeight(title) + padding,
pos = 0)
pc_table_g <- gtable_add_grob(
pc_table_g,
title,
1, 1, 1, ncol(pc_table_g))
# left justify the first column
id <- which(grepl("core-fg", pc_table_g$layout$name ) & pc_table_g$layout$l == 1 )
for (i in id) {
pc_table_g$grobs[[i]]$x <- unit(0.05, "npc")
pc_table_g$grobs[[i]]$hjust <- 0
}
# read colors from my_cols
my_values <- my_cols[names(my_cols) %in% c("Seurat-Wilcox", "Seurat-NB", "SCEPTRE")]
# Frangieh QQ plot
qq_frangieh <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "frangieh_ifn_gamma_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-10, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3, 1e-5)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-2, 1e-5, 1e-8)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
# ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
scale_color_manual(values = my_values) +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.25, 0.86),
legend.text = element_text(size = 11),
legend.margin = margin(t = 0, unit = 'cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-0, 1e-2, 1e-4)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-4, 1e-7)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
# put the pieces together
final_plot <- ggarrange(
# ggarrange(qq_frangieh, qq_papalexi, nrow = 1),
cowplot::plot_grid(qq_frangieh, qq_papalexi, nrow = 1, labels = c("a", "b")),
as_ggplot(nt_table_g),
as_ggplot(pc_table_g),
labels = c("", "c", "d"),
heights = c(1.2, 1, 0.8),
ncol = 1
)
# define the file path
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4.png"
)
# save the figure
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7.5,
height = 10.0,
bg = "white")
# add line separating the dataset column from the rest
pc_table_g <- gtable_add_grob(pc_table_g,
grobs = segmentsGrob(
x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(1,"npc"),
gp = gpar(lwd = 4.0)),
t = 7, b = 1, l = 2, r = 2)
# add title
title <- textGrob("Number of true positives",gp=gpar(fontsize=12))
padding <- unit(5,"mm")
pc_table_g <- gtable_add_rows(
pc_table_g,
heights = grobHeight(title) + padding,
pos = 0)
pc_table_g <- gtable_add_grob(
pc_table_g,
title,
1, 1, 1, ncol(pc_table_g))
# left justify the first column
id <- which(grepl("core-fg", pc_table_g$layout$name ) & pc_table_g$layout$l == 1 )
for (i in id) {
pc_table_g$grobs[[i]]$x <- unit(0.05, "npc")
pc_table_g$grobs[[i]]$hjust <- 0
}
# read colors from my_cols
my_values <- my_cols[names(my_cols) %in% c("Seurat-Wilcox", "Seurat-NB", "SCEPTRE")]
# Frangieh QQ plot
qq_frangieh <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "frangieh_ifn_gamma_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-10, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3, 1e-5)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-2, 1e-5, 1e-8)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
# ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
scale_color_manual(values = my_values) +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.25, 0.86),
legend.text = element_text(size = 11),
legend.margin = margin(t = 0, unit = 'cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-0, 1e-2, 1e-4)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-4, 1e-7)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
# put the pieces together
final_plot <- ggarrange(
# ggarrange(qq_frangieh, qq_papalexi, nrow = 1),
cowplot::plot_grid(qq_frangieh, qq_papalexi, nrow = 1, labels = c("a", "b")),
as_ggplot(nt_table_g),
as_ggplot(pc_table_g),
labels = c("", "c", "d"),
heights = c(1.2, 1, 0.8),
ncol = 1
)
# define the file path
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4.png"
)
# save the figure
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7.5,
height = 10.0,
bg = "white")
# create gtable for positive control table
pc_table_g <- tableGrob(n_true_rejections_tab, theme = table_theme, rows = NULL)
# add bold font for lowest numbers of false rejections
for (row_idx in seq(1, nrow(n_true_rejections_tab))) {
row <- as.integer(n_true_rejections_tab[row_idx, seq(2, 8L)])
row[is.na(row)] <- 0L
col_idxs <- which(row == max(row))
for (col_idx in col_idxs) {
pc_table_g$grobs[find_cell(pc_table_g, row_idx + 1L, col_idx + 1L, "core-fg")][[1]][["gp"]] <- gpar(fontface="bold")
}
}
# add line separating the PC pairs column from the rest
pc_table_g <- gtable_add_grob(pc_table_g,
grobs = segmentsGrob(
x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(1,"npc"),
gp = gpar(lwd = 4.0)),
t = 8, b = 1, l = 9, r = 9)
# add line separating the dataset column from the rest
pc_table_g <- gtable_add_grob(pc_table_g,
grobs = segmentsGrob(
x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(1,"npc"),
gp = gpar(lwd = 4.0)),
t = 7, b = 1, l = 2, r = 2)
# add title
title <- textGrob("Number of true positives",gp=gpar(fontsize=12))
padding <- unit(5,"mm")
pc_table_g <- gtable_add_rows(
pc_table_g,
heights = grobHeight(title) + padding,
pos = 0)
pc_table_g <- gtable_add_grob(
pc_table_g,
title,
1, 1, 1, ncol(pc_table_g))
# left justify the first column
id <- which(grepl("core-fg", pc_table_g$layout$name ) & pc_table_g$layout$l == 1 )
for (i in id) {
pc_table_g$grobs[[i]]$x <- unit(0.05, "npc")
pc_table_g$grobs[[i]]$hjust <- 0
}
#################################################################
# Create QQ plots
#################################################################
# read colors from my_cols
my_values <- my_cols[names(my_cols) %in% c("Seurat-Wilcox", "Seurat-NB", "SCEPTRE")]
# Frangieh QQ plot
qq_frangieh <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "frangieh_ifn_gamma_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-10, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3, 1e-5)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-2, 1e-5, 1e-8)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
# ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
scale_color_manual(values = my_values) +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.25, 0.86),
legend.text = element_text(size = 11),
legend.margin = margin(t = 0, unit = 'cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-0, 1e-2, 1e-4)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-4, 1e-7)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
#################################################################
# Put the pieces together and save
#################################################################
# put the pieces together
final_plot <- ggarrange(
# ggarrange(qq_frangieh, qq_papalexi, nrow = 1),
cowplot::plot_grid(qq_frangieh, qq_papalexi, nrow = 1, labels = c("a", "b")),
as_ggplot(nt_table_g),
as_ggplot(pc_table_g),
labels = c("", "c", "d"),
heights = c(1.2, 1, 0.8),
ncol = 1
)
# define the file path
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4.png"
)
# save the figure
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7.5,
height = 10.0,
bg = "white")
# create gtable for positive control table
pc_table_g <- tableGrob(n_true_rejections_tab, theme = table_theme, rows = NULL)
# add bold font for lowest numbers of false rejections
for (row_idx in seq(1, nrow(n_true_rejections_tab))) {
row <- as.integer(n_true_rejections_tab[row_idx, seq(2, 8L)])
row[is.na(row)] <- 0L
col_idxs <- which(row == max(row))
for (col_idx in col_idxs) {
pc_table_g$grobs[find_cell(pc_table_g, row_idx + 1L, col_idx + 1L, "core-fg")][[1]][["gp"]] <- gpar(fontface="bold")
}
}
# add line separating the PC pairs column from the rest
pc_table_g <- gtable_add_grob(pc_table_g,
grobs = segmentsGrob(
x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(1,"npc"),
gp = gpar(lwd = 4.0)),
t = 8, b = 1, l = 9, r = 9)
# add line separating the dataset column from the rest
pc_table_g <- gtable_add_grob(pc_table_g,
grobs = segmentsGrob(
x0 = unit(0,"npc"),
y0 = unit(0,"npc"),
x1 = unit(0,"npc"),
y1 = unit(1,"npc"),
gp = gpar(lwd = 4.0)),
t = 8, b = 1, l = 2, r = 2)
# add title
title <- textGrob("Number of true positives",gp=gpar(fontsize=12))
padding <- unit(5,"mm")
pc_table_g <- gtable_add_rows(
pc_table_g,
heights = grobHeight(title) + padding,
pos = 0)
pc_table_g <- gtable_add_grob(
pc_table_g,
title,
1, 1, 1, ncol(pc_table_g))
# left justify the first column
id <- which(grepl("core-fg", pc_table_g$layout$name ) & pc_table_g$layout$l == 1 )
for (i in id) {
pc_table_g$grobs[[i]]$x <- unit(0.05, "npc")
pc_table_g$grobs[[i]]$hjust <- 0
}
#################################################################
# Create QQ plots
#################################################################
# read colors from my_cols
my_values <- my_cols[names(my_cols) %in% c("Seurat-Wilcox", "Seurat-NB", "SCEPTRE")]
# Frangieh QQ plot
qq_frangieh <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "frangieh_ifn_gamma_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-10, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3, 1e-5)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-2, 1e-5, 1e-8)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
# ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
scale_color_manual(values = my_values) +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.25, 0.86),
legend.text = element_text(size = 11),
legend.margin = margin(t = 0, unit = 'cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-0, 1e-2, 1e-4)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-4, 1e-7)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
#################################################################
# Put the pieces together and save
#################################################################
# put the pieces together
final_plot <- ggarrange(
# ggarrange(qq_frangieh, qq_papalexi, nrow = 1),
cowplot::plot_grid(qq_frangieh, qq_papalexi, nrow = 1, labels = c("a", "b")),
as_ggplot(nt_table_g),
as_ggplot(pc_table_g),
labels = c("", "c", "d"),
heights = c(1.2, 1, 0.8),
ncol = 1
)
# define the file path
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4.png"
)
# save the figure
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7.5,
height = 10.0,
bg = "white")
# save the figure
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7.5,
height = 10.0,
bg = "white", scale = 1.0)
# save the figure
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7.5,
height = 10.0,
bg = "white", scale = 0.9)
# save the figure
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7.5,
height = 10.5,
bg = "white", scale = 0.9)
# put the pieces together
final_plot <- ggarrange(
# ggarrange(qq_frangieh, qq_papalexi, nrow = 1),
cowplot::plot_grid(qq_frangieh, qq_papalexi, nrow = 1, labels = c("a", "b")),
as_ggplot(nt_table_g),
as_ggplot(pc_table_g),
labels = c("", "c", "d"),
heights = c(1., 1, 0.8),
ncol = 1
)
# define the file path
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4.png"
)
# save the figure
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7.5,
height = 10,
bg = "white", scale = 0.9)
