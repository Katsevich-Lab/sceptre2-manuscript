stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10)) +
scale_y_continuous(trans = revlog_trans(10)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
# ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
scale_color_manual(values = my_values) +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.25, 0.86),
legend.text = element_text(size = 11),
legend.margin = margin(t = 0, unit = 'cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
qq_frangieh
# Frangieh QQ plot
qq_frangieh <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "frangieh_ifn_gamma_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-10, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3, 1e-5)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-2, 1e-5, 1e-8)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
# ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
scale_color_manual(values = my_values) +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.25, 0.86),
legend.text = element_text(size = 11),
legend.margin = margin(t = 0, unit = 'cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
qq_frangieh
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = ) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3,1e-5)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
qq_papalexi
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = ) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3,1e-5)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
qq_papalexi
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-4, 1e-7)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3, 1e-5)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
# Frangieh QQ plot
qq_frangieh <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "frangieh_ifn_gamma_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-10, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3, 1e-5)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-2, 1e-5, 1e-8)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
# ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
scale_color_manual(values = my_values) +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.25, 0.86),
legend.text = element_text(size = 11),
legend.margin = margin(t = 0, unit = 'cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-4, 1e-7)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3, 1e-5)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
qq_papalexi
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-0, 1e-2, 1e-4)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-4, 1e-7)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
qq_papalexi
qq_frangieh
# Frangieh QQ plot
qq_frangieh <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "frangieh_ifn_gamma_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-10, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-3, 1e-5)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-2, 1e-5, 1e-8)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
# ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
ggtitle("Frangieh (IFN-\u03B3) neg. controls") +
scale_color_manual(values = my_values) +
my_theme +
theme(legend.title = element_blank(),
legend.position = c(0.25, 0.86),
legend.text = element_text(size = 11),
legend.margin = margin(t = 0, unit = 'cm')) +
guides(color = guide_legend(
keywidth = 0.0,
keyheight = 0.2,
default.unit = "inch",
override.aes = list(size = 2.5)))
# Papalexi QQ plot
qq_papalexi <- undercover_res |>
mutate(Method = fct_relevel(Method, "Seurat-Wilcox", "SCEPTRE", after = Inf)) |>
filter(dataset == "papalexi_eccite_screen_gene",
method %in% c("sceptre", "seurat_de", "seurat_de_nb")) |>
ggplot(mapping = aes(y = p_value, col = Method)) +
stat_qq_points(ymin = 1e-9, size = 0.85) +
stat_qq_band() +
scale_x_continuous(trans = revlog_trans(10), breaks = c(1e-0, 1e-2, 1e-4)) +
scale_y_continuous(trans = revlog_trans(10), breaks = c(1e-1, 1e-4, 1e-7)) +
labs(x = "Expected null p-value", y = "Observed p-value") +
geom_abline(col = "black") +
ggtitle("Papalexi (gene) neg. controls") +
scale_color_manual(values = my_values) +
my_theme_no_legend
# put the pieces together
final_plot <- ggarrange(
# ggarrange(qq_frangieh, qq_papalexi, nrow = 1),
cowplot::plot_grid(qq_frangieh, qq_papalexi, nrow = 1, labels = c("a", "b")),
as_ggplot(nt_table_g),
as_ggplot(pc_table_g),
labels = c("", "c", "d"),
heights = c(1.2, 1, 0.8),
ncol = 1
)
# define the file path
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4.png"
)
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4_new.png")
# put the pieces together
final_plot <- ggarrange(
# ggarrange(qq_frangieh, qq_papalexi, nrow = 1),
cowplot::plot_grid(qq_frangieh, qq_papalexi, nrow = 1, labels = c("a", "b")),
as_ggplot(nt_table_g),
as_ggplot(pc_table_g),
labels = c("", "c", "d"),
heights = c(1.2, 1, 0.8),
ncol = 1
)
final_plot
# define the file path
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4.png"
)
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4_new.png"
)
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7,
height = 8.5,
bg = "white")
# define the file path
fig_4_filename <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/fig_4/fig_4.png"
)
# save the figure
ggsave(filename = fig_4_filename,
plot = final_plot,
device = "png",
width = 7,
height = 8.5,
bg = "white")
181 + 170 + 181 + 25 + 2 + 20
181 + 170 + 181 + 25 + 2 + 25
library(ondisc)
set.seed(4)
sceptre2_dir <- .get_config_path("LOCAL_SCEPTRE2_DATA_DIR")
# Load packages
library(tidyverse)
library(katlabutils)
library(ggpubr)
library(grid)
library(gridExtra)
library(gtable)
# Resolve namespace conflicts
conflicts_prefer(dplyr::filter)
#################################################################
# Set analysis parameters
#################################################################
reject_thresh <- 1e-5   # threshold for rejection of positive controls
alpha <- 0.1            # target FWER level for negative controls
max_false_reject <- 50  # maximum false rejections to display power
# source shared figure script
shared_fig_script <- paste0(
.get_config_path("LOCAL_CODE_DIR"),
"sceptre2-manuscript/R_scripts/figure_creation/shared_figure_script.R"
)
source(shared_fig_script)
# directory with results
result_dir <- paste0(.get_config_path("LOCAL_SCEPTRE2_DATA_DIR"), "results/")
# results of undercover analysis
undercover_res <- readRDS(paste0(
result_dir,
"undercover_grna_analysis/undercover_result_grp_1_0523_processed.rds"
)) |>
filter(
n_nonzero_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_nonzero_control >= N_NONZERO_CONTROL_CUTOFF
)
pc_res <- readRDS(paste0(
result_dir,
"positive_control_analysis/pc_results_0124_processed.rds"
)) |>
dplyr::filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF)
#################################################################
# Process negative control results into final table
#################################################################
n_false_rejections <- undercover_res |>
filter(!(Method %in% c(c("NB regression (no covariates)",
"NB regression (w/ covariates)",
"SCEPTRE (no covariates)")))) |>
group_by(dataset_rename, Method) |>
summarize(n_false_reject = sum(p_value < alpha/n()),
Method = Method[1],
`NT pairs` = n(),
.groups = "drop")
n_false_rejections_tab <- n_false_rejections |>
pivot_wider(names_from = Method, values_from = n_false_reject) |>
relocate("SCEPTRE", .after = "dataset_rename") |>
relocate(`NT pairs`, .after = `KS test`) |>
rename(Dataset = dataset_rename)
n_false_rejections_tab <- n_false_rejections_tab |>
mutate(across(everything(), as.character)) |>
bind_rows(
n_false_rejections_tab |>
summarise(across(-c(Dataset, `NT pairs`), mean)) |>
mutate(Dataset = "Average") |>
mutate(across(-Dataset, function(x)(as.character(round(x, 1)))))
)  |>
mutate(`NT pairs` = ifelse(is.na(`NT pairs`), "", `NT pairs`))
n_false_rejections_tab <- n_false_rejections_tab[,c("Dataset", "SCEPTRE", "Seurat-Wilcox", "Seurat-NB", "t-test", "MAST", "KS test", "MIMOSCA", "NT pairs")]
colnames(n_false_rejections_tab)[colnames(n_false_rejections_tab) == "Seurat-Wilcox"] <- "Seurat-\nWilcox"
colnames(n_false_rejections_tab)[colnames(n_false_rejections_tab) == "Seurat-NB"] <- "Seurat-\nNB"
colnames(n_false_rejections_tab)[colnames(n_false_rejections_tab) == "NT pairs"] <- "NT\npairs"
#################################################################
# Process positive control results
#################################################################
n_true_rejections_tab <- pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh"))) |>  # remove enhancer targets
filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF) |>
group_by(dataset_rename, Method) |>
summarize(n_pc_reject = sum(p_value < reject_thresh),
`PC pairs` = n(),
Method = Method[1],
.groups = "drop") |>
group_by(dataset_rename) |>
left_join(n_false_rejections,
by = c("dataset_rename", "Method")) |>
mutate(n_pc_reject = ifelse(n_false_reject <= max_false_reject,
as.character(n_pc_reject),
"-")) |>
select(dataset_rename, Method, n_pc_reject, `PC pairs`) |>
pivot_wider(names_from = Method, values_from = n_pc_reject) |>
relocate("SCEPTRE", .after = "dataset_rename") |>
relocate(`PC pairs`, .after = `KS test`) |>
rename(Dataset = dataset_rename)
n_true_rejections_tab <- pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh"))) |>  # remove enhancer targets
filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF) |>
group_by(dataset_rename, Method) |>
summarize(n_pc_reject = sum(p_value < reject_thresh),
`PC pairs` = n(),
Method = Method[1],
.groups = "drop") |>
group_by(dataset_rename) |>
left_join(n_false_rejections,
by = c("dataset_rename", "Method")) |>
mutate(n_pc_reject = ifelse(n_false_reject <= max_false_reject,
as.character(n_pc_reject),
"-")) |>
select(dataset_rename, Method, n_pc_reject, `PC pairs`) |>
pivot_wider(names_from = Method, values_from = n_pc_reject) |>
relocate(`PC pairs`, .after = `KS test`) |>
rename
n_true_rejections_tab <- pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh"))) |>  # remove enhancer targets
filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF) |>
group_by(dataset_rename, Method) |>
summarize(n_pc_reject = sum(p_value < reject_thresh),
`PC pairs` = n(),
Method = Method[1],
.groups = "drop") |>
group_by(dataset_rename) |>
left_join(n_false_rejections,
by = c("dataset_rename", "Method")) |>
mutate(n_pc_reject = ifelse(n_false_reject <= max_false_reject,
as.character(n_pc_reject),
"-")) |>
select(dataset_rename, Method, n_pc_reject, `PC pairs`) |>
pivot_wider(names_from = Method, values_from = n_pc_reject) |>
relocate(`PC pairs`, .after = `KS test`) |>
rename(Dataset = dataset_rename)
n_true_rejections_tab
pc_res
pc_res
pc_res
pc_res$dataset |> unique()
pc_res |> filter(dataset == "simulated_experiment_2_gene")
pc_res
dataset_rename
head(pc_res)
pc_res$dataset_rename |> unique()
pc_res
pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh")))
pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh"))) |>  # remove enhancer targets
filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF)
pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh"))) |>  # remove enhancer targets
filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF) |>
group_by(dataset_rename, Method) |>
summarize(n_pc_reject = sum(p_value < reject_thresh),
`PC pairs` = n(),
Method = Method[1],
.groups = "drop") |>
group_by(dataset_rename)
n_true_rejections_tab <- pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh"))) |>  # remove enhancer targets
filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF) |>
group_by(dataset_rename, Method) |>
summarize(n_pc_reject = sum(p_value < reject_thresh),
`PC pairs` = n(),
Method = Method[1],
.groups = "drop") |>
group_by(dataset_rename)
n_true_rejections_tab
n_true_rejections_tab <- pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh"))) |>  # remove enhancer targets
filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF) |>
group_by(dataset_rename, Method) |>
summarize(n_pc_reject = sum(p_value < reject_thresh),
`PC pairs` = n(),
Method = Method[1],
.groups = "drop") |>
group_by(dataset_rename) |>
left_join(n_false_rejections,
by = c("dataset_rename", "Method"))
n_true_rejections_tab <- pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh"))) |>  # remove enhancer targets
filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF) |>
group_by(dataset_rename, Method) |>
summarize(n_pc_reject = sum(p_value < reject_thresh),
`PC pairs` = n(),
Method = Method[1],
.groups = "drop") |>
group_by(dataset_rename) |>
left_join(n_false_rejections,
by = c("dataset_rename", "Method"))
n_true_rejections_tab
n_true_rejections_tab <- pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh"))) |>  # remove enhancer targets
filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF) |>
group_by(dataset_rename, Method) |>
summarize(n_pc_reject = sum(p_value < reject_thresh),
`PC pairs` = n(),
Method = Method[1],
.groups = "drop") |>
group_by(dataset_rename) |>
left_join(n_false_rejections,
by = c("dataset_rename", "Method"))
n_true_rejections_tab$dataset_rename |> unique()
n_true_rejections_tab$dataset_rename |> filter(dataset == "simulated_experiment_2_gene")
n_true_rejections_tab$dataset_rename |> dplyr::filter(dataset == "simulated_experiment_2_gene")
n_true_rejections_tab |> dplyr::filter(dataset == "simulated_experiment_2_gene")
n_true_rejections_tab
n_true_rejections_tab
n_true_rejections_tab$dataset_rename |> unique()
n_true_rejections_tab$dataset_rename |> filter(dataset_rename = "simulated_experiment_2_gene")
n_true_rejections_tab$dataset_rename |> filter(dataset_rename == "simulated_experiment_2_gene")
n_true_rejections_tab |> filter(dataset_rename == "simulated_experiment_2_gene")
<- pc_res |>
n_true_rejections_tab <- pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh"))) |>  # remove enhancer targets
filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF) |>
group_by(dataset_rename, Method) |>
summarize(n_pc_reject = sum(p_value < reject_thresh),
`PC pairs` = n(),
Method = Method[1],
.groups = "drop") |>
group_by(dataset_rename) |>
left_join(n_false_rejections,
by = c("dataset_rename", "Method")) |>
mutate(n_pc_reject = ifelse(n_false_reject <= max_false_reject,
as.character(n_pc_reject),
"-")) |>
select(dataset_rename, Method, n_pc_reject, `PC pairs`) |>
pivot_wider(names_from = Method, values_from = n_pc_reject) |>
relocate("SCEPTRE", .after = "dataset_rename") |>
relocate(`PC pairs`, .after = `KS test`) |>
rename(Dataset = dataset_rename)
n_true_rejections_tab <- pc_res |>
filter(!(grna_group %in% c("GATA1-enh", "MYC-enh", "ZFPM2-enh"))) |>  # remove enhancer targets
filter(n_treatment >= N_NONZERO_TREATMENT_CUTOFF,
n_control >= N_NONZERO_CONTROL_CUTOFF) |>
group_by(dataset_rename, Method) |>
summarize(n_pc_reject = sum(p_value < reject_thresh),
`PC pairs` = n(),
Method = Method[1],
.groups = "drop") |>
group_by(dataset_rename) |>
left_join(n_false_rejections,
by = c("dataset_rename", "Method")) |>
mutate(n_pc_reject = ifelse(n_false_reject <= max_false_reject,
as.character(n_pc_reject),
"-")) |>
select(dataset_rename, Method, n_pc_reject, `PC pairs`) |>
pivot_wider(names_from = Method, values_from = n_pc_reject) |>
relocate(`PC pairs`, .after = `KS test`) |>
rename(Dataset = dataset_rename)
n_true_rejections_tab
0.1/1000
2.5 * (0.1/1000)
2.5 * (1000/0.1)
25000 / 5000
1000
1/25000
